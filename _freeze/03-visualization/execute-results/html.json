{
  "hash": "1da7ba7d21ff90fcce37596cec5ddaaa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Visualization and Descriptive Stats\"\nauthor: \"Bella Ratmelia\"\nformat: revealjs\n---\n\n\n\n## Today's Outline\n\n1.  Descriptive Statistics\n2.  Data Visualization in ggplot using Chile voting data, including guidelines on how to choose the appropriate visualization.\n\n## Checklist when you start RStudio\n\n-   Load the project we created last session and open the R script file.\n-   Make sure that `Environment` panel is empty (click on broom icon to clean it up)\n-   Clear the `Console` and `Plots` too.\n-   Re-run the `library(tidyverse)` and `read_csv` portion in the previous session\n\n## Refresher: Loading from CSV into a dataframe\n\nUse `read_csv` from `readr` package (part of `tidyverse`) to load our data into a dataframe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# import tidyverse library\nlibrary(tidyverse)\n\n# read the CSV with Chile voting data\nchile_data <- read_csv(\"data-output/chile_voting_processed.csv\")\n\nchile_data <- chile_data |> \n    mutate(across(c(\"region\", \"sex\", \"education\", \"vote\", \"age_group\", \"support_level\"), as.factor))\n\n#reordering\nchile_data <- chile_data |> \n    mutate(education = factor(education, \n                         levels = c(\"P\", \"S\", \"PS\"), \n                         ordered = TRUE))\n\n# peek at the data, pay attention to the data types!\nglimpse(chile_data)\n```\n:::\n\n\n\n## Basic R Functions for Descriptive Statistics\n\nDescriptive statistics provide summaries about the sample and observations made. These summaries can be quantitative (summary statistics) or visual (graphs). \n\nLet's explore some basic R functions for descriptive statistics using our Chile voting data.\n\n-   `mean()`: arithmetic average\n-   `median()`: middle value\n-   `sd()`: standard deviation\n-   `var()`: variance\n-   `range()`: range of values\n-   `IQR()`: interquartile range\n-   `summary()`: provides a summary of descriptive statistics\n-   `Mode()` function from `DescTools` package: the most frequently occuring value ^[R doesn't have built-in functions for mode, so we need `DescTools` package to get this function]\n\n## Exploring Age Distribution\n\nLet's start by examining the `age` variable in our dataset.\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nlibrary(DescTools)\n\n# Basic statistics\nmean_age <- mean(chile_data$age, na.rm = TRUE)\nmedian_age <- median(chile_data$age, na.rm = TRUE)\nsd_age <- sd(chile_data$age, na.rm = TRUE)\nrange_age <- range(chile_data$age, na.rm = TRUE)\niqr_age <- IQR(chile_data$age, na.rm = TRUE)\nmode_age <- DescTools::Mode(chile_data$age, na.rm = TRUE)\n\n# Print results\ncat(\"Mean age:\", mean_age, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMean age: 38.29 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Median age:\", median_age, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedian age: 36 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Standard deviation of age:\", sd_age, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard deviation of age: 14.66718 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Range of age:\", range_age[1], \"to\", range_age[2], \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRange of age: 18 to 70 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Interquartile range of age:\", iqr_age, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nInterquartile range of age: 24 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Most frequently occuring age:\", mode_age, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMost frequently occuring age: 21 36 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Summary statistics\nsummary(chile_data$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18.00   25.00   36.00   38.29   49.00   70.00 \n```\n\n\n:::\n:::\n\n\n\n## Interpreting Age Statistics\n\nSome possible interpretation:\n\n-   Median is lower than mean, suggesting a slight skew towards older ages\n-   Mode is much lower than both mean and median, indicating a cluster of young adults\n-   With a standard deviation of about 14.67 years, we can expect roughly two-thirds of the participants to fall between 23.62 and 52.96 years old\n-   Middle 50% of participants fall between 25 and 49 years old\n\nIt's much easier if we have a graph to visualize these interpretations!\n\n## Visualizing data with ggplot\n\n-   `ggplot` is plotting package that is included inside `tidyverse` package\n\n-   works best with data in the long format, i.e., a column for all the dimensions/measures and another column for the value for each dimension/measure.\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nchile_data |> \n    ggplot(aes(x = age)) +\n    geom_bar(fill = \"lightblue\") +\n    labs(title = \"Age distribution of respondents\",\n         x = \"Age\",\n         y = \"Number of Respondents\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n## Anatomy of ggplot code\n\nCharts built with ggplot must include the following:\n\n```{.r code-line-numbers=\"|1|2|3|4-6|7\"}\nchile_data |> # <1>\n    ggplot(aes(x = age)) + # <2>\n    geom_bar(fill = \"lightblue\") + # <3>\n    labs(title = \"Age distribution of respondents\", # <4>\n         x = \"Age\", # <4>\n         y = \"Count\") + # <4>\n    theme_minimal() # <5>\n```\n\n1.  **Data** - the dataframe/tibble to visualize.\n\n2.  **Aesthetic mappings (aes)** - describes which variables are mapped to the x, y axes, alpha (transparency) and other visual aesthetics.\n\n3.  **Geometric objects (geom)** - describes how values are rendered; as bars, scatterplot, lines, etc.\n\n4.  Provide titles and labels to your graph\n\n5.  (Optional) apply a theme/look to your graph\n\n\n## Going back to our data\n\nOur PI has asked us to generate visualizations to address these questions about the Chile voting data. The PI also has asked us to write down our interpretation of the visualizations.\n\n1.  What's the distribution of respondents' `statusquo` support?\n2.  What's the distribution of `votes`?\n3.  What's the percentage of the voting intentions on each region?\n4.  Is there any major divide in terms of support for the statusquo across age? Visualize the distribution of `age` and `statusquo`.\n5.  What does the voting intention look like across different education level? Visualize the distribution of `vote` intention on various `education` level.\n6.  Do people's voting intention matches their level of support to the status quo? Compare the distribution of `statusquo` across different `vote` intentions.\n\n## Tip: open the ggplot cheatsheet\n\n::: callout-tip\n**A strategy I'd like to recommend:** briefly read over the `ggplot2` documentation and have them open on a separate tab. Figure out the type of variables you need to visualize (discrete or continuous) to quickly identify which visualization would make sense.\n:::\n\n![](images/ggplot-cheatsheet.jpg){width=\"60%\"}\n\n[ggplot documentation link](https://rstudio.github.io/cheatsheets/html/data-visualization.html)\n\n## Task #1\n\nWhat's the distribution of our respondents' `statusquo`?\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# One continuous variable\nchile_data |> \n    ggplot(aes(x = statusquo)) +\n    geom_histogram(binwidth = 0.1, fill = \"pink\", color = \"maroon\") +\n    labs(title = \"Distribution of Status Quo Scores\",\n       x = \"Status Quo Score\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## Task #2\n\nWhat's the distribution of `votes`?\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# One discrete/categorical variable\nchile_data |> \n    ggplot(aes(x = vote)) +\n    geom_bar(fill = \"skyblue\") +\n    labs(title = \"Distribution of Votes\",\n       x = \"Vote\",\n       y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n\n## Task #3\n\nWhat's the percentage of the voting intentions on each `region`?\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# Showing proportions / percentage as part of whole\nchile_data %>%\n  ggplot(aes(x = vote, fill = region)) +\n  geom_bar(position = \"fill\") +\n  labs(title = \"Distribution of Votes Across Regions\",\n         x = \"Vote\",\n         y = \"Proportion\",\n         fill = \"Region\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Group exercise #1 (solo attempts also ok)\n\nVisualize the `vote` intention by `sex`. Make sure it is shown as proportion. \n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-fold=\"true\"}\nchile_data %>%\n    ggplot(aes(x = vote, fill = sex)) +\n    geom_bar(position = \"fill\") + \n    labs(title = \"Proportion of Sex for each voting intention\",\n       x = \"vote intention\",\n       y = \"percentage\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n\n## Task #4\n\nIs there any major divide in terms of support for the statusquo across age? Visualize the distribution of `age` and `statusquo`.\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# Two variables - both continuous\nchile_data |>\n    ggplot(aes(x = statusquo, y = age, color=support_level)) +\n    geom_point(alpha = 0.5) +\n    labs(title = \"Age vs Status Quo Score\",\n       x = \"Status Quo Score\",\n       y = \"Age\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n\n## Task #5\nWhat does the voting intention look like across different education level? Visualize the distribution of `vote` intention on various `education` level.\n\nWe can achieve this in two ways!\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# Two variables - both discrete/categorical\n\nchile_data |> \n    ggplot(aes(x = education, y = vote)) +\n    geom_jitter(color=\"tomato\", alpha=0.5) +\n    labs(title = \"Voting intention Distribution by Education level\",\n       x = \"Education Level\",\n       y = \"Voting intention\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n## Alternative way\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# Two variables - both discrete/categorical\n# Alternative way\nchile_data |> \n    ggplot(aes(x = education, fill = vote)) +\n    geom_bar(position = \"dodge\") +\n    labs(title = \"Voting intention Distribution by Education Level\",\n       x = \"Education Level\",\n       y = \"Count\") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n## Facets for multiple variables\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# Faceting and multiple variables\nchile_data |> \n    ggplot(aes(x = age, y = statusquo, color = vote)) +\n    geom_point(alpha = 0.5) +\n    facet_wrap(~ education) +\n    labs(title = \"Income vs Status Quo Score by Education Level\",\n       x = \"Age\",\n       y = \"Status Quo Score\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n## Task #6\nDo people's voting intention matches their level of support to the status quo? Compare the distribution of `statusquo` across different `vote` intentions.\n\nLet's layer two kinds of visualization here:\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# Two variables - one categorical, one continuous\nchile_data |> \n    ggplot(aes(x = vote, y = statusquo)) +\n    geom_boxplot(fill = \"pink\") +\n    geom_jitter(alpha = 0.4, color = \"maroon\") + \n    labs(title = \"Distribution Status Quo Score by voting intention\",\n       x = \"Voting intention\",\n       y = \"Status Quo Support level\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n## Group Exercise #2 (solo attempts ok)\n\nUpdate the visualization from task #6 to the following:\n\n-  Replace the boxplot with violin plot (check out ggplot documentation)\n-  Change the fill color for both the violin plot and jitters to other color of your choice.\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Two variables - one categorical, one continuous\nchile_data |> \n    ggplot(aes(x = vote, y = statusquo)) +\n    geom_violin(fill = \"lightblue\") +\n    geom_jitter(alpha = 0.4, color = \"navy\") + \n    labs(title = \"Distribution Status Quo Score by voting intention\",\n       x = \"Voting intention\",\n       y = \"Status Quo Support level\")\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n## Group Exercise #3 (solo attempts ok)\n\nVisualize the distribution of `age_group` for each `vote` intention. To show the difference between sex, show the visualization with `sex` facet.\n\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-fold=\"true\"}\nchile_data |> \n    ggplot(aes(x = vote, fill = age_group)) +\n    geom_bar(alpha = 0.7, position = \"fill\") +\n    facet_wrap( ~ sex) + \n    labs(title = \"Proportion of age groups for each voting intentions by sex\",\n       x = \"Voting intention\",\n       y = \"Proportion\",\n       fill = \"Age Group\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](03-visualization_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n## Is fancier = better?\n\nFancier, more complicated visualization does not necessarily mean better!\n\nTake a look at this award-winning visualization by [Simon Scarr](http://www.simonscarr.com/iraqs-bloody-toll)\n\n\n\n```{=html}\n<iframe width=\"1500\" height=\"600\" src=\"http://www.simonscarr.com/iraqs-bloody-toll\" title=\"Simon Scarr's visualization\"></iframe>\n```\n\n\n\n## Strategy for data visualization with ggplot\n\n1.  Have the ggplot documentation/cheatsheet open\n2.  Decide on how many variables are involved. Is it just one? two? more than two?\n3.  Determine whether the variables are categorical or continuous. If you have more than one, are they both categorical? one categorical + one continuous?\n4.  Refer to the documentation to see which type of visualization would make sense for your variables.\n\n# End of Session 3!\n\nCheck out the [R Graph gallery](https://r-graph-gallery.com/) for inspiration and code samples!\n\nNext session: statistical tests in R using Chile voting data\n",
    "supporting": [
      "03-visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}