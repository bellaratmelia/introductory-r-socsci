[
  {
    "objectID": "sample-quarto.html",
    "href": "sample-quarto.html",
    "title": "Sample Quarto Document",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndiamonds = as_tibble(diamonds)\n\n\n\n\ndiamonds |&gt; print(n = 10)\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\nLet’s create boxplots for carats for each cut quality:\n\ndiamonds |&gt; ggplot(aes(x = cut, y = carat)) +\n    geom_boxplot() +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\\[\nE = mc^2\n\\]\n\n\n\nA lot of people have been saying that R is pretty cool (Wickham, Çetinkaya-Rundel, and Garrett Grolemund 2024)."
  },
  {
    "objectID": "sample-quarto.html#lets-visualize-the-diamonds-data",
    "href": "sample-quarto.html#lets-visualize-the-diamonds-data",
    "title": "Sample Quarto Document",
    "section": "",
    "text": "diamonds |&gt; print(n = 10)\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\nLet’s create boxplots for carats for each cut quality:\n\ndiamonds |&gt; ggplot(aes(x = cut, y = carat)) +\n    geom_boxplot() +\n    theme_minimal()"
  },
  {
    "objectID": "sample-quarto.html#text-with-formulas",
    "href": "sample-quarto.html#text-with-formulas",
    "title": "Sample Quarto Document",
    "section": "",
    "text": "\\[\nE = mc^2\n\\]"
  },
  {
    "objectID": "sample-quarto.html#text-with-citations",
    "href": "sample-quarto.html#text-with-citations",
    "title": "Sample Quarto Document",
    "section": "",
    "text": "A lot of people have been saying that R is pretty cool (Wickham, Çetinkaya-Rundel, and Garrett Grolemund 2024)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introductory R for Social Sciences",
    "section": "",
    "text": "This site serves as a repository for the slides and codes developed for the ‘Introductory R for Social Sciences’ workshop tailored for undergraduate students at SMU. Comprising five sessions, this resource is designed for individuals with fundamental statistics knowledge who are venturing into R programming or coding for the first time."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Introductory R for Social Sciences",
    "section": "",
    "text": "This site serves as a repository for the slides and codes developed for the ‘Introductory R for Social Sciences’ workshop tailored for undergraduate students at SMU. Comprising five sessions, this resource is designed for individuals with fundamental statistics knowledge who are venturing into R programming or coding for the first time."
  },
  {
    "objectID": "index.html#instructor",
    "href": "index.html#instructor",
    "title": "Introductory R for Social Sciences",
    "section": "Instructor",
    "text": "Instructor\nInstructor: Bella Ratmelia, Senior Librarian, Research & Data Services, SMU Libraries"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Introductory R for Social Sciences",
    "section": "Schedule",
    "text": "Schedule\nVenue : YPHSL seminar room 3.1\nTime : 3:30 - 5:30 PM (All sessions)\nClick on the link under “Topic” to access the slides. Slides will be progressively made available throughout the sessions.\n\n\n\n\nSession\nDate\nTopic\nDesccription\n\n\n\n\n~\nBefore the workshop\nPreparation\nComplete the Pre-workshop activities\n\n\n1\nTBD\nIntroduction to R and RStudio\nLearn about setting up RStudio, basic data types and structures in R, and importing data files.\n\n\n2\nTBD\nData wrangling with tidyverse\nLearn about manipulating data with tidyverse, including filtering, selecting, mutating, and grouping data.\n\n\n3\nTBD\nData visualization and Descriptive Statistics\nLearn about creating visualizations with ggplot2 and calculating descriptive statistics like mean, median, etc.\n\n\n4\nTBD\nBasic Inferential Tests\nLearn about conducting t-tests, chi-square tests, ANOVA, and interpreting statistical results in R.\n\n\n5\nTBD\nRegression and Introduction to Quarto\nLearn about correlation, regression, and Quarto for creating dynamic, reproducible R documents.\n\n\n~\nAfter the workshop\n\nPost-workshop exercises"
  },
  {
    "objectID": "index.html#pre-workshop-activities",
    "href": "index.html#pre-workshop-activities",
    "title": "Introductory R for Social Sciences",
    "section": "Pre-workshop activities",
    "text": "Pre-workshop activities\n\nAbout R and RStudio\nR and RStudio are two different but complementary tools used in data analysis and statistical computing. Understanding the difference between them is crucial (especially for beginners).\nR is a programming language and software environment specifically designed for statistical computing and graphics. It’s the core tool that actually processes your data and performs analyses.\nRStudio is an Integrated Development Environment (IDE) for R. Think of it as a user-friendly interface that makes it easier to write R code, manage projects, and visualize output. RStudio is not required to use R, but it significantly enhances the R programming experience!\n\n\n\n\n\n\nImportant\n\n\n\nAlways install R before installing RStudio, as RStudio requires R to function.\n\n\n\n\nStep 1: Install R\n\nGo to https://cran.rstudio.com/\nChoose your operating system (Windows, Mac, or Linux)\nDownload and install the latest version of R\n\n\n\nStep 2: Install RStudio\n\nVisit https://posit.co/download/rstudio-desktop/\nScroll down to “Download RStudio Desktop”\nClick “Download” and install the latest version of RStudio\n\n\n\nStep 3: Install the required packages\n\n\n\n\n\n\nNote\n\n\n\nPackages in R are collections of additional tools, functions, and datasets that extend R’s capabilities. Packages are created by contributors in the R community.\nThink of R as a smartphone, and packages as apps you download to add new features. Each package is designed to help with specific tasks or analyses, like creating graphs, analyzing particular types of data, or performing advanced statistical tests.\nPackages can save us time and leverage expert-created tools without having to write complex code from scratch. It’s very handy!\n\n\n\nOpen RStudio\nCopy the following code: install.packages(c( \"car\", \"rmarkdown\", \"huxtable\", \"gt\", \"apaTables\", \"tidyverse\"))\nPaste it in the Console tab (see image below)\nPress Enter. Rstudio should proceed with installing the packages that we need.\n\n\n\n\nStep 4: Complete the pre-workshop survey\nPlease complete the pre-workshop survey here to share your goals and current knowledge. Your input will help to tailor the workshop contents and pace."
  },
  {
    "objectID": "dataset.html",
    "href": "dataset.html",
    "title": "The WVS Dataset",
    "section": "",
    "text": "For this workshop, we will be using dataset stored in a CSV file called wvs-wave7-sg-ca-nz.csv.\nClick here to open wvs-wave7-sg-ca-nz.csv, and then Ctrl + S / Cmd + S to save it locally into your data folder\n\nData for session 3 onwards\nIf you missed Session 2 where we cleaned and tidy our data, you can download the cleaned data here: wvs_cleaned_v1.csv\n\n\n\n\n\n\nWhat is a CSV?\n\n\n\nA CSV (Comma-Separated Values) file is a type of file that stores data in a plain text format. Each line in the file represents a row of data, and within each row, individual pieces of data (like numbers or words) are separated by commas.\nThis format is commonly used for storing and transferring data, especially in spreadsheets and databases. Because it is literally just plain text, it is an ideal format if you have large amount of data.\nYou can open CSV files in Excel, Google Sheets, or even Notepad!\n\n\n\n\nData Dictionary for WVS dataset\nThe World Values Survey (&lt;www.worldvaluessurvey.org&gt;) is a global network of social scientists studying changing values and their impact on social and political life, led by an international team of scholars, with the WVS association and secretariat headquartered in Stockholm, Sweden.\nThe actual questionnaire consists of over 200 questions with respondents from various countries. For the purpose of this workshop, we will only use 16 variables/questions with respondents from Canada, New Zealand, and Singapore. The 16 variables are:\n\ncountry\n\nCharacter variable containing three-letter country codes: CAN, NZL, and SGP\n\nID\n\nNumeric identifier unique to each survey respondent\n\nfamily_importance\n\nNumeric scale from 1 to 4 measuring importance of family, where 1 indicates highest importance\n\nfriends_importance\n\nNumeric scale from 1 to 4 measuring importance of friends, where 1 indicates highest importance\n\nleisure_importance\n\nNumeric scale from 1 to 4 measuring importance of leisure time, where 1 indicates highest importance\n\nwork_importance\n\nNumeric scale from 1 to 4 measuring importance of work, where 1 indicates highest importance\n\nfreedom\n\nNumeric scale from 1-10 measuring perceived freedom of choice and control, where 10 indicates most freedom\n\nlife_satisfaction\n\nNumeric scale from 1-10 measuring overall life satisfaction, where 10 indicates highest satisfaction\n\nfinancial_satisfaction\n\nNumeric scale from 1-10 measuring satisfaction with financial situation, where 10 indicates highest satisfaction\n\nreligiousity\n\nindicates religious self-identification: A religious person, Not a religious person, An atheist\n\npolitical_scale\n\nNumeric scale from 1-10 measuring left-right political orientation, where 1 is left and 10 is right\n\nsex\n\nindicates respondent’s gender: male or female\n\nbirthyear\n\nNumeric variable indicating year of birth\n\nage\n\nNumeric variable indicating respondent’s age\n\nmarital_status\n\nindicates current marital status: Married, Living together as married, Divorced, Separated, Widowed, Single\n\nemployment\n\nindicates current employment status: Full time, Part time, Self employed, Retired/pensioned, Housewife not otherwise employed, Student, Unemployed\n\n\nBelow is the snapshot of the selected questions and how they appeared in the questionnaire:\n\n\nIf you’d like to find out more about this data, including the original codebook and questionnaire, check out their homepage here: https://www.worldvaluessurvey.org/WVSDocumentationWV7.jsp\n\n\nReferences\nHaerpfer, C., Inglehart, R., Moreno, A., Welzel, C., Kizilova, K., Diez-Medrano, J., Lagos, M., Norris, P., Ponarin, E. & Puranen B. (2022): World Values Survey Wave 7 (2017-2022) Cross-National Data-Set. Version: 4.0.0. World Values Survey Association. DOI: doi.org/10.14281/18241.18"
  },
  {
    "objectID": "05-stats-quarto.html#todays-outline",
    "href": "05-stats-quarto.html#todays-outline",
    "title": "Regression and Presenting Your Result",
    "section": "Today’s Outline",
    "text": "Today’s Outline\n\nRecap: The various packages for tables\nSimple Linear Regression in R\nBinary Logistic Regression in R\n(if time permits) Coding your analysis and writing your report in one place with Quarto."
  },
  {
    "objectID": "05-stats-quarto.html#open-your-project---the-possibly-easier-way",
    "href": "05-stats-quarto.html#open-your-project---the-possibly-easier-way",
    "title": "Regression and Presenting Your Result",
    "section": "Open your project - the (possibly) easier way",
    "text": "Open your project - the (possibly) easier way\n\nGo to the folder where you put your project for this workshop\nFind a file with .Rproj extension - this is the R project file that holds all the information about your project.\n\n\n\nDouble click on the file. Rstudio should launch with your project loaded! This should be easier to ensure that you are loading the correct project when opening Rstudio."
  },
  {
    "objectID": "05-stats-quarto.html#install-and-load-extra-packages-we-need-today",
    "href": "05-stats-quarto.html#install-and-load-extra-packages-we-need-today",
    "title": "Regression and Presenting Your Result",
    "section": "Install and load extra packages we need today",
    "text": "Install and load extra packages we need today\n\nType the following line in your R console (bottom left section). Type them one by one.\n\ninstall.packages(\"apaTables\")\ninstall.packages(\"huxtable\")\ninstall.packages(\"gtsummary\")\ninstall.packages(\"car\")\n\nCreate a new R script called session-5.R\nPaste the following lines into the script:\n\n\n# loading the packages\nlibrary(apaTables)\nlibrary(huxtable)\nlibrary(gtsummary)\nlibrary(car)\nlibrary(tidyverse)"
  },
  {
    "objectID": "05-stats-quarto.html#load-our-data-for-today",
    "href": "05-stats-quarto.html#load-our-data-for-today",
    "title": "Regression and Presenting Your Result",
    "section": "Load our data for today!",
    "text": "Load our data for today!\n\n# read the CSV with WVS data\nwvs_cleaned &lt;- read_csv(\"data-output/wvs_cleaned_v1.csv\")\n\n# Convert categorical variables to factors\ncolumns_to_convert &lt;- c(\"country\", \"religiousity\", \"sex\", \"marital_status\", \"employment\", \"age_group\")\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(across(all_of(columns_to_convert), as_factor))\n\n# peek at the data, pay attention to the data types!\nglimpse(wvs_cleaned)"
  },
  {
    "objectID": "05-stats-quarto.html#from-last-week-apatables",
    "href": "05-stats-quarto.html#from-last-week-apatables",
    "title": "Regression and Presenting Your Result",
    "section": "From last week: apaTables",
    "text": "From last week: apaTables\napaTables is a package that will generate APA-formatted report table for correlation, ANOVA, and regression. It has limited customisations and few varity of tables. The documentation online is for the “development” version which is not what we will get if we install normally with install.packages(), so we need to rely on the vignette more. View the documentation here\nExample: get the correlation table for political_scale, life_satisfaction, and financial_satisfaction\nlibrary(apaTables)\n\nwvs_cleaned |&gt; \n    select(life_satisfaction, financial_satisfaction, political_scale) |&gt; \n    apa.cor.table( table.number = 1, filename = \"fig-output/table-cor.doc\")\nThis code will create a word document with the tables already formatted in APA style inside."
  },
  {
    "objectID": "05-stats-quarto.html#from-last-week-gtsummary",
    "href": "05-stats-quarto.html#from-last-week-gtsummary",
    "title": "Regression and Presenting Your Result",
    "section": "From last week: gtsummary",
    "text": "From last week: gtsummary\nAnother popular packages is gt (stands for “great tables”) and its ‘add-on’, gtsummary. It has lots of customizations (which can get overwhelming!) but fortunately the documentation is pretty good and there are plenty of code samples. View the documentation here\nExample: get the mean differences table for political_scale, life_satisfaction, and financial_satisfaction, grouped by sex\n\nlibrary(gtsummary)\n\nwvs_cleaned |&gt; \n    dplyr::select(life_satisfaction, financial_satisfaction, political_scale, sex) |&gt; \n    tbl_summary(by = sex) |&gt; \n    add_difference()"
  },
  {
    "objectID": "05-stats-quarto.html#from-last-week-gtsummary-output",
    "href": "05-stats-quarto.html#from-last-week-gtsummary-output",
    "title": "Regression and Presenting Your Result",
    "section": "From last week: gtsummary",
    "text": "From last week: gtsummary\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMale\nN = 3,1711\nFemale\nN = 3,2321\nDifference\n\n\n\n\nlife_satisfaction\n7.00 (6.00, 8.00)\n7.00 (6.00, 8.00)\n\n\n\n\nfinancial_satisfaction\n7.00 (5.00, 8.00)\n7.00 (5.00, 8.00)\n\n\n\n\npolitical_scale\n5.00 (4.00, 7.00)\n5.00 (4.00, 6.00)\n\n\n\n\n\n1 Median (Q1, Q3)"
  },
  {
    "objectID": "05-stats-quarto.html#how-to-save-gtsummary-tables",
    "href": "05-stats-quarto.html#how-to-save-gtsummary-tables",
    "title": "Regression and Presenting Your Result",
    "section": "How to save gtsummary() tables",
    "text": "How to save gtsummary() tables\n\nThe tables will be displayed under the “Viewer” tab on the lower right hand side of Rstudio.\nSelect the entire tables, and then copy it with Ctrl + C (or Cmd + C on Macbook)\nPaste the table with Ctrl + V (or Cmd + V on Macbook) to your word document or Google doc."
  },
  {
    "objectID": "05-stats-quarto.html#simple-linear-regression-what-is-it",
    "href": "05-stats-quarto.html#simple-linear-regression-what-is-it",
    "title": "Regression and Presenting Your Result",
    "section": "Simple Linear Regression: what is it?",
    "text": "Simple Linear Regression: what is it?\nLinear regression is a statistical method used to model the relationship between a dependent variable (outcome) and one or more independent variables (predictors) by fitting a linear equation to the observed data. The math formula looks like this:\n\n\n\\[\nY = \\beta_0 + \\beta_1X + \\varepsilon\n\\]\n\n\n\\(Y\\) - the dependent variable; must be continuous\n\\(X\\) - the independent variable (if there are more than one, there will be \\(X_1\\) , \\(X_2\\) , and so on. This can be ordinal, nominal, or continuous\n\\(\\beta_0\\) - the y-intercept. Represents the expected value of independent variable \\(Y\\) when independent variable(s) \\(X\\) are set to zero.\n\\(\\beta_1\\) - the slope / coefficient for independent variable\n\\(\\varepsilon\\) - the error term. (In some examples you might see this omitted from the formula).\n\n\nExamples:\n\nDoes a person’s age affect their life satisfaction?\nDo a person’s age and country affect their life satisfaction?"
  },
  {
    "objectID": "05-stats-quarto.html#linear-regression-one-continuous-predictor",
    "href": "05-stats-quarto.html#linear-regression-one-continuous-predictor",
    "title": "Regression and Presenting Your Result",
    "section": "Linear Regression: One continuous predictor",
    "text": "Linear Regression: One continuous predictor\nResearch Question: Does a person’s age influence their life satisfaction?\n\nThe outcome/DV (\\(Y\\)): life_satisfaction\nThe predictor/IV (\\(X\\)): age\n\n\nlife_model1 &lt;- lm(life_satisfaction ~ age, data = wvs_cleaned)\nsummary(life_model1) #summarize the result\n\n\n\n\nCall:\nlm(formula = life_satisfaction ~ age, data = wvs_cleaned)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.6563 -0.9265  0.2681  1.1546  3.3816 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 6.326442   0.067792   93.32   &lt;2e-16 ***\nage         0.016218   0.001335   12.15   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.786 on 6401 degrees of freedom\nMultiple R-squared:  0.02255,   Adjusted R-squared:  0.0224 \nF-statistic: 147.7 on 1 and 6401 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "05-stats-quarto.html#narrating-the-results",
    "href": "05-stats-quarto.html#narrating-the-results",
    "title": "Regression and Presenting Your Result",
    "section": "Narrating the results",
    "text": "Narrating the results\nHere is one possible way to narrate your result:\n\nA linear regression analysis was conducted to assess the influence of age on life satisfaction in Canada, Singapore, and New Zealand. Age is a statistically significant but weak predictor (B = 0.016, SE = 0.001, p &lt; 0.001), indicating that for each additional year of age, the life satisfaction is increased by 0.016 units.\n\n\nThe model was statistically significant (F(1, 6401) = 147.7, p &lt; 0.001) and explained approximately 2% of the variance in life satisfaction (R² = 0.022, Adjusted R² = 0.0224)."
  },
  {
    "objectID": "05-stats-quarto.html#present-your-regression-result---huxtable",
    "href": "05-stats-quarto.html#present-your-regression-result---huxtable",
    "title": "Regression and Presenting Your Result",
    "section": "Present your regression result - huxtable",
    "text": "Present your regression result - huxtable\n\nhuxreg(\"life satisfaction\" = life_model1)\n\n\n\nlife satisfaction\n\n(Intercept)6.326 ***\n\n(0.068)   \n\nage0.016 ***\n\n(0.001)   \n\nN6403        \n\nR20.023    \n\nlogLik-12796.748    \n\nAIC25599.496    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05."
  },
  {
    "objectID": "05-stats-quarto.html#linear-regression-multiple-continuous-predictors",
    "href": "05-stats-quarto.html#linear-regression-multiple-continuous-predictors",
    "title": "Regression and Presenting Your Result",
    "section": "Linear Regression: Multiple continuous predictors",
    "text": "Linear Regression: Multiple continuous predictors\nResearch Question: Do a person’s age and financial satisfaction their life satisfaction?\n\nThe outcome/DV (\\(Y\\)): life_satisfaction\nThe predictors/IV (\\(X\\)): financial_satisfaction and age\n\n\nlife_model2 &lt;- lm(life_satisfaction ~ financial_satisfaction + age, \n                  data = wvs_cleaned)\nsummary(life_model2)"
  },
  {
    "objectID": "05-stats-quarto.html#linear-regression-multiple-continuous-predictors-output",
    "href": "05-stats-quarto.html#linear-regression-multiple-continuous-predictors-output",
    "title": "Regression and Presenting Your Result",
    "section": "Linear Regression: Multiple continuous predictors",
    "text": "Linear Regression: Multiple continuous predictors\n\n\nCall:\nlm(formula = life_satisfaction ~ financial_satisfaction + age, \n    data = wvs_cleaned)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.0571 -0.7459  0.1272  0.7919  5.8965 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            3.346623   0.069441  48.194  &lt; 2e-16 ***\nfinancial_satisfaction 0.529454   0.008084  65.494  &lt; 2e-16 ***\nage                    0.005546   0.001046   5.305 1.17e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.382 on 6400 degrees of freedom\nMultiple R-squared:  0.4148,    Adjusted R-squared:  0.4146 \nF-statistic:  2268 on 2 and 6400 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "05-stats-quarto.html#possible-way-to-explain-the-result",
    "href": "05-stats-quarto.html#possible-way-to-explain-the-result",
    "title": "Regression and Presenting Your Result",
    "section": "Possible way to explain the result",
    "text": "Possible way to explain the result\n\nA multiple regression analysis was conducted to examine how financial satisfaction and age predict life satisfaction. Financial satisfaction was a strong predictor (B = 0.529, SE = 0.008, p &lt; 0.001), indicating that for each one-unit increase in financial satisfaction, life satisfaction increased by 0.529 units. Age was also a significant but weaker predictor (B = 0.006, SE = 0.001, p &lt; 0.001), with each additional year of age associated with a 0.006-unit increase in life satisfaction.\n\n\nThe model was statistically significant (F(2, 6400) = 2268, p &lt; 0.001) and explained 41.5% of the variance in life satisfaction (R² = 0.415, Adjusted R² = 0.415)."
  },
  {
    "objectID": "05-stats-quarto.html#present-your-regression-result---tbl_regression-from-gtsummary",
    "href": "05-stats-quarto.html#present-your-regression-result---tbl_regression-from-gtsummary",
    "title": "Regression and Presenting Your Result",
    "section": "Present your regression result - tbl_regression() from gtsummary",
    "text": "Present your regression result - tbl_regression() from gtsummary\n\nlife_model2 |&gt; tbl_regression() |&gt; bold_p()\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI\np-value\n\n\n\n\nfinancial_satisfaction\n0.53\n0.51, 0.55\n&lt;0.001\n\n\nage\n0.01\n0.00, 0.01\n&lt;0.001\n\n\n\nAbbreviation: CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\nMore on tbl_regression() by gtsummary: https://www.danieldsjoberg.com/gtsummary/reference/tbl_regression.html"
  },
  {
    "objectID": "05-stats-quarto.html#reporting-result-a-sample-regression-table",
    "href": "05-stats-quarto.html#reporting-result-a-sample-regression-table",
    "title": "Regression and Presenting Your Result",
    "section": "Reporting result: A sample regression table",
    "text": "Reporting result: A sample regression table\n\n\n\n\nYou might encounter different table formats when reporting regression results, but there are some key elements that should generally be included.\nThese are: the number of observations (\\(N\\)), the coefficients (B = unstandardized, raw coeff in original unit of measurements; \\(\\beta\\) = standardized, converted to standard deviation units), standard errors (SE), confidence intervals (95% CI), and p-values. Other metrics to include are the \\(R^2\\) and \\(F\\) statistics.\n\n\n\n\nThe above screenshot is taken from https://www.ncfr.org/system/files/2017-01/regression_0.pdf\nAPA recommended format"
  },
  {
    "objectID": "05-stats-quarto.html#presenting-your-models",
    "href": "05-stats-quarto.html#presenting-your-models",
    "title": "Regression and Presenting Your Result",
    "section": "Presenting your models",
    "text": "Presenting your models\nIf you get an error saying “huxreg not found”, you may need to:\n\nInstall the library by running this line in your terminal: install.packages(\"huxtable\")\nAnd then load them to your script with this line: library(huxtable)\n\nFor more info about huxreg, go here: https://cran.r-project.org/web/packages/huxtable/vignettes/huxreg.html\n\nhuxreg(\"life_satisfaction (model1)\" = life_model1, \n       \"life_satisfaction (model2)\" = life_model2,\n       number_format = 4,\n       bold_signif = 0.05,\n       statistics = c( \"R squared\" = \"r.squared\", \"N\" = \"nobs\", \"F\" = \"statistic\",\n      \"P value\" = \"p.value\"))"
  },
  {
    "objectID": "05-stats-quarto.html#presenting-your-models-output",
    "href": "05-stats-quarto.html#presenting-your-models-output",
    "title": "Regression and Presenting Your Result",
    "section": "Presenting your models",
    "text": "Presenting your models\n\n\n\nlife_satisfaction (model1)life_satisfaction (model2)\n\n(Intercept)6.3264 ***3.3466 ***\n\n(0.0678)   (0.0694)   \n\nage0.0162 ***0.0055 ***\n\n(0.0013)   (0.0010)   \n\nfinancial_satisfaction         0.5295 ***\n\n         (0.0081)   \n\nR squared0.0225    0.4148    \n\nN6403         6403         \n\nF147.6646    2268.0004    \n\nP value0.0000    0.0000    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05."
  },
  {
    "objectID": "05-stats-quarto.html#fyi-multicollinearity",
    "href": "05-stats-quarto.html#fyi-multicollinearity",
    "title": "Regression and Presenting Your Result",
    "section": "FYI: Multicollinearity",
    "text": "FYI: Multicollinearity\nCaution! When doing regression-type of tests, watch out for multicollinearity.\nMulticollinearity is a situation in which two or more predictor variables are highly correlated with each other. This makes it difficult to determine the specific contribution of each predictor variable to the relationship.\nOne way to check for it:\n\nAssess the correlation between your predictor variables in your model using Variance Inflation Factor (VIF)\nIf they seem to be highly correlated (&gt; 5 or so), one of the easiest (and somewhat acceptable) way is to simply remove the less significant predictor from your model :D\n\n\ncar::vif(life_model2)\n\nfinancial_satisfaction                    age \n              1.024893               1.024893"
  },
  {
    "objectID": "05-stats-quarto.html#linear-regression-one-categorical-predictor",
    "href": "05-stats-quarto.html#linear-regression-one-categorical-predictor",
    "title": "Regression and Presenting Your Result",
    "section": "Linear Regression: One categorical predictor",
    "text": "Linear Regression: One categorical predictor\nResearch Question: Explore the difference in life satisfaction between age groups\n\nThe outcome/DV (\\(Y\\)): life_satisfaction\nThe predictor/IV (\\(X\\)): age_group\n\n\n\n\n\n\n\nNote\n\n\nBefore proceeding with analysis, ensure that all the categorical variables involved are cast as factors!\n\n\n\n\nstr(wvs_cleaned$life_satisfaction)\n\n num [1:6403] 7 5 8 6 6 8 9 8 8 10 ...\n\nstr(wvs_cleaned$age_group)\n\n Factor w/ 4 levels \"61+\",\"45-60\",..: 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "05-stats-quarto.html#continuing-the-analysis",
    "href": "05-stats-quarto.html#continuing-the-analysis",
    "title": "Regression and Presenting Your Result",
    "section": "Continuing the analysis",
    "text": "Continuing the analysis\nThe analysis summary should look like this:\n\nlife_model3 &lt;- lm(life_satisfaction ~ age_group, data = wvs_cleaned)\nsummary(life_model3)\n\n\nCall:\nlm(formula = life_satisfaction ~ age_group, data = wvs_cleaned)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.5293 -1.0131  0.3391  0.9869  3.3391 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     7.52931    0.04296 175.250   &lt;2e-16 ***\nage_group45-60 -0.51622    0.05984  -8.626   &lt;2e-16 ***\nage_group29-44 -0.49386    0.05961  -8.284   &lt;2e-16 ***\nage_group18-28 -0.86840    0.07124 -12.190   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.783 on 6399 degrees of freedom\nMultiple R-squared:  0.02533,   Adjusted R-squared:  0.02488 \nF-statistic: 55.44 on 3 and 6399 DF,  p-value: &lt; 2.2e-16\n\n\n\nWhen interpreting a categorical predictor in regression, one category is treated as the reference category, which serves as the baseline for comparison. In this case, the reference category corresponds to the intercept.\nBy default, the first category in the data is used as the reference category, unless specified."
  },
  {
    "objectID": "05-stats-quarto.html#narrating-the-result",
    "href": "05-stats-quarto.html#narrating-the-result",
    "title": "Regression and Presenting Your Result",
    "section": "Narrating the result",
    "text": "Narrating the result\nHere is one possible way to narrate your result:\n\nA linear regression analysis was conducted to examine how age groups predict life satisfaction. With the youngest age group (15-28) as the reference group (intercept = 6.66, SE = 0.06), all other age groups showed significantly higher life satisfaction. The 29-44 age group scored 0.37 units higher (SE = 0.07, p &lt; 0.001), the 45-60 age group scored 0.35 units higher (SE = 0.07, p &lt; 0.001), and the 61+ age group showed the largest difference, scoring 0.87 units higher (SE = 0.07, p &lt; 0.001) than the reference group.\n\n\nThe model was statistically significant (F(3, 6399) = 55.44, p &lt; 0.001) but only explained 2.5% of the variance in life satisfaction (R² = 0.025, Adjusted R² = 0.025)."
  },
  {
    "objectID": "05-stats-quarto.html#presenting-the-regression-table",
    "href": "05-stats-quarto.html#presenting-the-regression-table",
    "title": "Regression and Presenting Your Result",
    "section": "Presenting the regression table",
    "text": "Presenting the regression table\n\nhuxreg(\"life satisfaction (model3)\" = life_model3,\n       number_format = 4,\n       bold_signif = 0.05,\n       statistics = c( \"R squared\" = \"r.squared\", \"N\" = \"nobs\", \"F\" = \"statistic\",\n      \"P value\" = \"p.value\"))"
  },
  {
    "objectID": "05-stats-quarto.html#presenting-the-regression-table-output",
    "href": "05-stats-quarto.html#presenting-the-regression-table-output",
    "title": "Regression and Presenting Your Result",
    "section": "Presenting the regression table",
    "text": "Presenting the regression table\n\n\n\nlife satisfaction (model3)\n\n(Intercept)7.5293 ***\n\n(0.0430)   \n\nage_group45-60-0.5162 ***\n\n(0.0598)   \n\nage_group29-44-0.4939 ***\n\n(0.0596)   \n\nage_group18-28-0.8684 ***\n\n(0.0712)   \n\nR squared0.0253    \n\nN6403         \n\nF55.4384    \n\nP value0.0000    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05."
  },
  {
    "objectID": "05-stats-quarto.html#categorical-predictor-changing-the-reference",
    "href": "05-stats-quarto.html#categorical-predictor-changing-the-reference",
    "title": "Regression and Presenting Your Result",
    "section": "Categorical predictor: changing the reference",
    "text": "Categorical predictor: changing the reference\nLet’s change the reference category for age_group variable to “61+”.\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(age_group = relevel(age_group, ref = \"61+\"))\n\nstr(wvs_cleaned$age_group)\n\n Factor w/ 4 levels \"61+\",\"45-60\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\nRe-run the analysis with the new reference category\n\nlife_model3a&lt;- lm(life_satisfaction ~ age_group, data = wvs_cleaned)\nsummary(life_model3a)"
  },
  {
    "objectID": "05-stats-quarto.html#categorical-predictor-changing-the-reference-output",
    "href": "05-stats-quarto.html#categorical-predictor-changing-the-reference-output",
    "title": "Regression and Presenting Your Result",
    "section": "Categorical predictor: changing the reference",
    "text": "Categorical predictor: changing the reference\n\n\nCall:\nlm(formula = life_satisfaction ~ age_group, data = wvs_cleaned)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.5293 -1.0131  0.3391  0.9869  3.3391 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     7.52931    0.04296 175.250   &lt;2e-16 ***\nage_group45-60 -0.51622    0.05984  -8.626   &lt;2e-16 ***\nage_group29-44 -0.49386    0.05961  -8.284   &lt;2e-16 ***\nage_group18-28 -0.86840    0.07124 -12.190   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.783 on 6399 degrees of freedom\nMultiple R-squared:  0.02533,   Adjusted R-squared:  0.02488 \nF-statistic: 55.44 on 3 and 6399 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "05-stats-quarto.html#changing-baseline-category-for-ordered-factor",
    "href": "05-stats-quarto.html#changing-baseline-category-for-ordered-factor",
    "title": "Regression and Presenting Your Result",
    "section": "Changing baseline category for ordered factor",
    "text": "Changing baseline category for ordered factor\nAssuming we have a column with ordered factor in our data called education with the level of Primary, Secondary, and Tertiary. This is how we can change the order, if we want to put Secondary before Primary.\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(education = factor(education, \n                         levels = c(\"Secondary\", \"Primary\", \"Tertiary\"), \n                         ordered = TRUE))\n\n\n\n\n\n\n\nReleveling ordered factor\n\n\nPreviously, we could use the relevel() function to change the reference category for ordered factors. However, in recent R versions, this no longer works for ordered factors, so we now use the method shown in the code above. The relevel() function still works for unordered factors."
  },
  {
    "objectID": "05-stats-quarto.html#lets-try-this-linear-regression-exercise-5-mins",
    "href": "05-stats-quarto.html#lets-try-this-linear-regression-exercise-5-mins",
    "title": "Regression and Presenting Your Result",
    "section": "Let’s try this Linear Regression exercise! (5 mins)",
    "text": "Let’s try this Linear Regression exercise! (5 mins)\nCreate a regression model called life_model4 that predicts the life_satisfaction score based on sex. The reference category should be ‘Male’\n\n\nCode\nlife_model4 &lt;- lm(life_satisfaction ~ sex, data = wvs_cleaned)\nsummary(life_model4)\n\n\n\nCall:\nlm(formula = life_satisfaction ~ sex, data = wvs_cleaned)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.1136 -1.0949 -0.0949  0.9051  2.9051 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  7.09492    0.03207 221.211   &lt;2e-16 ***\nsexFemale    0.01863    0.04514   0.413     0.68    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.806 on 6401 degrees of freedom\nMultiple R-squared:  2.66e-05,  Adjusted R-squared:  -0.0001296 \nF-statistic: 0.1703 on 1 and 6401 DF,  p-value: 0.6799"
  },
  {
    "objectID": "05-stats-quarto.html#binary-logistic-regression---what-is-it",
    "href": "05-stats-quarto.html#binary-logistic-regression---what-is-it",
    "title": "Regression and Presenting Your Result",
    "section": "Binary Logistic Regression - what is it?",
    "text": "Binary Logistic Regression - what is it?\nAlso known as simply logistic regression, it is used to model the relationship between a set of independent variables and a binary outcome.\nThese independent variables can be either categorical or continuous.\nBinary Logistics Regression formula:\n\\[\nlogit(P) = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + … + \\beta_nX_n\n\\]\nIt can also be written like below, in which the \\(logit(P)\\) part is expanded:\n\\[\nP = \\frac{1}{1 + e^{-(\\beta_0 + \\beta_1X)}}\n\\]"
  },
  {
    "objectID": "05-stats-quarto.html#binary-logistic-regression-examples",
    "href": "05-stats-quarto.html#binary-logistic-regression-examples",
    "title": "Regression and Presenting Your Result",
    "section": "Binary Logistic Regression Examples",
    "text": "Binary Logistic Regression Examples\n\nDoes a person’s age and education level influence whether they will vote Democrat or Republican in the US election?\nDoes the number of hours spent studying impact a student’s likelihood of passing a module? (pass/fail outcome)\n\nIn essence, the goal of binary logistic regression is to estimate the probability of a specific event happening when there are only two possible outcomes (hence the term “binary”)."
  },
  {
    "objectID": "05-stats-quarto.html#binary-logistic-regression-one-continuous-predictor",
    "href": "05-stats-quarto.html#binary-logistic-regression-one-continuous-predictor",
    "title": "Regression and Presenting Your Result",
    "section": "Binary Logistic Regression: One Continuous Predictor",
    "text": "Binary Logistic Regression: One Continuous Predictor\nResearch Question: Does a participant’s political alignment affect the likelihood of being satisfied with life?\n\nThe outcome/DV (\\(Y\\)): satisfied\n\nOur outcome is a continuous variable, but for the purpose of this workshop practice, let’s define the outcome as “Satisfied” if the life_satisfaction score is more than 7 (inclusive), and “not Satisfied” if the score is less than 7.\n\nThe predictor/IV (\\(X\\)): political_scale"
  },
  {
    "objectID": "05-stats-quarto.html#dummy-coding-dependent-variable",
    "href": "05-stats-quarto.html#dummy-coding-dependent-variable",
    "title": "Regression and Presenting Your Result",
    "section": "Dummy-coding dependent variable",
    "text": "Dummy-coding dependent variable\nBefore we proceed with the calculations, we need to dummy code the dependent variable into 1 and 0, with 1 = Satisfied and 0 = Not Satisfied. More info on dummy coding here\n\n# First, we need to create a binary outcome\nwvs_cleaned &lt;- wvs_cleaned |&gt;\n    mutate(satisfied = if_else(life_satisfaction &gt;= 7, 1, 0))\n# the if_else is from dplyr package (from session 2)\n\n\n\n# A tibble: 6,403 × 2\n  life_satisfaction satisfied\n              &lt;dbl&gt;     &lt;dbl&gt;\n1                 7         1\n2                 5         0\n3                 8         1\n4                 6         0\n5                 6         0\n# ℹ 6,398 more rows"
  },
  {
    "objectID": "05-stats-quarto.html#conduct-the-analysis",
    "href": "05-stats-quarto.html#conduct-the-analysis",
    "title": "Regression and Presenting Your Result",
    "section": "Conduct the analysis",
    "text": "Conduct the analysis\nLet’s conduct the analysis!\n\nlife_model5 &lt;- glm(satisfied ~ political_scale,\n                family = binomial, \n                data = wvs_cleaned)\n\nsummary(life_model5)\n\n\nCall:\nglm(formula = satisfied ~ political_scale, family = binomial, \n    data = wvs_cleaned)\n\nCoefficients:\n                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)      0.45438    0.07236   6.279 3.41e-10 ***\npolitical_scale  0.08448    0.01326   6.370 1.89e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 7731  on 6402  degrees of freedom\nResidual deviance: 7690  on 6401  degrees of freedom\nAIC: 7694\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "05-stats-quarto.html#exponentiate-the-coefficients",
    "href": "05-stats-quarto.html#exponentiate-the-coefficients",
    "title": "Regression and Presenting Your Result",
    "section": "Exponentiate the coefficients",
    "text": "Exponentiate the coefficients\nIf you recall the formula, the results are expressed in Logit Probability. As we typically report the result in terms of Odd Ratios (OR), perform exponentiation on the coefficients.\n\nexp(coef(life_model5))\n\n    (Intercept) political_scale \n       1.575194        1.088155 \n\n\nWe can also use tbl_regression() to do this for us:\n\nlibrary(gtsummary)\nlife_model5 |&gt; tbl_regression(exponentiate = TRUE) |&gt; \n    bold_p() \n\n\n\n\n\n\n\nCharacteristic\nOR\n95% CI\np-value\n\n\n\n\npolitical_scale\n1.09\n1.06, 1.12\n&lt;0.001\n\n\n\nAbbreviations: CI = Confidence Interval, OR = Odds Ratio\n\n\n\n\n\n\n\n\n\n\nMore on tbl_regression() by gtsummary: https://www.danieldsjoberg.com/gtsummary/reference/tbl_regression.html"
  },
  {
    "objectID": "05-stats-quarto.html#get-the-χ²-chi-squared-to-report-model-significance",
    "href": "05-stats-quarto.html#get-the-χ²-chi-squared-to-report-model-significance",
    "title": "Regression and Presenting Your Result",
    "section": "Get the χ² (chi-squared) to report model significance",
    "text": "Get the χ² (chi-squared) to report model significance\nχ² (Chi-squared) goodness of fit tests whether your model fits the data significantly better than a null model (model with no predictors). As you can see, it is not in the glm() result, but we can calculate this somewhat manually using the Null and Residual deviance and df like so:\n\nNull deviance: 7731\nResidual deviance: 7690\nDifference: 7731 - 7690 = 41 (this is the χ² value)\n\nTo get the p-value, we need the degree of freedom and the χ²:\n\ndf = difference in degrees of freedom (6402 - 6401 = 1)\nχ² = 41\n\n\npchisq(41, df=1, lower.tail=FALSE)  # will give p-value\n\n[1] 1.522292e-10"
  },
  {
    "objectID": "05-stats-quarto.html#get-the-χ²-chi-squared-and-pseudo-r-squared-for-reporting-purposes",
    "href": "05-stats-quarto.html#get-the-χ²-chi-squared-and-pseudo-r-squared-for-reporting-purposes",
    "title": "Regression and Presenting Your Result",
    "section": "Get the χ² (chi-squared) and Pseudo R-squared (for reporting purposes)",
    "text": "Get the χ² (chi-squared) and Pseudo R-squared (for reporting purposes)\nIn the report, the model’s χ² (chi-squared) and R-squared (indicating the proportion of variance that can be explained by the model) should be included. However, since the resulting item does not have this info, we will call upon DescTools’ PseudoR2() function to help!\n\n\n# by default, McFadden will be used\nDescTools::PseudoR2(life_model5) \n\n\n   McFadden \n0.005306369 \n\n\nWe can retrieve the R-squared value and the χ² (also known as the G2 value, which stands for Goodness-of-fit) at the same time like so:\n\n\nDescTools::PseudoR2(life_model5, \n                    which = c(\"G2\", \"Nagelkerke\"))\n\n\n          G2   Nagelkerke \n41.023494851  0.009110118"
  },
  {
    "objectID": "05-stats-quarto.html#in-case-you-need-to-get-other-rsquared-methods",
    "href": "05-stats-quarto.html#in-case-you-need-to-get-other-rsquared-methods",
    "title": "Regression and Presenting Your Result",
    "section": "In case you need to get other Rsquared methods",
    "text": "In case you need to get other Rsquared methods\n\nDescTools::PseudoR2(life_model5, \n                    which = \"all\")\n\n       McFadden     McFaddenAdj        CoxSnell      Nagelkerke   AldrichNelson \n   5.306369e-03    4.788971e-03    6.386437e-03    9.110118e-03    6.366131e-03 \nVeallZimmermann           Efron McKelveyZavoina            Tjur             AIC \n   1.163872e-02    5.980444e-03    9.450630e-03    6.188032e-03    7.693968e+03 \n            BIC          logLik         logLik0              G2 \n   7.707497e+03   -3.844984e+03   -3.865496e+03    4.102349e+01"
  },
  {
    "objectID": "05-stats-quarto.html#possible-interpretation-of-the-result",
    "href": "05-stats-quarto.html#possible-interpretation-of-the-result",
    "title": "Regression and Presenting Your Result",
    "section": "Possible interpretation of the result",
    "text": "Possible interpretation of the result\nPossible interpretation:\n(The intercept isn’t typically interpreted as an odds ratio, so we’ll ignore that for now)\n\nA logistic regression was performed to ascertain the effects of political scale alignment on the likelihood that individuals will be satisfied with life versus not satisfied. The logistic regression model was statistically significant, χ² (1, N = 6403) = 41.02, p &lt; .001.\n\n\nThe model explained 0.9% (Nagelkerke R²) of the variance in life satisfaction. Political scale alignment was associated with an increased likelihood of being satisfied with life (OR = 1.09, 95% CI [1.06, 1.12], p &lt; .001), indicating that for each one-unit increase in political scale alignment (1-10), the odds of being satisfied with life increased by 9%.\n\n\n\nMore on interpreting Odds Ratio: https://stats.oarc.ucla.edu/other/mult-pkg/faq/general/faq-how-do-i-interpret-odds-ratios-in-logistic-regression/"
  },
  {
    "objectID": "05-stats-quarto.html#recap---why-do-i-need-to-report-these",
    "href": "05-stats-quarto.html#recap---why-do-i-need-to-report-these",
    "title": "Regression and Presenting Your Result",
    "section": "Recap - why do I need to report these?",
    "text": "Recap - why do I need to report these?\n\nχ² (Chi-squared) goodness of fit tests whether your model fits the data significantly better than a null model (model with no predictors).\n“Standard” R-squared isn’t typically reported for logistic regression because it’s not as meaningful as it is in linear regression. But we do still want to see how much of the variance in the data can be explained by the model.\nPseudo R-squared tries to mimic traditional R-squared by showing how much of the variation in the outcome your model explains, but it’s adjusted to work with binary outcomes. It’s sort of answering the question of “How well does my model explain the data?”\nIt is possible to have a significant χ² (meaning your model is statistically significant and better than nothing) but a low Pseudo R-squared (showing it still doesn’t explain much variation). This isn’t contradictory - it just means your model is better than random guessing but there’s still a lot of unexplained variation. (Pretty common in social sciences; after all, human behaviours are complex!)"
  },
  {
    "objectID": "05-stats-quarto.html#fyi---irl-sample-of-reporting-logistic-regression",
    "href": "05-stats-quarto.html#fyi---irl-sample-of-reporting-logistic-regression",
    "title": "Regression and Presenting Your Result",
    "section": "FYI - IRL sample of reporting Logistic Regression",
    "text": "FYI - IRL sample of reporting Logistic Regression\nBelow is a sample of how you may want to narrate your result. Note the resulting values mentioned in the paragraph below.\n\nIn a nutshell, you will most likely have to mention the p-value, the coefficients (for linear regressions), the Odd Ratios (for logistic regression) with the confidence intervals, the chi-squared (χ²), and the R-squared. You should also include these information in your regression table.\n\n\nThe screenshot is retrieved from https://statistics.laerd.com/spss-tutorials/binomial-logistic-regression-using-spss-statistics.php"
  },
  {
    "objectID": "05-stats-quarto.html#regression-tables",
    "href": "05-stats-quarto.html#regression-tables",
    "title": "Regression and Presenting Your Result",
    "section": "Regression tables",
    "text": "Regression tables\nEven with huxtable, you may need to edit the table further to include the missing stats\n\nhuxreg(\"life_satisfaction\" = life_model5, statistics = c(\"R2\" = \"r.squared\", \"logLik\", \"AIC\"))\n\n\n\nlife_satisfaction\n\n(Intercept)0.454 ***\n\n(0.072)   \n\npolitical_scale0.084 ***\n\n(0.013)   \n\nlogLik-3844.984    \n\nAIC7693.968    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05."
  },
  {
    "objectID": "05-stats-quarto.html#binary-logistic-regression-one-categorical-predictor",
    "href": "05-stats-quarto.html#binary-logistic-regression-one-categorical-predictor",
    "title": "Regression and Presenting Your Result",
    "section": "Binary Logistic Regression: One Categorical Predictor",
    "text": "Binary Logistic Regression: One Categorical Predictor\nResearch Question: Does religiousity affect the likelihood of being satisfied with life?\n\nThe outcome/DV (\\(Y\\)): satisfied\nThe predictor/IV (\\(X\\)): religiousity - let’s set “A religious person” as the reference category!\n\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(religiousity = relevel(religiousity, ref = \"A religious person\"))\n\nlife_model6 &lt;- glm(satisfied ~ religiousity,\n                      family = \"binomial\",\n                      data = wvs_cleaned)\n\nsummary(life_model6)"
  },
  {
    "objectID": "05-stats-quarto.html#binary-logistic-regression-one-categorical-predictor-output",
    "href": "05-stats-quarto.html#binary-logistic-regression-one-categorical-predictor-output",
    "title": "Regression and Presenting Your Result",
    "section": "Binary Logistic Regression: One Categorical Predictor",
    "text": "Binary Logistic Regression: One Categorical Predictor\n\n\nCall:\nglm(formula = satisfied ~ religiousity, family = \"binomial\", \n    data = wvs_cleaned)\n\nCoefficients:\n                                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                         1.00703    0.04426  22.753  &lt; 2e-16 ***\nreligiousityNot a religious person -0.17379    0.06111  -2.844 0.004456 ** \nreligiousityAn atheist             -0.27498    0.07845  -3.505 0.000456 ***\nreligiousityDon't know              0.21675    0.36245   0.598 0.549832    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 7731.0  on 6402  degrees of freedom\nResidual deviance: 7715.3  on 6399  degrees of freedom\nAIC: 7723.3\n\nNumber of Fisher Scoring iterations: 4\n\nexp(coef(life_model6))\n\n                       (Intercept) religiousityNot a religious person \n                         2.7374462                          0.8404704 \n            religiousityAn atheist             religiousityDon't know \n                         0.7595839                          1.2420335"
  },
  {
    "objectID": "05-stats-quarto.html#exponentiate-the-coefficients-1",
    "href": "05-stats-quarto.html#exponentiate-the-coefficients-1",
    "title": "Regression and Presenting Your Result",
    "section": "Exponentiate the coefficients",
    "text": "Exponentiate the coefficients\nIf you recall the formula, the results are expressed in Logit Probability. As we typically report the result in terms of Odd Ratios (OR), perform exponentiation on the coefficients.\n\nlibrary(gtsummary)\nlife_model6 |&gt; tbl_regression(exponentiate = TRUE) |&gt;  \n    bold_p()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOR\n95% CI\np-value\n\n\n\n\nreligiousity\n\n\n\n\n\n\n\n\n    A religious person\n—\n—\n\n\n\n\n    Not a religious person\n0.84\n0.75, 0.95\n0.004\n\n\n    An atheist\n0.76\n0.65, 0.89\n&lt;0.001\n\n\n    Don't know\n1.24\n0.63, 2.67\n0.5\n\n\n\nAbbreviations: CI = Confidence Interval, OR = Odds Ratio"
  },
  {
    "objectID": "05-stats-quarto.html#get-the-rsquared",
    "href": "05-stats-quarto.html#get-the-rsquared",
    "title": "Regression and Presenting Your Result",
    "section": "Get the Rsquared",
    "text": "Get the Rsquared\nLet’s retrieve the R-squared value and the Chi-square χ² value (also known as the G2 value, which stands for Goodness-of-fit)\n\nDescTools::PseudoR2(life_model6, \n                    which = c(\"G2\", \"Nagelkerke\"))\n\n          G2   Nagelkerke \n15.652088008  0.003482759 \n\n\n\n# get the other R-squared if you like\nDescTools::PseudoR2(life_model6, \n                    which = \"all\")\n\n       McFadden     McFaddenAdj        CoxSnell      Nagelkerke   AldrichNelson \n   2.024590e-03    9.897938e-04    2.441508e-03    3.482759e-03    2.438532e-03 \nVeallZimmermann           Efron McKelveyZavoina            Tjur             AIC \n   4.458185e-03    2.438152e-03    3.608656e-03    2.438152e-03    7.723340e+03 \n            BIC          logLik         logLik0              G2 \n   7.750398e+03   -3.857670e+03   -3.865496e+03    1.565209e+01"
  },
  {
    "objectID": "05-stats-quarto.html#narrating-the-results-1",
    "href": "05-stats-quarto.html#narrating-the-results-1",
    "title": "Regression and Presenting Your Result",
    "section": "Narrating the results",
    "text": "Narrating the results\nPossible interpretation:\n(The intercept isn’t typically interpreted as an odds ratio, so we’ll ignore that for now)\n\nA logistic regression was performed to ascertain the effects of religiosity on the likelihood that individuals will be satisfied with life versus not satisfied. The logistic regression model was statistically significant, χ² (3, N = 6403) = 15.65, p &lt; .001.\n\n\nThe model explained 0.3% (Nagelkerke R²) of the variance in life satisfaction. Compared to religious persons (reference group), being non-religious was associated with lower odds of life satisfaction (OR = 0.84, 95% CI [0.74, 0.95], p = .004), and being an atheist was also associated with lower odds of life satisfaction (OR = 0.76, 95% CI [0.65, 0.89], p &lt; .001). There was no significant difference in life satisfaction for those who were unsure about their religious beliefs compared to religious persons (OR = 1.24, 95% CI [0.61, 2.52], p = .550).\n\n\n\nMore on logistic regression: https://stats.oarc.ucla.edu/r/dae/logit-regression/"
  },
  {
    "objectID": "05-stats-quarto.html#present-both-models-in-a-table",
    "href": "05-stats-quarto.html#present-both-models-in-a-table",
    "title": "Regression and Presenting Your Result",
    "section": "Present both models in a table",
    "text": "Present both models in a table\nNote that the R-squared is missing here, so be sure to put that in when you paste this table to your document.\n\nlibrary(huxtable)\nhuxreg(life_model5, life_model6)\n\n\n\n(1)(2)\n\n(Intercept)0.454 ***1.007 ***\n\n(0.072)   (0.044)   \n\npolitical_scale0.084 ***        \n\n(0.013)           \n\nreligiousityNot a religious person        -0.174 ** \n\n        (0.061)   \n\nreligiousityAn atheist        -0.275 ***\n\n        (0.078)   \n\nreligiousityDon't know        0.217    \n\n        (0.362)   \n\nN6403        6403        \n\nlogLik-3844.984    -3857.670    \n\nAIC7693.968    7723.340    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05."
  },
  {
    "objectID": "05-stats-quarto.html#lets-try-this-logistic-regression-exercise-5-mins",
    "href": "05-stats-quarto.html#lets-try-this-logistic-regression-exercise-5-mins",
    "title": "Regression and Presenting Your Result",
    "section": "Let’s try this Logistic Regression exercise! (5 mins)",
    "text": "Let’s try this Logistic Regression exercise! (5 mins)\nCreate a regression model called life_model7 that predicts the likelihood of being satisfied with life based on sex.\n\n\nCode\nlife_model7 &lt;- glm(satisfied ~ sex,\n                  family = \"binomial\", \n                  data = wvs_cleaned) \n\nsummary(life_model7)\nexp(coefficients(life_model7))"
  },
  {
    "objectID": "05-stats-quarto.html#markdown-specifically-r-markdown",
    "href": "05-stats-quarto.html#markdown-specifically-r-markdown",
    "title": "Regression and Presenting Your Result",
    "section": "Markdown (Specifically, R Markdown)",
    "text": "Markdown (Specifically, R Markdown)\n\nMarkdown is a lightweight markup language that provides a simple and readable way to write formatted text without using complex HTML or LaTeX. It is designed to make authoring content easy for everyone!\n\nMarkdown files can be converted into HTML or other formats.\nGeneric Markdown file will have .md extension.\n\nR Markdown is an extension of Markdown that incorporates R code chunks and allows you to create dynamic documents that integrate text, code, and output (such as tables and plots).\n\nRMarkdown file will have .Rmd extension."
  },
  {
    "objectID": "05-stats-quarto.html#rmarkdown-in-action",
    "href": "05-stats-quarto.html#rmarkdown-in-action",
    "title": "Regression and Presenting Your Result",
    "section": "RMarkdown in action",
    "text": "RMarkdown in action"
  },
  {
    "objectID": "05-stats-quarto.html#how-it-all-works",
    "href": "05-stats-quarto.html#how-it-all-works",
    "title": "Regression and Presenting Your Result",
    "section": "How it all works",
    "text": "How it all works\n\nIllustration by Allison Horst (www.allisonhorst.com)"
  },
  {
    "objectID": "05-stats-quarto.html#quarto",
    "href": "05-stats-quarto.html#quarto",
    "title": "Regression and Presenting Your Result",
    "section": "Quarto",
    "text": "Quarto\n\nQuarto is a multi-language, next-generation version of R Markdown from Posit and includes dozens of new features and capabilities while at the same being able to render most existing Rmd files without modification.\n\n\nIllustration by Allison Horst (www.allisonhorst.com)"
  },
  {
    "objectID": "05-stats-quarto.html#quarto-in-action-r-scripts-markdown",
    "href": "05-stats-quarto.html#quarto-in-action-r-scripts-markdown",
    "title": "Regression and Presenting Your Result",
    "section": "Quarto in action: R scripts + Markdown",
    "text": "Quarto in action: R scripts + Markdown"
  },
  {
    "objectID": "05-stats-quarto.html#r-scripts-vs-quarto",
    "href": "05-stats-quarto.html#r-scripts-vs-quarto",
    "title": "Regression and Presenting Your Result",
    "section": "R Scripts vs Quarto",
    "text": "R Scripts vs Quarto\n\n\nR Scripts\n\nGreat for quick debugging, experiment\nPreferred format if you are archiving your code to GitHub or data repository\nMore suitable for “production” tasks e.g. automating your data cleaning and processing, custom functions, etc.\n\n\nQuarto\n\nGreat for report and presentation to showcase your research insights/process as it integrates code, narrative text, visualizations, and results.\nVery handy when you need your report in multiple format, e.g. in Word and PPT.\nFun fact: the course website and slides are all made in Quarto"
  },
  {
    "objectID": "05-stats-quarto.html#if-you-are-interested-to-learn-more-about-this",
    "href": "05-stats-quarto.html#if-you-are-interested-to-learn-more-about-this",
    "title": "Regression and Presenting Your Result",
    "section": "If you are interested to learn more about this…",
    "text": "If you are interested to learn more about this…\nSMU Libraries regularly host Quarto workshops every semester from week 2 to week 6, taught by Prof Kam Tin Seong.\nKeep a lookout for these titles:\n\nR Ep.1: Making Your Research Reproducible with Quarto in RStudio\nR Ep.7: Creating Awesome Web Slides in Quarto with Revealjs\nR Ep.9: Building Website and Blog with Quarto"
  },
  {
    "objectID": "05-stats-quarto.html#r-best-practices",
    "href": "05-stats-quarto.html#r-best-practices",
    "title": "Regression and Presenting Your Result",
    "section": "R Best Practices",
    "text": "R Best Practices\n\nUse &lt;- for assigning values to objects.\n\nOnly use = when passing values to a function parameter.\n\nDo not alter your raw data; save your wrangled/cleaned data into a new file and keep it separate from the raw data.\nMake use of R projects to organize your data and make it easier to send over to your collaborators.\n\nHaving said that, when it comes to coding project, the best way to collaborate is using GitHub or similar platforms.\n\nWhenever possible and makes sense for your project, follow the common convention when naming your objects, scripts, and functions. One guide that you can follow is Hadley Wickham’s tidyverse style guide."
  },
  {
    "objectID": "05-stats-quarto.html#references-for-apa-guidelines-on-reporting-statistics",
    "href": "05-stats-quarto.html#references-for-apa-guidelines-on-reporting-statistics",
    "title": "Regression and Presenting Your Result",
    "section": "References for APA Guidelines on Reporting statistics",
    "text": "References for APA Guidelines on Reporting statistics\nDo check with your professor on how closely you should follow the guidelines, or if there is any specific format required.\n\nAPA Style 7th Edition Numbers and Statistics Guide\nUniversity of Washington - Reporting Results of Common Statistical Tests in APA Format\nIllinois State University - A Short Guide to Handling Numbers and Statistics in APA Format (in 6th Edition)\nStatistic Tables in APA recommended format"
  },
  {
    "objectID": "05-stats-quarto.html#post-workshop-survey",
    "href": "05-stats-quarto.html#post-workshop-survey",
    "title": "Regression and Presenting Your Result",
    "section": "Post-workshop survey",
    "text": "Post-workshop survey\nPlease scan this QR code or click on the link below to fill in the post-workshop survey. It should not take more than 2-3 minutes.\nSurvey link: https://smusg.asia.qualtrics.com/jfe/form/SV_ai0mSfHjwWZWC2y"
  },
  {
    "objectID": "03-visualization.html#todays-outline",
    "href": "03-visualization.html#todays-outline",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Today’s Outline",
    "text": "Today’s Outline\n\nDescriptive Statistics\nData Visualization in ggplot using World Values Survey data, including guidelines on how to choose the appropriate visualization."
  },
  {
    "objectID": "03-visualization.html#checklist-when-you-start-rstudio",
    "href": "03-visualization.html#checklist-when-you-start-rstudio",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Checklist when you start RStudio",
    "text": "Checklist when you start RStudio\n\nLoad the project we created last session and open the R script file.\nMake sure that Environment panel is empty (click on broom icon to clean it up)\nClear the Console and Plots too.\nRe-run the library(tidyverse) and read_csv portion in the previous session"
  },
  {
    "objectID": "03-visualization.html#refresher-loading-from-csv-into-a-dataframe",
    "href": "03-visualization.html#refresher-loading-from-csv-into-a-dataframe",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Refresher: Loading from CSV into a dataframe",
    "text": "Refresher: Loading from CSV into a dataframe\nUse read_csv from readr package (part of tidyverse) to load our data into a dataframe\n\n# import tidyverse library\nlibrary(tidyverse)\n\n# read the CSV with WVS data\nwvs_cleaned &lt;- read_csv(\"data-output/wvs_cleaned_v1.csv\")\n\n# Convert categorical variables to factors\ncolumns_to_convert &lt;- c(\"country\", \"religiousity\", \"sex\", \"marital_status\", \"employment\")\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(across(all_of(columns_to_convert), as_factor))\n\n# peek at the data, pay attention to the data types!\nglimpse(wvs_cleaned)"
  },
  {
    "objectID": "03-visualization.html#recap-descriptive-statistics",
    "href": "03-visualization.html#recap-descriptive-statistics",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Recap: Descriptive Statistics",
    "text": "Recap: Descriptive Statistics\n\n\nUnivariate (i.e. single variable) Descriptive Stats\n\nMeasures of central tendency: mean(), median(), Mode()\nMeasures of Variability: min(), max(), range(), IQR(), sd() (standard deviation), var() (variance)\nDistribution shape: skewness() and kurtosis() from moments library. This is easier to see with histogram\n\nBivariate (i.e. two variables) Descriptive Stats\n\nContingency table / cross tab (for categorical data)\nCovariance - describe how two variables vary together\nCorrelation - describe relationship strength and direction in a sample. (If we want to use this to infer about a population from a sample, it would fall under inferential stats)\nVisualizations e.g. Scatterplots, side-by-side boxplots, stacked bar charts, etc."
  },
  {
    "objectID": "03-visualization.html#from-last-week-basic-r-functions-for-descriptive-stats",
    "href": "03-visualization.html#from-last-week-basic-r-functions-for-descriptive-stats",
    "title": "Data Visualization and Descriptive Stats",
    "section": "From last week: Basic R Functions for Descriptive Stats",
    "text": "From last week: Basic R Functions for Descriptive Stats\nLast week, we explored some basic R functions for descriptive statistics.\n\nmean(): arithmetic average\nmedian(): middle value\nsd(): standard deviation\nvar(): variance\nrange(): range of values\nIQR(): interquartile range\nsummary(): provides a summary of descriptive statistics\nMode() function from DescTools package: the most frequently occuring value 1\n\nR doesn’t have built-in functions for mode, so we need DescTools package to get this function"
  },
  {
    "objectID": "03-visualization.html#measures-of-central-tendency",
    "href": "03-visualization.html#measures-of-central-tendency",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Measures of Central Tendency",
    "text": "Measures of Central Tendency\nLet’s start by examining the age variable in our dataset.\n\nlibrary(DescTools)\n\n# Basic statistics\nmean_age &lt;- mean(wvs_cleaned$age, na.rm = TRUE)\nmedian_age &lt;- median(wvs_cleaned$age, na.rm = TRUE)\nmode_age &lt;- DescTools::Mode(wvs_cleaned$age, na.rm = TRUE)\n\n# Print results\ncat(\"Mean age:\", mean_age, \"\\n\")\n\n\n\nMean age: 47.96408 \n\ncat(\"Median age:\", median_age, \"\\n\")\n\nMedian age: 48 \n\ncat(\"Most frequently occuring age:\", mode_age, \"\\n\") # this is here just for demo purposes\n\nMost frequently occuring age: 54"
  },
  {
    "objectID": "03-visualization.html#measures-of-variability-or-dispersion",
    "href": "03-visualization.html#measures-of-variability-or-dispersion",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Measures of Variability or Dispersion",
    "text": "Measures of Variability or Dispersion\n\nvar_age &lt;- var(wvs_cleaned$age, na.rm = TRUE)\nsd_age &lt;- sd(wvs_cleaned$age, na.rm = TRUE)\nrange_age &lt;- range(wvs_cleaned$age, na.rm = TRUE)\niqr_age &lt;- IQR(wvs_cleaned$age, na.rm = TRUE)\n\ncat(\"Variance of age:\", var_age, \"\\n\")\n\n\n\nVariance of age: 279.6066 \n\ncat(\"Standard deviation of age:\", sd_age, \"\\n\")\n\nStandard deviation of age: 16.72144 \n\ncat(\"Range of age:\", range_age[1], \"to\", range_age[2], \"\\n\")\n\nRange of age: 18 to 93 \n\ncat(\"Interquartile range of age:\", iqr_age, \"\\n\")\n\nInterquartile range of age: 28"
  },
  {
    "objectID": "03-visualization.html#distribution-shape",
    "href": "03-visualization.html#distribution-shape",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Distribution Shape",
    "text": "Distribution Shape\nThe function skewness() and kurtosis() is available through R package called moments. You may need to install it first before calling the library and its functions like in this code below.\n\nlibrary(moments)\n\nskew_age &lt;- skewness(wvs_cleaned$age, na.rm = TRUE)\nkurtosis_age &lt;- kurtosis(wvs_cleaned$age, na.rm = TRUE)\n\ncat(\"Skewness of age:\", skew_age, \"\\n\")\n\n\n\nSkewness of age: 0.1009475 \n\ncat(\"Kurtosis of age:\", kurtosis_age, \"\\n\")\n\nKurtosis of age: 2.018238"
  },
  {
    "objectID": "03-visualization.html#visualizing-with-ggplot",
    "href": "03-visualization.html#visualizing-with-ggplot",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Visualizing with ggplot",
    "text": "Visualizing with ggplot\n\nDescribing the spread and shape of distribution with just words is not very productive, so typically it is accompanied with visualization.\nggplot is plotting package that is included inside tidyverse package\nworks best with data in the long format, i.e., a column for all the dimensions/measures and another column for the value for each dimension/measure.\n\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = age)) +\n    geom_histogram(binwidth = 1, fill = \"lightblue\", color = \"navy\") +\n    labs(title = \"Age distribution of respondents\",\n         x = \"Age\",\n         y = \"Count\") +\n    theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#visualizing-with-ggplot-output",
    "href": "03-visualization.html#visualizing-with-ggplot-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Visualizing with ggplot",
    "text": "Visualizing with ggplot"
  },
  {
    "objectID": "03-visualization.html#anatomy-of-ggplot-code",
    "href": "03-visualization.html#anatomy-of-ggplot-code",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Anatomy of ggplot code",
    "text": "Anatomy of ggplot code\nCharts built with ggplot must include the following:\n1wvs_cleaned |&gt;\n2    ggplot(aes(x = age)) +\n3    geom_histogram(binwidth = 1, fill = \"lightblue\", color = \"navy\") +\n4    labs(title = \"Age distribution of respondents\",\n         x = \"Age\",\n         y = \"Count\") +\n5    theme_minimal()\n\n1\n\nData - the dataframe/tibble to visualize.\n\n2\n\nAesthetic mappings (aes) - describes which variables are mapped to the x, y axes, alpha (transparency) and other visual aesthetics.\n\n3\n\nGeometric objects (geom) - describes how values are rendered; as bars, scatterplot, lines, etc.\n\n4\n\nProvide titles and labels to your graph\n\n5\n\n(Optional) apply a theme/look to your graph"
  },
  {
    "objectID": "03-visualization.html#tip-open-the-ggplot-cheatsheet",
    "href": "03-visualization.html#tip-open-the-ggplot-cheatsheet",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Tip: open the ggplot cheatsheet",
    "text": "Tip: open the ggplot cheatsheet\n\n\n\n\n\n\nTip\n\n\nA strategy I’d like to recommend: briefly read over the ggplot2 documentation and have them open on a separate tab. Figure out the type of variables you need to visualize (discrete or continuous) to quickly identify which visualization would make sense.\n\n\n\n\nggplot documentation link"
  },
  {
    "objectID": "03-visualization.html#going-back-to-our-univariate-descriptive-stats-on-age-variable",
    "href": "03-visualization.html#going-back-to-our-univariate-descriptive-stats-on-age-variable",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Going back to our univariate descriptive stats on age variable",
    "text": "Going back to our univariate descriptive stats on age variable\nLet’s visualize the variability with boxplot to get a better sense of the spread.\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = age)) +\n    geom_boxplot(fill = \"lightblue\", color = \"navy\") +\n    labs(title = \"Age distribution of respondents\",\n         x = \"Age\") +\n    theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#going-back-to-our-univariate-descriptive-stats-on-age-variable-output",
    "href": "03-visualization.html#going-back-to-our-univariate-descriptive-stats-on-age-variable-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Going back to our univariate descriptive stats on age variable",
    "text": "Going back to our univariate descriptive stats on age variable"
  },
  {
    "objectID": "03-visualization.html#categorical-data---frequency-distribution",
    "href": "03-visualization.html#categorical-data---frequency-distribution",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Categorical Data - Frequency Distribution",
    "text": "Categorical Data - Frequency Distribution\n\nThe age variable is a numerical / continuous data. We can’t apply mean(), median() and other central tendency measures to categorical data such as age_group or employment_status. We can, however, visualize them.\nWhen dealing with categorical data, first take note on whether you want to visualize the proportion or the frequency distribution.\nLet’s visualize the frequency distribution of survey participants by country:\n\n\nwvs_cleaned |&gt; ggplot(aes(x = country, fill = country)) +\n    geom_bar() +\n    labs(title = \"Participants by Country\",\n       x = \"Country\",\n       y = \"Participants\") +\n    theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#categorical-data---frequency-distribution-output",
    "href": "03-visualization.html#categorical-data---frequency-distribution-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Categorical Data - Frequency Distribution",
    "text": "Categorical Data - Frequency Distribution"
  },
  {
    "objectID": "03-visualization.html#categorical-data---proportion",
    "href": "03-visualization.html#categorical-data---proportion",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Categorical Data - Proportion",
    "text": "Categorical Data - Proportion\nWhen we want to show proportion (i.e. in terms of “parts of whole”), we must first quickly calculate the proportion with count()\nLet’s create a new dataframe called wvs_country_proportion to hold this data.\n\nwvs_country_proportion &lt;- wvs_cleaned |&gt; \n    group_by(country) |&gt;\n    summarize(n = n()) |&gt; # count the number of participants each country\n    mutate(proportion = n/sum(n)) # calculate proportion\n\nprint(wvs_country_proportion)\n\n# A tibble: 3 × 3\n  country     n proportion\n  &lt;fct&gt;   &lt;int&gt;      &lt;dbl&gt;\n1 CAN      4018      0.628\n2 NZL       660      0.103\n3 SGP      1725      0.269"
  },
  {
    "objectID": "03-visualization.html#categorical-data---proportion-contd",
    "href": "03-visualization.html#categorical-data---proportion-contd",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Categorical Data - Proportion (cont’d)",
    "text": "Categorical Data - Proportion (cont’d)\nAnd then, we use this proportion table to create a pie chart by adding coord_polar() layer after geom_bar() and some changes in aes() and geom_bar()\n\nwvs_country_proportion |&gt; ggplot(aes(x = \"\", y = proportion, fill = country)) +\n    geom_bar(stat = \"identity\", width = 1) +\n    coord_polar(\"y\", start = 0) +\n    labs(title = \"Proportion of Participants by Country\") +\n    theme_minimal()\n\n\n\n\nNote: if you have lots of categories, pie chart is not always the best option. The code for this pie chart is from R Graph Gallery"
  },
  {
    "objectID": "03-visualization.html#categorical-data---proportion-contd-output",
    "href": "03-visualization.html#categorical-data---proportion-contd-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Categorical Data - Proportion (cont’d)",
    "text": "Categorical Data - Proportion (cont’d)"
  },
  {
    "objectID": "03-visualization.html#learning-check-1a",
    "href": "03-visualization.html#learning-check-1a",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Learning Check 1A",
    "text": "Learning Check 1A\nUsing the wvs_cleaned dataset:\nCreate a histogram that visualizes the distribution of financial_satisfaction\n\n\nShow answer\nwvs_cleaned |&gt; ggplot(aes(x = financial_satisfaction)) +\n  geom_histogram(fill = \"steelblue\", color = \"white\", binwidth = 1) +\n  labs(title = \"Distribution of Financial Satisfaction\",\n       x = \"Financial Satisfaction\",\n       y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#learning-check-1a-output",
    "href": "03-visualization.html#learning-check-1a-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Learning Check 1A",
    "text": "Learning Check 1A"
  },
  {
    "objectID": "03-visualization.html#learning-check-1b",
    "href": "03-visualization.html#learning-check-1b",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Learning Check 1B",
    "text": "Learning Check 1B\nCreate a barchart that visualizes the frequency of religiousity\n\n\nShow answer\nwvs_cleaned |&gt; ggplot(aes(x = religiousity, fill = religiousity)) +\n  geom_bar() +\n  labs(title = \"Frequency of Religiosity\",\n       x = \"Religiosity\",\n       y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#learning-check-1b-output",
    "href": "03-visualization.html#learning-check-1b-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Learning Check 1B",
    "text": "Learning Check 1B"
  },
  {
    "objectID": "03-visualization.html#three-combinations-in-bivariate-descriptive-stats",
    "href": "03-visualization.html#three-combinations-in-bivariate-descriptive-stats",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Three Combinations in Bivariate Descriptive Stats",
    "text": "Three Combinations in Bivariate Descriptive Stats\nBivariate descriptive statistics describe and summarize relationships between two variables in your dataset without making inferences about a larger population. They include numeric measures like correlation or covariance, and visualizations like scatterplots, side-by-side boxplots, or contingency tables.\nThink of them as taking a snapshot of how two variables relate to each other in your current data.\nSince data can be continuous or categorical, there can be three combinations when we deal with bivariate descriptive stats:\n\nBoth categorical (e.g. age_group and country)\nBoth continuous (e.g. financial_satisfaction and life_satisfaction)\nOne continuous, one categorical (e.g. country and life_satisfaction)"
  },
  {
    "objectID": "03-visualization.html#both-categorical",
    "href": "03-visualization.html#both-categorical",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both categorical",
    "text": "Both categorical\n\nExamine relationships between categorical variables\nLook at joint distributions and proportions\nCompare group compositions\n\nFirst, let’s create a contingency table of age_group and country!\n\ntable(wvs_cleaned$age_group, wvs_cleaned$country)\n\n       \n         CAN  NZL  SGP\n  18-28  712   27  246\n  29-44 1232  119  511\n  45-60 1061  222  550\n  61+   1013  292  418"
  },
  {
    "objectID": "03-visualization.html#both-categorical-contd",
    "href": "03-visualization.html#both-categorical-contd",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both categorical (cont’d)",
    "text": "Both categorical (cont’d)\nWe can also create a proportion table just like we did earlier\n\nwvs_cleaned |&gt; \n  group_by(country, age_group) |&gt; \n  summarise(n = n()) |&gt; # count the frequency of participants by age group and country \n  mutate(prop = n/sum(n)) # calculate proportion\n\n# A tibble: 12 × 4\n# Groups:   country [3]\n   country age_group     n   prop\n   &lt;fct&gt;   &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1 CAN     18-28       712 0.177 \n 2 CAN     29-44      1232 0.307 \n 3 CAN     45-60      1061 0.264 \n 4 CAN     61+        1013 0.252 \n 5 NZL     18-28        27 0.0409\n 6 NZL     29-44       119 0.180 \n 7 NZL     45-60       222 0.336 \n 8 NZL     61+         292 0.442 \n 9 SGP     18-28       246 0.143 \n10 SGP     29-44       511 0.296 \n11 SGP     45-60       550 0.319 \n12 SGP     61+         418 0.242"
  },
  {
    "objectID": "03-visualization.html#both-categorical-contd-1",
    "href": "03-visualization.html#both-categorical-contd-1",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both categorical (cont’d)",
    "text": "Both categorical (cont’d)\nFor categorical data like this, we can use barchart to visualize the frequency distribution. Stacked bar chart can be used to visualize proportion.\n\nwvs_cleaned |&gt; ggplot(aes(x = country, fill = age_group)) +\n  geom_bar(position = \"dodge\") + \n  labs(y = \"Count\", title = \"Age Groups by Country\") +\n  theme_minimal()\n\n\nChange position = \"dodge\" to position = \"stack\" to stack the bar chart"
  },
  {
    "objectID": "03-visualization.html#both-categorical-contd-1-output",
    "href": "03-visualization.html#both-categorical-contd-1-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both categorical (cont’d)",
    "text": "Both categorical (cont’d)"
  },
  {
    "objectID": "03-visualization.html#both-categorical-contd-2",
    "href": "03-visualization.html#both-categorical-contd-2",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both categorical (cont’d)",
    "text": "Both categorical (cont’d)\nTo get a better sense of the proportion for each country, we can use percent stacked bar chart.\nThe code is similar to previous bar charts; we just have to change the position argument to position = \"fill\"\n\nwvs_cleaned |&gt; ggplot(aes(x = country, fill = age_group)) +\n  geom_bar(position = \"fill\") + \n  labs(y = \"Proportion\", title = \"Age Groups by Country\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#both-categorical-contd-2-output",
    "href": "03-visualization.html#both-categorical-contd-2-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both categorical (cont’d)",
    "text": "Both categorical (cont’d)"
  },
  {
    "objectID": "03-visualization.html#both-continuous",
    "href": "03-visualization.html#both-continuous",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both continuous",
    "text": "Both continuous\n\nExamine linear relationships\nLook for patterns and trends\nIdentify potential outliers\n\nLet’s first examine the correlation between financial_satisfaction and life_satisfaction\n\ncor(wvs_cleaned$financial_satisfaction, wvs_cleaned$life_satisfaction)\n\n[1] 0.6420311"
  },
  {
    "objectID": "03-visualization.html#both-continuous-contd",
    "href": "03-visualization.html#both-continuous-contd",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both continuous (cont’d)",
    "text": "Both continuous (cont’d)\nLet’s visualize the two variables together with a jitter / scatterplot!\n\nwvs_cleaned |&gt; ggplot(aes(x = financial_satisfaction, y = life_satisfaction)) +\n  geom_jitter(alpha = 0.3) +\n  geom_smooth(method = \"lm\") + # layer with geom_smooth\n  labs(title = \"Financial vs Life Satisfaction\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#both-continuous-contd-output",
    "href": "03-visualization.html#both-continuous-contd-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Both continuous (cont’d)",
    "text": "Both continuous (cont’d)"
  },
  {
    "objectID": "03-visualization.html#correlation-plot",
    "href": "03-visualization.html#correlation-plot",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Correlation Plot",
    "text": "Correlation Plot\nWhen there are more than two continuous variables to explore, correlation map is sometimes used. We can achieve this with ggplot, but it’s much easier to use the corrplot() function from the corrplot package.\nLet’s visualize the correlation map for these three variables.\n\nlibrary(corrplot)\n\n# select all the columns for correlation calculation, save it to columns_for_corr\ncolumns_for_corr &lt;- wvs_cleaned |&gt; \n  select(financial_satisfaction, life_satisfaction, age)\n\n# pass the columns_for_corr to cor() function, and save the result to cor_matrix\ncor_matrix &lt;- cor(columns_for_corr)\n\n# visualize the cor_matrix with corrplot()!\ncorrplot(cor_matrix,\n         method = \"shade\", # show the correlation strength as color shades\n         addCoef.col = \"black\", tl.col = \"black\") # label the coefficients\n\n\n\n\nif you get an error saying “corrplot function not found” or something along that line, that means you need to install the corrplot package first! Run this line in your RStudio Console (bottom left area): install.packages(\"corrplot\")"
  },
  {
    "objectID": "03-visualization.html#correlation-plot-output",
    "href": "03-visualization.html#correlation-plot-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Correlation Plot",
    "text": "Correlation Plot"
  },
  {
    "objectID": "03-visualization.html#correlation-plot---shorter-code",
    "href": "03-visualization.html#correlation-plot---shorter-code",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Correlation Plot - shorter code",
    "text": "Correlation Plot - shorter code\nWe can shorten the code in the previous slide using the maggritr pipe |&gt; like so:\n\nwvs_cleaned |&gt; \n    select(financial_satisfaction, life_satisfaction, age) |&gt; \n    cor() |&gt; \n    corrplot(method = \"shade\", # show the correlation strength as color shades\n         addCoef.col = \"black\", tl.col = \"black\")\n\n\nRefresher:\nNotice that we don’t have to pass the column names to cor() and corrplot() function. This is because the maggritr pipe |&gt;, acts as a “conveyor belt” that take output from one step and then immediately feed it to the next step."
  },
  {
    "objectID": "03-visualization.html#correlation-plot---shorter-code-output",
    "href": "03-visualization.html#correlation-plot---shorter-code-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Correlation Plot - shorter code",
    "text": "Correlation Plot - shorter code"
  },
  {
    "objectID": "03-visualization.html#one-continuous-one-categorical",
    "href": "03-visualization.html#one-continuous-one-categorical",
    "title": "Data Visualization and Descriptive Stats",
    "section": "One continuous, one categorical",
    "text": "One continuous, one categorical\n\nCompare distributions across groups\nIdentify group differences\nExamine spread within groups\n\nLet’s do a recap from last week and get the summary stats for life_satisfaction for each country\n\nwvs_cleaned |&gt; \n  group_by(country) |&gt; \n  summarise(\n    mean_satisfaction = mean(life_satisfaction, na.rm = TRUE),\n    median_satisfaction = median(life_satisfaction, na.rm = TRUE),\n    sd_satisfaction = sd(life_satisfaction, na.rm = TRUE)\n  )\n\n# A tibble: 3 × 4\n  country mean_satisfaction median_satisfaction sd_satisfaction\n  &lt;fct&gt;               &lt;dbl&gt;               &lt;dbl&gt;           &lt;dbl&gt;\n1 CAN                  7.04                   7            1.81\n2 NZL                  7.60                   8            1.79\n3 SGP                  7.06                   7            1.78"
  },
  {
    "objectID": "03-visualization.html#one-continuous-one-categorical-contd",
    "href": "03-visualization.html#one-continuous-one-categorical-contd",
    "title": "Data Visualization and Descriptive Stats",
    "section": "One continuous, one categorical (cont’d)",
    "text": "One continuous, one categorical (cont’d)\nTo get a better sense of how the data is varied and spread, let’s visualize them with a side-by-side boxplot\n\nwvs_cleaned |&gt; ggplot(aes(x = country, y = life_satisfaction)) +\n  geom_boxplot() +\n  labs(title = \"Life Satisfaction by Country\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#one-continuous-one-categorical-contd-output",
    "href": "03-visualization.html#one-continuous-one-categorical-contd-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "One continuous, one categorical (cont’d)",
    "text": "One continuous, one categorical (cont’d)"
  },
  {
    "objectID": "03-visualization.html#one-continuous-one-categorical-contd-1",
    "href": "03-visualization.html#one-continuous-one-categorical-contd-1",
    "title": "Data Visualization and Descriptive Stats",
    "section": "One continuous, one categorical (cont’d)",
    "text": "One continuous, one categorical (cont’d)\nWe could also layer our boxplots with violin plots to get a better sense of the distribution of each group.\n\nwvs_cleaned |&gt; ggplot(aes(x = country, y = life_satisfaction)) +\n  geom_violin(fill = \"lightblue\", alpha = 0.5) +\n  geom_boxplot(width = 0.1, fill = \"white\") +\n  labs(title = \"Life Satisfaction Distribution by Country\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#one-continuous-one-categorical-contd-1-output",
    "href": "03-visualization.html#one-continuous-one-categorical-contd-1-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "One continuous, one categorical (cont’d)",
    "text": "One continuous, one categorical (cont’d)"
  },
  {
    "objectID": "03-visualization.html#how-to-save-your-images---ggsave",
    "href": "03-visualization.html#how-to-save-your-images---ggsave",
    "title": "Data Visualization and Descriptive Stats",
    "section": "How to save your images - ggsave",
    "text": "How to save your images - ggsave\nThere are two ways to do this:\n\nVia ggsave\nThe point-and-click way in RStudio\n\nBelow is the ggsave way:\n# save the chart into an object instead of viewing it like we have been doing\nboxplot_obj &lt;- wvs_cleaned |&gt; \n    ggplot(aes(x = age)) +\n    geom_boxplot(fill = \"lightblue\", color = \"navy\") +\n    labs(title = \"Age distribution of respondents\",\n         x = \"Age\") +\n    theme_minimal()\n\n# pass the saved chart into ggsave and give it a filename\nggsave(\"fig-output/boxplot_1.jpg\", boxplot_obj)"
  },
  {
    "objectID": "03-visualization.html#how-to-save-your-images---point-and-click",
    "href": "03-visualization.html#how-to-save-your-images---point-and-click",
    "title": "Data Visualization and Descriptive Stats",
    "section": "How to save your images - point-and-click",
    "text": "How to save your images - point-and-click"
  },
  {
    "objectID": "03-visualization.html#learning-check-2",
    "href": "03-visualization.html#learning-check-2",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Learning Check #2",
    "text": "Learning Check #2\nCreate a side-by-side boxplots that visualizes political_scale for each sex.\n\n\nShow answer\nwvs_cleaned |&gt; ggplot(aes(x = political_scale, y = sex)) +\n  geom_violin(fill = \"lightblue\", alpha = 0.5) +\n  geom_boxplot(width = 0.1, fill = \"white\") +\n  labs(title = \"Political scale Distribution by Sex\") +\n  theme_minimal()"
  },
  {
    "objectID": "03-visualization.html#using-facets-for-more-complex-visual",
    "href": "03-visualization.html#using-facets-for-more-complex-visual",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Using Facets for more complex visual",
    "text": "Using Facets for more complex visual\n\nCompare patterns across multiple subgroups\nIdentify interaction effects\nMaintain visual clarity with complex relationships\n\nFacet grids are useful when we have more than two variables to visualize. However, if used excessively they may become too complex\n\nwvs_cleaned |&gt; ggplot(aes(x = financial_satisfaction, y = life_satisfaction)) +\n  geom_point(alpha = 0.3) +\n  geom_smooth(method = \"lm\") +\n  facet_grid(country ~ religiousity)"
  },
  {
    "objectID": "03-visualization.html#using-facets-for-more-complex-visual-output",
    "href": "03-visualization.html#using-facets-for-more-complex-visual-output",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Using Facets for more complex visual",
    "text": "Using Facets for more complex visual"
  },
  {
    "objectID": "03-visualization.html#is-fancier-better",
    "href": "03-visualization.html#is-fancier-better",
    "title": "Data Visualization and Descriptive Stats",
    "section": "Is fancier = better?",
    "text": "Is fancier = better?\nFancier, more complicated visualization does not necessarily mean better!\nTake a look at this award-winning visualization by Simon Scarr"
  },
  {
    "objectID": "01-intro.html#preamble",
    "href": "01-intro.html#preamble",
    "title": "Introduction to R and RStudio",
    "section": "Preamble",
    "text": "Preamble\n\nAbout Bella:\n\nSenior Librarian, Research & Data Services team, SMU Libraries.\nBachelor in Info Tech (IT), MSc in Info Studies from NTU.\nHave been with SMU since the pandemic era (2021).\nHave been doing this workshop since Aug 2023.\n\nAbout Wei:\n\nPrinciple Librarian, Instruction and Learning Services, SMU Libraries.\nHave been with SMU over 16 years. This is my first R workshop!\n\nAbout this workshop:\n\nLive-coding format; code along with me!\nGoal of workshop: to give you enough fundamentals (at least to the point that ChatGPT can’t bluff you so easily) and confidence to explore R on your own.\nDon’t be afraid to ask for help! We are all here to learn."
  },
  {
    "objectID": "01-intro.html#the-outline-for-these-workshops",
    "href": "01-intro.html#the-outline-for-these-workshops",
    "title": "Introduction to R and RStudio",
    "section": "The outline for these workshops",
    "text": "The outline for these workshops\nThe workshops are structured to follow this workflow when dealing with data \n\n\nImage is taken from R for Data Science (2e) by Hadley Wickham."
  },
  {
    "objectID": "01-intro.html#the-outline-for-introductory-r-for-social-science-series",
    "href": "01-intro.html#the-outline-for-introductory-r-for-social-science-series",
    "title": "Introduction to R and RStudio",
    "section": "The outline for Introductory R for Social Science series",
    "text": "The outline for Introductory R for Social Science series\n\n\nImport data into R, which means take data (stored in a file, via API, etc) and load it into a dataframe in R\nTidy the imported data.\n\nTidy = storing it in a consistent form that matches the semantics of the dataset.\nTidy data = each column is a variable, each row is an observation\n\nOnce a data is tidy, we can transform it. Transformation includes:\n\nnarrowing in on observations of interest (like all people in one city or all data from the last year)\ncreating new variables that are functions of existing variables (like computing speed from distance and time)\ncalculating a set of summary statistics (like counts or means).\n\nOnce we have tidy data with the info we need, we can visualize it and model it.\nCommunicate the result. It doesn’t matter how well your models and visualization have led you to understand the data unless you can also communicate your results to others."
  },
  {
    "objectID": "01-intro.html#todays-plan",
    "href": "01-intro.html#todays-plan",
    "title": "Introduction to R and RStudio",
    "section": "Today’s plan",
    "text": "Today’s plan\n\nR and Rstudio\nBefore coding\nR Objects and Values\nData types\nFunctions and packages\nData structures\nExploring datasets\nTrouble shooting tips\nRecap & feedback"
  },
  {
    "objectID": "01-intro.html#what-is-r-what-is-r-studio",
    "href": "01-intro.html#what-is-r-what-is-r-studio",
    "title": "Introduction to R and RStudio",
    "section": "What is R? What is R Studio?",
    "text": "What is R? What is R Studio?\nR: R is an open-source programming language that was developed for statistical analysis and visualization. Community share R codes and create shortcuts.\nRStudio: The R software environment i.e. RStudio is where we use to interact more easily with R language and scripts.\n\nYou will need to install both for this workshop. Go to https://posit.co/download/rstudio-desktop to download and install both if you have not done so. Remember: Install R firstly and then RStudio.\nCheck out the course website for a step-by-step guide."
  },
  {
    "objectID": "01-intro.html#a-tour-of-rstudio",
    "href": "01-intro.html#a-tour-of-rstudio",
    "title": "Introduction to R and RStudio",
    "section": "A Tour of RStudio",
    "text": "A Tour of RStudio\nFirstly, we need to be comfortable with the RStudio interface. We will use the RStudio to write code, navigate the files on our computer, inspect the variables we create, and visualize the plots we generate.\n\nR Studio layout"
  },
  {
    "objectID": "01-intro.html#before-coding",
    "href": "01-intro.html#before-coding",
    "title": "Introduction to R and RStudio",
    "section": "Before Coding",
    "text": "Before Coding\n\nSetting up working directory\nCreating projects\nCreating folders and files"
  },
  {
    "objectID": "01-intro.html#r-objects-and-values",
    "href": "01-intro.html#r-objects-and-values",
    "title": "Introduction to R and RStudio",
    "section": "R Objects and Values",
    "text": "R Objects and Values\nIn this line of code:\n\ncountry_name &lt;- \"Singapore\"\n\n\n\"Singapore\" is a value. This can be either a character, numeric, or boolean data type. (more on this soon)\ncountry_name is the object where we store this value. This is so that we can keep this value to be used later.\n&lt;- is the assignment operator to assign the value to the object.\n\nYou can also use =, but generally in R, &lt;- is the convention.\nKeyboard shortcut: Alt + - in Windows (Option + - in Mac)"
  },
  {
    "objectID": "01-intro.html#r-objects-and-values-1",
    "href": "01-intro.html#r-objects-and-values-1",
    "title": "Introduction to R and RStudio",
    "section": "R Objects and Values",
    "text": "R Objects and Values\nIn this line of code:\n\ncountry_name &lt;- \"Singapore\"\n\n\n\"Singapore\" is a value. This can be either a character, numeric, or boolean data type. (more on this soon)\ncountry_name is the object where we store this value. This is so that we can keep this value to be used later.\n&lt;- is the assignment operator to assign the value to the object.\n\nYou can also use =, but generally in R, &lt;- is the convention.\nKeyboard shortcut: Alt + - in Windows (Option + - in Mac)\n\nObject name rules:\n\nCan’t start with numbers\nCase sensitive\nNo spaces\nSome reserved words (like some function names in R)"
  },
  {
    "objectID": "01-intro.html#refresher-quantitative-data-types",
    "href": "01-intro.html#refresher-quantitative-data-types",
    "title": "Introduction to R and RStudio",
    "section": "Refresher: Quantitative Data Types",
    "text": "Refresher: Quantitative Data Types\n\nNon-Continuous Data\n\nNominal/Categorical: Non-ordered, non-numerical data, used to represent qualitative attribute.\n\nExample: nationality, neighborhood, employment status\n\nOrdinal: Ordered non-numerical data.\n\nExample: Nutri-grade ratings, frequency of exercise (daily, weekly, bi-weekly)\n\nDiscrete: Numerical data that can only take specific value (usually integers)\n\nExample: Shoe size, clothing size\n\nBinary: Nominal data with only two possible outcome\n\nExample: pass/fail, yes/no, survive/not survive"
  },
  {
    "objectID": "01-intro.html#data-types-in-r",
    "href": "01-intro.html#data-types-in-r",
    "title": "Introduction to R and RStudio",
    "section": "Data Types in R",
    "text": "Data Types in R\nThe four basic data types are characters, numeric, boolean, and integer. Let’s look at examples using our WVS survey variables:\n\ncountry_code &lt;- \"SGP\" # Character\nlife_satisfaction &lt;- 8.5 # Numeric (also sometimes called Double)\nis_religious &lt;- TRUE # Boolean/Logical (TRUE/FALSE). case sensitive\nbirth_year &lt;- 1990L # Integer (whole numbers)\n\n\nTo include comments in the code, use the # character.\nAnything to the right of the # sign and up to the end of the line is treated as a comment and is ignored by R when executing.\nGood practice to make notes and explain the codes."
  },
  {
    "objectID": "01-intro.html#checking-data-type-of-a-variable",
    "href": "01-intro.html#checking-data-type-of-a-variable",
    "title": "Introduction to R and RStudio",
    "section": "Checking data type of a variable",
    "text": "Checking data type of a variable\nYou can use str or typeof to check the data type of an R object.\n\ntypeof(country_code)\n\n[1] \"character\"\n\n\n\nstr(is_religious) \n\n logi TRUE\n\n\nstr returns both data type and value."
  },
  {
    "objectID": "01-intro.html#arithmetic-operations-in-r",
    "href": "01-intro.html#arithmetic-operations-in-r",
    "title": "Introduction to R and RStudio",
    "section": "Arithmetic operations in R",
    "text": "Arithmetic operations in R\nYou can do arithmetic operations in R. For example, let’s calculate average satisfaction scores:\n\n(8 + 7 + 9) / 3  # Average of three satisfaction scores\n\n[1] 8\n\n\n\n2025 - 1990  # Calculate age from birth year\n\n[1] 35"
  },
  {
    "objectID": "01-intro.html#boolean-operations-in-r---simple-truefalse-statements",
    "href": "01-intro.html#boolean-operations-in-r---simple-truefalse-statements",
    "title": "Introduction to R and RStudio",
    "section": "Boolean operations in R - Simple TRUE/FALSE statements",
    "text": "Boolean operations in R - Simple TRUE/FALSE statements\nBoolean operations in R are useful for filtering survey data. Before that, let’s look at how R evaluates simple TRUE/FALSE statements\nIs life_satisfaction greater than 8?\n\nlife_satisfaction &lt;- 8.5 # assign a value of 8.5 to life_satisfaction\nlife_satisfaction &gt; 8  \n\n[1] TRUE\n\n\nIs the country Singapore?\n\ncountry_code == \"SGP\"  \n\n[1] TRUE\n\n\nIs the country NOT Singapore?\n\ncountry_code != \"SGP\"  \n\n[1] FALSE"
  },
  {
    "objectID": "01-intro.html#boolean-operations-in-r---and-operator",
    "href": "01-intro.html#boolean-operations-in-r---and-operator",
    "title": "Introduction to R and RStudio",
    "section": "Boolean operations in R - AND operator",
    "text": "Boolean operations in R - AND operator\nSometimes, we may have multiple statements to evaluate. This is where the Boolean Operators will come handy.\nAND operations (both conditions must be TRUE). In R, it is represented by ampersand &\nIs the country New Zealand AND is the life satisfaction more than 8?\n\n(country_code == \"NZL\") & (life_satisfaction &gt; 8) \n\n[1] FALSE\n\n\ncountry_code == \"NZL\" is FALSE while life_satisfaction &gt; 8 is TRUE\nThe whole statement will return FALSE because not all conditions TRUE."
  },
  {
    "objectID": "01-intro.html#boolean-operations-in-r---or-operator",
    "href": "01-intro.html#boolean-operations-in-r---or-operator",
    "title": "Introduction to R and RStudio",
    "section": "Boolean operations in R - OR operator",
    "text": "Boolean operations in R - OR operator\nOR operations (at least one condition must be TRUE). In R, it is represented by pipe symbol |\nIs the country New Zealand OR is the life satisfaction more than 8?\n\n(country_code == \"NZL\") | (life_satisfaction &gt; 8) \n\n[1] TRUE\n\n\nAs long as one condition is met, this will be TRUE."
  },
  {
    "objectID": "01-intro.html#functions-in-r",
    "href": "01-intro.html#functions-in-r",
    "title": "Introduction to R and RStudio",
    "section": "Functions in R",
    "text": "Functions in R\n\nA function is like a recipe in cooking.\nIt takes some ingredients (inputs) and uses a set of instructions to produce a result (output).\nIn R, a function is a pre-written set of recipes/instructions that performs a specific task. Function name will always be followed by round brackets ()\n\nExample: round() function in R will round up numbers.\n\nround(3.1415926)\n\n[1] 3\n\n\n\nround() is the “recipe”, while 3.1415926 is the “ingredients”\n\nSaving the result to an object:\n\nrounded_pi &lt;- round(3.1415926)\nprint(rounded_pi)\n\n[1] 3"
  },
  {
    "objectID": "01-intro.html#functions-with-arguments-in-r",
    "href": "01-intro.html#functions-with-arguments-in-r",
    "title": "Introduction to R and RStudio",
    "section": "Functions with Arguments in R",
    "text": "Functions with Arguments in R\n\nFollowing the recipe analogy, arguments are the ingredients you provide to a function. function_name(arguments/parameters)\nSome arguments are required, while others are optional (they have default values).\nEach argument tells the function what to use or how to perform the task.\nExample: Think of a bubble tea order as a function. The possible arguments/ingredients here are:\n\nTea - required ingredient\nMilk - optional, the default is to include\nToppings - optional, the default choice is “pearls”\n\n\nIn R:\n\nround(3.1415926, digits = 2)\n\n[1] 3.14\n\n\n\n3.1415926 is the required argument (if this is not provided, the function will not run)\ndigits is an optional argument specifying how many decimal places to round to (the default is 0)"
  },
  {
    "objectID": "01-intro.html#how-do-i-find-out-more-about-a-particular-function",
    "href": "01-intro.html#how-do-i-find-out-more-about-a-particular-function",
    "title": "Introduction to R and RStudio",
    "section": "How do I find out more about a particular function?",
    "text": "How do I find out more about a particular function?\nYou can call the help page / vignette in R by prepending ? to the function name.\nE.g. if you want to find out more about the round function, you can run ?round in your R console (bottom left panel)"
  },
  {
    "objectID": "01-intro.html#packages-in-r",
    "href": "01-intro.html#packages-in-r",
    "title": "Introduction to R and RStudio",
    "section": "Packages in R",
    "text": "Packages in R\n\nPackages are a collections of R functions, datasets, etc. Packages extend the functionality of R.\n\n(Closest analogy I can think of is that they’re equivalent of browser add-ons, in a way)\n\nPopular packages: tidyverse, caret, shiny, etc.\nInstallation (you only need to do this once): install.packages(\"package name\")\nLoading packages (you need to run this everytime you restart RStudio): library(package name) - let’s try to load tidyverse!\n\nTidyverse is a well-known collection of packages that facilitates data science projects. It includes packages for data manipulation, visualization, importing, and tidying."
  },
  {
    "objectID": "01-intro.html#data-structures-in-r",
    "href": "01-intro.html#data-structures-in-r",
    "title": "Introduction to R and RStudio",
    "section": "Data Structures in R",
    "text": "Data Structures in R\nWe will start with exploring 3 basic types of data structures in R:\n\n\n\nVector - can hold multiple values in a single variable/object.\nFactor - Special data structure in R to handle categorical variables.\nData frame - De facto data structure for tabular data in R, and what we use for data processing, plotting, and statistics."
  },
  {
    "objectID": "01-intro.html#data-structures-in-r-vectors",
    "href": "01-intro.html#data-structures-in-r-vectors",
    "title": "Introduction to R and RStudio",
    "section": "Data Structures in R: Vectors",
    "text": "Data Structures in R: Vectors\nThink of vectors as a column in a dataset. It is the most common and basic data structure in R. (pretty much the workhorse of R!)\n\nA vector can only contain 1 data type.\nVector can be created with c() function.\nCan add, remove, or change values in a vector.\nInspect vectors: typeof(), str(), length()\n\n\ncountries &lt;- c(\"CAN\", \"NZL\", \"SGP\", \"CAN\", \"SGP\")\nsatisfaction_scores &lt;- c(8, 7, 9, 6, 8)\nemployment_status &lt;- c(\"Full time\", \"Student\", \"Part time\", \"Retired\", \"Full time\")"
  },
  {
    "objectID": "01-intro.html#vector-manipulations-retrieve-and-update-items",
    "href": "01-intro.html#vector-manipulations-retrieve-and-update-items",
    "title": "Introduction to R and RStudio",
    "section": "Vector Manipulations: Retrieve and update items",
    "text": "Vector Manipulations: Retrieve and update items\nRetrieve the first country in the vector\n\ncountries[1]\n\n[1] \"CAN\"\n\n\nRetrieves the first three satisfaction scores\n\nsatisfaction_scores[1:3]\n\n[1] 8 7 9\n\n\nRetrieves the first and the third satisfaction scores\n\nsatisfaction_scores[c(1,3)]\n\n[1] 8 9\n\n\nUpdate the first satisfaction score\n\nsatisfaction_scores[1] &lt;- 7\nprint(satisfaction_scores)\n\n[1] 7 7 9 6 8"
  },
  {
    "objectID": "01-intro.html#why-square-brackets-and-not-round-brackets",
    "href": "01-intro.html#why-square-brackets-and-not-round-brackets",
    "title": "Introduction to R and RStudio",
    "section": "Why square brackets and not round brackets?",
    "text": "Why square brackets and not round brackets?\nRound brackets () are for running functions, like using a tool: mean() or sum().\nSquare brackets [] are for accessing specific parts of your data, where we pass the index number(s) of the element(s) we want."
  },
  {
    "objectID": "01-intro.html#vector-manipulations-retrieve-items-based-on-criteria",
    "href": "01-intro.html#vector-manipulations-retrieve-items-based-on-criteria",
    "title": "Introduction to R and RStudio",
    "section": "Vector Manipulations: Retrieve items based on criteria",
    "text": "Vector Manipulations: Retrieve items based on criteria\nLet’s find high satisfaction scores (above 7)!\n\nThe code below will create a boolean vector called criteria that basically keep tracks on whether each items inside satisfaction_scores fulfil our condition.\nThe condition is “value must be &gt; 7”. e.g. if item 1 fulfils our condition, then item 1 is ‘marked’ as TRUE. Otherwise, it will be FALSE\n\n\n# Create boolean vector for our condition\ncriteria &lt;- satisfaction_scores &gt; 7\nprint(criteria)\n\n[1] FALSE FALSE  TRUE FALSE  TRUE\n\n\n\nThis line of code applies the boolean vector criteria to satisfaction_scores, and only retrieve items that fulfils the condition. i.e. only return TRUE value criteria vector\n\n\n# Use the boolean vector to filter satisfaction scores\nsatisfaction_scores[criteria]\n\n[1] 9 8"
  },
  {
    "objectID": "01-intro.html#vector-manipulations-add-items",
    "href": "01-intro.html#vector-manipulations-add-items",
    "title": "Introduction to R and RStudio",
    "section": "Vector Manipulations: Add items",
    "text": "Vector Manipulations: Add items\nSeveral ways to add items to a vector\n\n1satisfaction_scores &lt;- c(satisfaction_scores, 7)\n2satisfaction_scores &lt;- c(satisfaction_scores, 8, 9, 10)\n3satisfaction_scores &lt;- c(8, satisfaction_scores)\n4satisfaction_scores &lt;- append(satisfaction_scores, 9, after = 2)\n\n\n1\n\nAdd a single score to the end of the vector using c()\n\n2\n\nAdd multiple scores to the end\n\n3\n\nAdd a score to the beginning\n\n4\n\nInsert a score at a specific position using append(vector_name, elements_to_be_added, from_the_position)"
  },
  {
    "objectID": "01-intro.html#vector-manipulations-remove-items",
    "href": "01-intro.html#vector-manipulations-remove-items",
    "title": "Introduction to R and RStudio",
    "section": "Vector Manipulations: Remove items",
    "text": "Vector Manipulations: Remove items\n\n1satisfaction_scores &lt;- satisfaction_scores[-c(2, 4)]\n2satisfaction_scores &lt;- satisfaction_scores[satisfaction_scores &lt;= 7]\n3satisfaction_scores &lt;- na.omit(satisfaction_scores)\n\n\n1\n\nRemove elements by index using “negative indexing”\n\n2\n\nRemove elements based on a condition using logical indexing. Remove these items which are FALSE.\n\n3\n\nRemove NA values from the vector"
  },
  {
    "objectID": "01-intro.html#vector-manipulations-handle-na-values",
    "href": "01-intro.html#vector-manipulations-handle-na-values",
    "title": "Introduction to R and RStudio",
    "section": "Vector Manipulations: Handle NA values",
    "text": "Vector Manipulations: Handle NA values\n\nNA values indicate null values, or the absence of a value (0 is still a value!)\nSummary functions like mean needs you to inlcude argument called na.rm on how you want it to be handled.\n\nSurvey data often contains missing values (NA):\n\nfinancial_satisfaction &lt;- c(8, 7, NA, 6, 9, NA, 7)\n\n# By default, mean() will return NA if there are any NA values\nmean(financial_satisfaction)\n\n[1] NA\n\n# Remove NA values before calculating mean by including na.rm = TRUE\nmean(financial_satisfaction, na.rm = TRUE)\n\n[1] 7.4"
  },
  {
    "objectID": "01-intro.html#data-structures-in-r-factors",
    "href": "01-intro.html#data-structures-in-r-factors",
    "title": "Introduction to R and RStudio",
    "section": "Data Structures in R: Factors",
    "text": "Data Structures in R: Factors\n\nSpecial data structure in R to deal with categorical data.\nLook (and often behave) like character vectors but are actually treated as integer vectors.\nCan only contain a predefined set of values, known as levels. R always sorts levels in alphabetical order\nCan be ordered (ordinal) or unordered (nominal).\nMay look like a normal vector at first glance, so use str() to check."
  },
  {
    "objectID": "01-intro.html#data-structures-in-r-dataframe",
    "href": "01-intro.html#data-structures-in-r-dataframe",
    "title": "Introduction to R and RStudio",
    "section": "Data Structures in R: Dataframe",
    "text": "Data Structures in R: Dataframe\n\nDe facto data structure for tabular data in R, and what we use for data processing, plotting, and statistics.\nSimilar to spreadsheets - a rectangular collection of variables (columns) and observations (rows)!\nYou can create it by hand like so:\n\n\nsurvey_data &lt;- data.frame(\n    country = c(\"SGP\", \"CAN\", \"NZL\", \"SGP\", \"CAN\"),\n    life_satisfaction = c(8, 7, 9, 6, 8),\n    employment = c(\"Full time\", \"Student\", \"Part time\", \"Retired\", \"Full time\")\n)\nprint(survey_data)\n\n  country life_satisfaction employment\n1     SGP                 8  Full time\n2     CAN                 7    Student\n3     NZL                 9  Part time\n4     SGP                 6    Retired\n5     CAN                 8  Full time"
  },
  {
    "objectID": "01-intro.html#data-structures-in-r-others",
    "href": "01-intro.html#data-structures-in-r-others",
    "title": "Introduction to R and RStudio",
    "section": "Data Structures in R: Others",
    "text": "Data Structures in R: Others\n\nLists: A type of recursive vector\nMatrices: A collection of elements of the same type in rows and columns"
  },
  {
    "objectID": "01-intro.html#downloading-the-world-values-survey-wvs-dataset",
    "href": "01-intro.html#downloading-the-world-values-survey-wvs-dataset",
    "title": "Introduction to R and RStudio",
    "section": "Downloading the World Values Survey (WVS) Dataset",
    "text": "Downloading the World Values Survey (WVS) Dataset\nFor this workshop, we will try loading a dataset from a file.\nGo to the course website and go to the ‘Dataset’ tab to download the data file and information about this WVS data\nDownload this CSV and save it under your data folder in your R project!"
  },
  {
    "objectID": "01-intro.html#loading-the-wvs-dataset",
    "href": "01-intro.html#loading-the-wvs-dataset",
    "title": "Introduction to R and RStudio",
    "section": "Loading the WVS Dataset",
    "text": "Loading the WVS Dataset\nLet’s load our actual World Values Survey dataset using read_csv function.\nBefore use read_csv install and load package tidyverse. Install the package only once and need to load the package in every session before you use it.\n\nlibrary(tidyverse)\n\nwvs_data &lt;- read_csv(\"data/wvs-wave7-sg-ca-nz.csv\")  \nhead(wvs_data)\n\nMake sure to save the CSV file in your data folder! (No auto save)"
  },
  {
    "objectID": "01-intro.html#exploring-the-wvs-dataset",
    "href": "01-intro.html#exploring-the-wvs-dataset",
    "title": "Introduction to R and RStudio",
    "section": "Exploring the WVS Dataset",
    "text": "Exploring the WVS Dataset\n\n1dim(wvs_data)\n2names(wvs_data)\n3str(wvs_data)\n4summary(wvs_data)\n5head(wvs_data, n=5)\n6tail(wvs_data, n=5)\n\n\n1\n\nreturn a vector of number of rows and columns\n\n2\n\ninspect columns\n\n3\n\ninspect structure\n\n4\n\nprint the summary stats of the entire dataframe\n\n5\n\nview the first 5 rows\n\n6\n\nview the last 5 rows"
  },
  {
    "objectID": "01-intro.html#basic-dataframe-manipulations-retrieving-values",
    "href": "01-intro.html#basic-dataframe-manipulations-retrieving-values",
    "title": "Introduction to R and RStudio",
    "section": "Basic dataframe manipulations: Retrieving values",
    "text": "Basic dataframe manipulations: Retrieving values\nSome basic dataframe functions before we move on to data wrangling next week:\n\n1wvs_data[\"country\"]\n2wvs_data$country\n3wvs_data[3]\n4wvs_data[1, 4]\n5wvs_data[3, ]\n\n\n1\n\nretrieve column by column name (returns as tibble/dataframe)\n\n2\n\nanother way to retrieve column by name (returns as vector)\n\n3\n\nretrieve column by index\n\n4\n\nget a cell at this row, column coord\n\n5\n\nget an entire row"
  },
  {
    "objectID": "01-intro.html#trouble-shooting",
    "href": "01-intro.html#trouble-shooting",
    "title": "Introduction to R and RStudio",
    "section": "Trouble Shooting",
    "text": "Trouble Shooting\nTypes of messages\n\nError: Fatal error in your code that prevented it from being run through successfully. Need to fix it for the code to run.\nWarning: Non-fatal errors (don’t stop the code from running, but this is a potential problem that you should know about).\nMessage: Helpful information about the code you just ran(can usually ignore these messages)"
  },
  {
    "objectID": "01-intro.html#trouble-shooting-1",
    "href": "01-intro.html#trouble-shooting-1",
    "title": "Introduction to R and RStudio",
    "section": "Trouble Shooting",
    "text": "Trouble Shooting\nCheck. Did you…\n\nSet your working directory?\nCheck for missing commas (,), parentheses ()?\nCheck your spelling?\n\nSpelling : Punctuation &lt;- meaan(c(1, 2, 3, 4)) or print(Punctuatioon)\nPunctuation : sum(10?20) or Punctuation &lt;- sum(c(10, 20)))\nCapitalization : sUm(c(5, 10, 15))\nIn text indicators : X + Y or #taking notes or “name” vs name"
  },
  {
    "objectID": "01-intro.html#recap",
    "href": "01-intro.html#recap",
    "title": "Introduction to R and RStudio",
    "section": "Recap",
    "text": "Recap\n\nR & RStudio: R is a programming language for statistical computing and graphics, while RStudio is an environment that makes it easier to write, run, and manage R code.\nWorking Directory: A folder on your computer where R reads and saves files.\nData Type: Types of value an object can hold, such as numeric, character, and Boolean.\nData Structure: Data structures organize and store data in R, such as vectors, factors, and data frames.\nFunctions: Reusable codes that perform specific tasks. Can call functions with arguments.\nPackages: Collections of functions and data to perform tasks. Need to install and load packages."
  },
  {
    "objectID": "02-tidyverse.html#todays-outline",
    "href": "02-tidyverse.html#todays-outline",
    "title": "Data Wrangling with Tidyverse",
    "section": "Today’s Outline",
    "text": "Today’s Outline\n\nLoading our data into RStudio environment\nData wrangling with dplyr and tidyr (part of the tidyverse package)"
  },
  {
    "objectID": "02-tidyverse.html#checklist-when-you-start-rstudio",
    "href": "02-tidyverse.html#checklist-when-you-start-rstudio",
    "title": "Data Wrangling with Tidyverse",
    "section": "Checklist when you start RStudio",
    "text": "Checklist when you start RStudio\n\nLoad the project we created last session and open the R script file. Click on File &gt; Recent Projects... &gt; Select the our project from last week.\nMake sure that Environment panel is empty (click on broom icon to clean it up).\nClear the Console and Plots too.\nRe-run the library(tidyverse) and read_csv portion in the previous session (the code is also on the next slide if you missed last week’s session)"
  },
  {
    "objectID": "02-tidyverse.html#refresher-loading-from-csv-into-a-dataframe",
    "href": "02-tidyverse.html#refresher-loading-from-csv-into-a-dataframe",
    "title": "Data Wrangling with Tidyverse",
    "section": "Refresher: Loading from CSV into a dataframe",
    "text": "Refresher: Loading from CSV into a dataframe\nUse read_csv from readr package (part of tidyverse) to load our World Values Survey data. More information about the data can be found under the Dataset tab in the course website.\n\n# import tidyverse library\nlibrary(tidyverse)\n\n# read the CSV and save into a dataframe called wvs_data\nwvs_data &lt;- read_csv(\"data/wvs-wave7-sg-ca-nz.csv\")\n\n# \"peek\" at the data, pay attention to the data types!\nglimpse(wvs_data)"
  },
  {
    "objectID": "02-tidyverse.html#cleaning-data-for-analysis",
    "href": "02-tidyverse.html#cleaning-data-for-analysis",
    "title": "Data Wrangling with Tidyverse",
    "section": "Cleaning data for analysis",
    "text": "Cleaning data for analysis\n\n\nWhy do it in R? Because it’s much efficient to do so in R, especially if your data is large (e.g. millions of rows, thousands of columns) and you have repetitive clean up tasks.\nIncorrect or inconsistent data can lead to false conclusions, so it’s important to clean and prep it correctly.\nHaving a clear understanding of the desired data shape is essential as real data often differs from what you imagine! Refer to codebook, actual questionnaire, appendix for guidance.\nData cleaning techniques differ based on the problems, data type, and the research questions you are trying to answer. Various methods are available, each with its own trade-offs."
  },
  {
    "objectID": "02-tidyverse.html#about-dplyr-and-tidyr",
    "href": "02-tidyverse.html#about-dplyr-and-tidyr",
    "title": "Data Wrangling with Tidyverse",
    "section": "About dplyr and tidyr",
    "text": "About dplyr and tidyr\n\nPackages from tidyverse. (click here to go to the tidyverse homepage)\nPosit have created cheatsheets here! (you can have this open in another tab for reference for this session!)\n\ndplyr cheatsheet | pdf version (I personally prefer this PDF version since it’s more visual)\ntidyr cheatsheet | pdf version\n\nMost of the time, these are the ones that you will use quite often:\n\ndrop_na() - remove rows with null values\nselect() - to select column(s) from a dataframe\nfilter() - to filter rows based on criteria\nmutate() - to compute new columns or edit existing ones\nif_else() and case_when() - to be used with mutate when we want to compute/edit columns based on multiple criteria\ngroup_by() and summarize() - group data and summarize each group"
  },
  {
    "objectID": "02-tidyverse.html#scenario-data-wrangling-activities-with-wvs-data",
    "href": "02-tidyverse.html#scenario-data-wrangling-activities-with-wvs-data",
    "title": "Data Wrangling with Tidyverse",
    "section": "Scenario: Data wrangling activities with WVS data",
    "text": "Scenario: Data wrangling activities with WVS data\nScenario: We are research assistants analyzing patterns in values and satisfaction across different countries and demographic groups.\nOur team has been assigned to explore and get insights on how specific factors (employment, work importance, marital status, political alignment, financial satisfaction, and religiosity) may relate to life satisfaction among different generations (Gen Z, Millennials, Gen X, and Baby Boomer), including how they may differ between the 3 countries.\nTo ensure the analysis quality, we were instructed to discard incomplete data.\nWe can break down the tasks as such:\n\n\nRemove all rows with missing values (NA)\nCheck for duplicates\nSelect only the relevant columns: demographic columns, work_importance, life_satisfaction, financial_satisfaction, religiousity, political_scale, marital_status, and employment.\nFilter for respondents aged 18 or older. Optionally, we can then arrange the dataset by age (oldest to youngest)\nReverse-code importance variables so that higher numbers consistently represent higher levels of the measured construct. In other words, 1 = Not at all important and 4 = Very important.\nCreate age groups for each generation: “18-28”, “29-44”, “45-60”, “61+”\n\n\nOnce we did all of the wrangling above, we can save this “wrangled” version into another CSV"
  },
  {
    "objectID": "02-tidyverse.html#task-1",
    "href": "02-tidyverse.html#task-1",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #1",
    "text": "Task #1\n\nA strategy I’d like to recommend: briefly read over the dplyr + tidyr documentation, either the PDF or HTML version, and have them open on a separate tab so that you can refer to it quickly.\n\nRemove all rows with empty values (NA) with drop_na()\n\nwvs_data &lt;- wvs_data |&gt; \n  drop_na()\n\nThe number of observations after removing NAs:\n\ndim(wvs_data)\n\n[1] 6403   16"
  },
  {
    "objectID": "02-tidyverse.html#interlude-pipe-operator",
    "href": "02-tidyverse.html#interlude-pipe-operator",
    "title": "Data Wrangling with Tidyverse",
    "section": "Interlude: Pipe Operator ( |> )",
    "text": "Interlude: Pipe Operator ( |&gt; )\n\nThe pipe operator (|&gt;) allows us to chain multiple operations without creating intermediate / temporary dataframes.\nSuper handy when we perform several data wrangling tasks using tidyverse in sequence.\nHelps with readability, especially for complex operations.\nKeyboard shortcut: Ctrl+Shift+M on Windows, Cmd+Shift+M on Mac\n\n\nWithout pipe operatorWith pipe operator\n\n\nNotice that we have to create a “temp” dataframes called wvs_data_clean in this method.\nwvs_data &lt;- drop_na(wvs_data)\nwvs_data_clean &lt;- wvs_data_clean(wvs_data, desc(age))\nwrite_csv(wvs_data_clean, \"data-output/wvs-clean.csv\")\n\n\nNo “temporary” dataframe needed here! :D\nwvs_data |&gt; \n    drop_na() |&gt; \n    distinct(ID, .keep_all = TRUE) |&gt; \n    write_csv(\"data-output/wvs-30plus.csv\")"
  },
  {
    "objectID": "02-tidyverse.html#task-2",
    "href": "02-tidyverse.html#task-2",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #2",
    "text": "Task #2\nCheck for duplicates with distinct()\n\nwvs_data &lt;- wvs_data |&gt; \n  distinct(ID, .keep_all = TRUE)\n\n(Our data has no duplicates, but this is still a good practice to do, especially if we were combining data from multipe sources)"
  },
  {
    "objectID": "02-tidyverse.html#task-3",
    "href": "02-tidyverse.html#task-3",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #3:",
    "text": "Task #3:\nSelect only the relevant columns: demographic columns, life_satisfaction, work_importance, financial_satisfaction, religiousity, political_scale, marital_status, and employment.\nWe can achieve this with select()!\n\nwvs_data &lt;- wvs_data |&gt;\n    select(ID, country, sex, birthyear, age, life_satisfaction, work_importance, financial_satisfaction, religiousity, political_scale, marital_status, employment) \n\nPreview of the filtered data:\n\n\nRows: 6,403\nColumns: 12\n$ ID                     &lt;dbl&gt; 124070003, 124070004, 124070005, 124070006, 124…\n$ country                &lt;chr&gt; \"CAN\", \"CAN\", \"CAN\", \"CAN\", \"CAN\", \"CAN\", \"CAN\"…\n$ sex                    &lt;chr&gt; \"Female\", \"Male\", \"Female\", \"Male\", \"Male\", \"Ma…\n$ birthyear              &lt;dbl&gt; 1944, 1951, 1984, 1975, 1988, 1982, 1981, 1985,…\n$ age                    &lt;dbl&gt; 76, 69, 35, 45, 32, 38, 38, 34, 65, 31, 27, 33,…\n$ life_satisfaction      &lt;dbl&gt; 5, 8, 9, 7, 1, 7, 9, 6, 7, 6, 7, 10, 8, 10, 6, …\n$ work_importance        &lt;dbl&gt; 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 4, 1, 3, 3,…\n$ financial_satisfaction &lt;dbl&gt; 8, 2, 8, 8, 9, 8, 9, 5, 6, 9, 5, 7, 9, 9, 7, 8,…\n$ religiousity           &lt;chr&gt; \"A religious person\", \"A religious person\", \"An…\n$ political_scale        &lt;dbl&gt; 10, 5, 2, 8, 6, 6, 7, 5, 6, 4, 5, 4, 1, 7, 2, 8…\n$ marital_status         &lt;chr&gt; \"Separated\", \"Married\", \"Living together as mar…\n$ employment             &lt;chr&gt; \"Retired/pensioned\", \"Retired/pensioned\", \"Part…"
  },
  {
    "objectID": "02-tidyverse.html#task-4",
    "href": "02-tidyverse.html#task-4",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #4:",
    "text": "Task #4:\nFilter for respondents aged 18 or older. Optionally, we can then arrange the dataset by age (oldest to youngest)\n\nwvs_data &lt;- wvs_data |&gt; \n    filter(age &gt;= 18) |&gt; \n    arrange(desc(age))\n\nChecking the structure:\n\n\n# A tibble: 6 × 12\n         ID country sex    birthyear   age life_satisfaction work_importance\n      &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;             &lt;dbl&gt;           &lt;dbl&gt;\n1 124071434 CAN     Male        1927    93                 7               1\n2 554070524 NZL     Female      1928    91                 5               4\n3 702070265 SGP     Male        1930    90                 8               1\n4 124071321 CAN     Female      1931    89                 6               3\n5 124073566 CAN     Female      1930    89                 6               4\n6 124074356 CAN     Male        1931    89                 8               4\n# ℹ 5 more variables: financial_satisfaction &lt;dbl&gt;, religiousity &lt;chr&gt;,\n#   political_scale &lt;dbl&gt;, marital_status &lt;chr&gt;, employment &lt;chr&gt;"
  },
  {
    "objectID": "02-tidyverse.html#task-5",
    "href": "02-tidyverse.html#task-5",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #5",
    "text": "Task #5\nReverse-code work_importance variables so that higher numbers consistently represent higher levels of the measured construct. In other words, 1 = Not at all important and 4 = Very important.\nWe can achieve this with mutate()!\n\nwvs_data &lt;- wvs_data |&gt;\n    mutate(work_importance_r = 5 - work_importance)\n\nPreview of age groups:\n\n\n# A tibble: 6,403 × 2\n  work_importance_r work_importance\n              &lt;dbl&gt;           &lt;dbl&gt;\n1                 4               1\n2                 1               4\n3                 4               1\n4                 2               3\n5                 1               4\n# ℹ 6,398 more rows"
  },
  {
    "objectID": "02-tidyverse.html#task-6",
    "href": "02-tidyverse.html#task-6",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #6",
    "text": "Task #6\nCreate age groups for each generation: “18-28”, “29-44”, “45-60”, “61+”\n\nwvs_data &lt;- wvs_data |&gt;\n    mutate(age_group = case_when(\n        age &lt;= 28 ~ \"18-28\",\n        age &lt;= 44 ~ \"29-44\",\n        age &lt;= 60 ~ \"45-60\",\n        TRUE ~ \"61+\"\n    ))\n\nPreview of age groups:\n\n\n# A tibble: 6,403 × 2\n    age age_group\n  &lt;dbl&gt; &lt;chr&gt;    \n1    93 61+      \n2    91 61+      \n3    90 61+      \n4    89 61+      \n# ℹ 6,399 more rows"
  },
  {
    "objectID": "02-tidyverse.html#checkpoint-1---saving-our-hard-work-into-a-csv-file",
    "href": "02-tidyverse.html#checkpoint-1---saving-our-hard-work-into-a-csv-file",
    "title": "Data Wrangling with Tidyverse",
    "section": "Checkpoint 1 - saving our hard work into a CSV file",
    "text": "Checkpoint 1 - saving our hard work into a CSV file\nWe have done some cleaning! Let’s save this cleaned data into a separate CSV file called “wvs_cleaned_v1.csv”\n\nwvs_data |&gt; write_csv(\"data-output/wvs_cleaned_v1.csv\")\n\nCheck the data output folder to make sure the CSV is created!"
  },
  {
    "objectID": "02-tidyverse.html#group-exercise-1-5-minutes",
    "href": "02-tidyverse.html#group-exercise-1-5-minutes",
    "title": "Data Wrangling with Tidyverse",
    "section": "Group Exercise 1 (5 minutes)",
    "text": "Group Exercise 1 (5 minutes)\nNow that we have a new file, load this new wvs_cleaned_v1.csv into a new dataframe called wvs_cleaned. Filter to respondents from Singapore who are currently employed full time. Show only the Respondent ID, country, the employment status, and age. Use glimpse() or print() to check the result! (you can chain these functions at the end)\nStep 1: Load the new file\n\n\nShow answer\nlibrary(tidyverse)\nwvs_cleaned &lt;- read_csv(\"data-output/wvs_cleaned_v1.csv\")"
  },
  {
    "objectID": "02-tidyverse.html#scenario-data-wrangling-activities-with-wvs-data-continued",
    "href": "02-tidyverse.html#scenario-data-wrangling-activities-with-wvs-data-continued",
    "title": "Data Wrangling with Tidyverse",
    "section": "Scenario: Data wrangling activities with WVS data (continued)",
    "text": "Scenario: Data wrangling activities with WVS data (continued)\nOnce we are done with the wrangling part, we can proceed with simple descriptive analysis!\n\n\nBefore we proceed further, convert the appropriate categorical variables (country, religiousity, sex, marital_status, employment) to Factor\nGenerate summary statistics of life_satisfaction grouped by country\nCreate a new column called satisfaction_group that indicate whether each respondent has higher or lower than average life_satisfaction\nReshape the data to show average satisfaction scores by country and age group"
  },
  {
    "objectID": "02-tidyverse.html#task-7",
    "href": "02-tidyverse.html#task-7",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #7",
    "text": "Task #7\nLet’s use the wvs_cleaned dataframe for this task.\nConvert the appropriate categorical variables (country, religiousity, sex, marital_status, employment) to Factor.\nWe can do this with mutate() and as_factor() from forcats, another sub-package within tidyverse.\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(\n        country = as_factor(country),\n        religiousity = as_factor(religiousity),\n        sex = as_factor(sex),\n        marital_status = as_factor(marital_status),\n        employment = as_factor(employment)\n    )\n\n# check conversion result\nstr(wvs_cleaned)\n\n\nRstudio may auto-suggest as.factor() from base R. You can use this as well, but as_factor() is preferred since we are using tidyverse approach."
  },
  {
    "objectID": "02-tidyverse.html#task-7-output",
    "href": "02-tidyverse.html#task-7-output",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #7",
    "text": "Task #7\n\ntibble [6,403 × 14] (S3: tbl_df/tbl/data.frame)\n $ ID                    : num [1:6403] 1.24e+08 5.54e+08 7.02e+08 1.24e+08 1.24e+08 ...\n $ country               : Factor w/ 3 levels \"CAN\",\"NZL\",\"SGP\": 1 2 3 1 1 1 2 1 1 2 ...\n $ sex                   : Factor w/ 2 levels \"Male\",\"Female\": 1 2 1 2 2 1 2 1 2 1 ...\n $ birthyear             : num [1:6403] 1927 1928 1930 1931 1930 ...\n $ age                   : num [1:6403] 93 91 90 89 89 89 89 88 88 88 ...\n $ life_satisfaction     : num [1:6403] 7 5 8 6 6 8 9 8 8 10 ...\n $ work_importance       : num [1:6403] 1 4 1 3 4 4 2 1 4 2 ...\n $ financial_satisfaction: num [1:6403] 7 5 9 9 8 8 10 10 5 10 ...\n $ religiousity          : Factor w/ 4 levels \"Not a religious person\",..: 1 2 2 1 1 2 2 2 2 2 ...\n $ political_scale       : num [1:6403] 5 3 3 2 5 5 8 10 5 5 ...\n $ marital_status        : Factor w/ 6 levels \"Widowed\",\"Single\",..: 1 1 1 1 2 3 1 1 1 1 ...\n $ employment            : Factor w/ 8 levels \"Part time\",\"Retired/pensioned\",..: 1 2 2 2 2 2 2 2 2 2 ...\n $ work_importance_r     : num [1:6403] 4 1 4 2 1 1 3 4 1 3 ...\n $ age_group             : chr [1:6403] \"61+\" \"61+\" \"61+\" \"61+\" ..."
  },
  {
    "objectID": "02-tidyverse.html#task-7---the-shortcut",
    "href": "02-tidyverse.html#task-7---the-shortcut",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #7 - the shortcut",
    "text": "Task #7 - the shortcut\nIf we have a lot of columns to convert, that might be troublesome to type! This is where across() can come in handy.\nLet’s first define a character vector that contains the names of columns we plan to convert.\n\ncolumns_to_convert &lt;- c(\"country\", \"religiousity\", \"sex\", \"marital_status\", \"employment\")\n\nWe will use this vector with mutate() and across(). We tell tidyverse to convert all of the columns with the help of all_of()\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(across(all_of(columns_to_convert), as_factor))\n\n# check conversion result\nstr(wvs_cleaned)\n\n\nacross() is used for applying the same function to multiple columns in a single mutate() or summarise() operation."
  },
  {
    "objectID": "02-tidyverse.html#task-7---the-shortcut-output",
    "href": "02-tidyverse.html#task-7---the-shortcut-output",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #7 - the shortcut",
    "text": "Task #7 - the shortcut\n\ntibble [6,403 × 14] (S3: tbl_df/tbl/data.frame)\n $ ID                    : num [1:6403] 1.24e+08 5.54e+08 7.02e+08 1.24e+08 1.24e+08 ...\n $ country               : Factor w/ 3 levels \"CAN\",\"NZL\",\"SGP\": 1 2 3 1 1 1 2 1 1 2 ...\n $ sex                   : Factor w/ 2 levels \"Male\",\"Female\": 1 2 1 2 2 1 2 1 2 1 ...\n $ birthyear             : num [1:6403] 1927 1928 1930 1931 1930 ...\n $ age                   : num [1:6403] 93 91 90 89 89 89 89 88 88 88 ...\n $ life_satisfaction     : num [1:6403] 7 5 8 6 6 8 9 8 8 10 ...\n $ work_importance       : num [1:6403] 1 4 1 3 4 4 2 1 4 2 ...\n $ financial_satisfaction: num [1:6403] 7 5 9 9 8 8 10 10 5 10 ...\n $ religiousity          : Factor w/ 4 levels \"Not a religious person\",..: 1 2 2 1 1 2 2 2 2 2 ...\n $ political_scale       : num [1:6403] 5 3 3 2 5 5 8 10 5 5 ...\n $ marital_status        : Factor w/ 6 levels \"Widowed\",\"Single\",..: 1 1 1 1 2 3 1 1 1 1 ...\n $ employment            : Factor w/ 8 levels \"Part time\",\"Retired/pensioned\",..: 1 2 2 2 2 2 2 2 2 2 ...\n $ work_importance_r     : num [1:6403] 4 1 4 2 1 1 3 4 1 3 ...\n $ age_group             : chr [1:6403] \"61+\" \"61+\" \"61+\" \"61+\" ..."
  },
  {
    "objectID": "02-tidyverse.html#task-8",
    "href": "02-tidyverse.html#task-8",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #8",
    "text": "Task #8\nGenerate summary statistics such as count (n), mean, median, and standard deviation of life_satisfaction grouped by country.\nWe can achieve this with group_by() and summarise()\n\nwvs_data |&gt;\n    group_by(country, age_group) |&gt;\n    summarise(\n        n = n(),\n        mean_satisfaction = mean(life_satisfaction),\n        median_satisfaction = median(life_satisfaction),\n        sd_satisfaction = sd(life_satisfaction)\n    ) |&gt;\n    arrange(country, desc(mean_satisfaction))\n\n\nWhat if we want to save this into a CSV? What if we also want to group by country AND age_group?"
  },
  {
    "objectID": "02-tidyverse.html#task-8-output",
    "href": "02-tidyverse.html#task-8-output",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #8",
    "text": "Task #8\n\n# A tibble: 12 × 6\n# Groups:   country [3]\n   country age_group     n mean_satisfaction median_satisfaction sd_satisfaction\n   &lt;chr&gt;   &lt;chr&gt;     &lt;int&gt;             &lt;dbl&gt;               &lt;dbl&gt;           &lt;dbl&gt;\n 1 CAN     61+        1013              7.55                   8            1.59\n 2 CAN     29-44      1232              6.99                   7            1.80\n 3 CAN     45-60      1061              6.92                   7            1.87\n 4 CAN     18-28       712              6.60                   7            1.86\n 5 NZL     61+         292              7.96                   8            1.66\n 6 NZL     45-60       222              7.38                   8            1.90\n 7 NZL     29-44       119              7.32                   8            1.69\n 8 NZL     18-28        27              6.70                   7            1.98\n 9 SGP     61+         418              7.17                   7            1.84\n10 SGP     29-44       511              7.09                   7            1.70\n11 SGP     45-60       550              7.05                   7            1.83\n12 SGP     18-28       246              6.85                   7            1.68"
  },
  {
    "objectID": "02-tidyverse.html#task-9",
    "href": "02-tidyverse.html#task-9",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #9",
    "text": "Task #9\nCreate a new column called satisfaction_group that indicate whether each respondent has higher or lower than average life_satisfaction\n\nmean_satisfaction &lt;- mean(wvs_data$life_satisfaction, na.rm = TRUE)\n\nwvs_data |&gt;\n    mutate(satisfaction_group = if_else(\n        life_satisfaction &gt; mean_satisfaction, # the condition to evaluate\n        \"higher\", # if condition is fulfilled, do this\n        \"lower\" # otherwise, do this\n    ))"
  },
  {
    "objectID": "02-tidyverse.html#task-9-output",
    "href": "02-tidyverse.html#task-9-output",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #9",
    "text": "Task #9\n\n# A tibble: 6,403 × 15\n          ID country sex    birthyear   age life_satisfaction work_importance\n       &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;             &lt;dbl&gt;           &lt;dbl&gt;\n 1 124071434 CAN     Male        1927    93                 7               1\n 2 554070524 NZL     Female      1928    91                 5               4\n 3 702070265 SGP     Male        1930    90                 8               1\n 4 124071321 CAN     Female      1931    89                 6               3\n 5 124073566 CAN     Female      1930    89                 6               4\n 6 124074356 CAN     Male        1931    89                 8               4\n 7 554070216 NZL     Female      1930    89                 9               2\n 8 124070295 CAN     Male        1932    88                 8               1\n 9 124072193 CAN     Female      1958    88                 8               4\n10 554070038 NZL     Male        1931    88                10               2\n# ℹ 6,393 more rows\n# ℹ 8 more variables: financial_satisfaction &lt;dbl&gt;, religiousity &lt;chr&gt;,\n#   political_scale &lt;dbl&gt;, marital_status &lt;chr&gt;, employment &lt;chr&gt;,\n#   work_importance_r &lt;dbl&gt;, age_group &lt;chr&gt;, satisfaction_group &lt;chr&gt;"
  },
  {
    "objectID": "02-tidyverse.html#task-10",
    "href": "02-tidyverse.html#task-10",
    "title": "Data Wrangling with Tidyverse",
    "section": "Task #10",
    "text": "Task #10\nShow the average satisfaction scores by country and age group in wide data format\n\nwvs_data |&gt;\n    group_by(country, age_group) |&gt;\n    summarise(\n        avg_satisfaction = mean(life_satisfaction, na.rm = TRUE),\n    ) |&gt;\n    pivot_wider(\n        names_from = age_group,\n        values_from = avg_satisfaction\n    ) \n\n# A tibble: 3 × 5\n# Groups:   country [3]\n  country `18-28` `29-44` `45-60` `61+`\n  &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 CAN        6.60    6.99    6.92  7.55\n2 NZL        6.70    7.32    7.38  7.96\n3 SGP        6.85    7.09    7.05  7.17"
  },
  {
    "objectID": "02-tidyverse.html#long-vs-wide-data",
    "href": "02-tidyverse.html#long-vs-wide-data",
    "title": "Data Wrangling with Tidyverse",
    "section": "Long vs Wide Data",
    "text": "Long vs Wide Data\n\n\nLong data:\n\nEach row is a unique observation.\nThere is a separate column indicating the variable or type of measurements\nThis format is more “understandable” by R, more suitable for visualizations.\n\n\nWide data:\n\nEach row is a value in variables.\nEach column is a value in variables –&gt; the more values you have, the “wider” is the data\nThe cells represent theThis format is more intuitive for humans!"
  },
  {
    "objectID": "02-tidyverse.html#long-vs-wide-data-examples",
    "href": "02-tidyverse.html#long-vs-wide-data-examples",
    "title": "Data Wrangling with Tidyverse",
    "section": "Long vs Wide Data: Examples",
    "text": "Long vs Wide Data: Examples\n\n\nLong data:\n\n\n\nObservations (Long)\n\n\ncountry\nage_group\ncount\n\n\n\n\nCAN\n18-28\n712\n\n\nCAN\n29-44\n1232\n\n\nCAN\n45-60\n1061\n\n\nCAN\n61+\n1013\n\n\nNZL\n18-28\n27\n\n\nNZL\n29-44\n119\n\n\nNZL\n45-60\n222\n\n\nNZL\n61+\n292\n\n\nSGP\n18-28\n246\n\n\nSGP\n29-44\n511\n\n\nSGP\n45-60\n550\n\n\nSGP\n61+\n418\n\n\n\n\n\n\n\n\nWide data:\n\n\n\nObservations (Wide)\n\n\ncountry\n18-28\n29-44\n45-60\n61+\n\n\n\n\nCAN\n712\n1232\n1061\n1013\n\n\nNZL\n27\n119\n222\n292\n\n\nSGP\n246\n511\n550\n418"
  },
  {
    "objectID": "02-tidyverse.html#group-exercise-2-solo-attempts-ok",
    "href": "02-tidyverse.html#group-exercise-2-solo-attempts-ok",
    "title": "Data Wrangling with Tidyverse",
    "section": "Group exercise 2 (solo attempts ok)",
    "text": "Group exercise 2 (solo attempts ok)\nTime: 5 minutes\nGenerate a summary stats of age grouped by country and sex. The summary stats should include mean, median, max, min, std, and n (number of observations). It should look something like this:\n\n\nShow answer\nwvs_data |&gt; \n    group_by(country, sex) |&gt; \n    summarise(observation = n(), \n              mean_age = mean(age, na.rm = TRUE),\n              median_age = median(age, na.rm = TRUE), \n              oldest = max(age, na.rm = TRUE),\n              youngest = min(age, na.rm = TRUE),\n              std_dev = sd(age, na.rm = TRUE))"
  },
  {
    "objectID": "02-tidyverse.html#group-exercise-2-solo-attempts-ok-output",
    "href": "02-tidyverse.html#group-exercise-2-solo-attempts-ok-output",
    "title": "Data Wrangling with Tidyverse",
    "section": "Group exercise 2 (solo attempts ok)",
    "text": "Group exercise 2 (solo attempts ok)\n\n# A tibble: 6 × 8\n# Groups:   country [3]\n  country sex    observation mean_age median_age oldest youngest std_dev\n  &lt;chr&gt;   &lt;chr&gt;        &lt;int&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 CAN     Female        1959     44.2         42     89       18    17.0\n2 CAN     Male          2059     48.8         49     93       18    16.4\n3 NZL     Female         354     56.6         58     91       19    15.5\n4 NZL     Male           306     57.3         59     88       20    15.4\n5 SGP     Female         919     47.7         47     87       21    15.3\n6 SGP     Male           806     47.9         48     90       21    16.2"
  },
  {
    "objectID": "02-tidyverse.html#bonus-deleting-columns-from-dataframe",
    "href": "02-tidyverse.html#bonus-deleting-columns-from-dataframe",
    "title": "Data Wrangling with Tidyverse",
    "section": "Bonus: Deleting columns from dataframe",
    "text": "Bonus: Deleting columns from dataframe\nLet’s say I have this column called wrong_column that I want to remove:\n\nwvs_data &lt;- wvs_data |&gt; mutate(wrong_column = \"random values\")\nwvs_data |&gt; select(country, wrong_column) |&gt; print(n = 3)\n\n# A tibble: 6,403 × 2\n  country wrong_column \n  &lt;chr&gt;   &lt;chr&gt;        \n1 CAN     random values\n2 NZL     random values\n3 SGP     random values\n# ℹ 6,400 more rows"
  },
  {
    "objectID": "02-tidyverse.html#remove-the-wrong-column-with-subset--",
    "href": "02-tidyverse.html#remove-the-wrong-column-with-subset--",
    "title": "Data Wrangling with Tidyverse",
    "section": "Remove the wrong column with subset -:",
    "text": "Remove the wrong column with subset -:\n\nwvs_data &lt;- wvs_data |&gt; \n    select(-wrong_column)\n\n\n\n# A tibble: 6,403 × 1\n  country\n  &lt;chr&gt;  \n1 CAN    \n2 NZL    \n3 SGP    \n# ℹ 6,400 more rows"
  },
  {
    "objectID": "04-stats.html#todays-outline",
    "href": "04-stats.html#todays-outline",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Today’s Outline",
    "text": "Today’s Outline\n\nRefreshers on data distribution and research variables\nStatistical tests: chi-square, t-test, correlations.\nANOVA"
  },
  {
    "objectID": "04-stats.html#refresher-data-distribution",
    "href": "04-stats.html#refresher-data-distribution",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Refresher: Data Distribution",
    "text": "Refresher: Data Distribution\nThe choice of appropriate statistical tests and methods often depends on the distribution of the data. Understanding the distribution helps in selecting the right and validity of the tests."
  },
  {
    "objectID": "04-stats.html#refresher-research-variables",
    "href": "04-stats.html#refresher-research-variables",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Refresher: Research Variables",
    "text": "Refresher: Research Variables\n\n\nDependent Variable (DV)\nThe variables that will be affected as a result of manipulation/changes in the IVs\n\nOther names for it: Outcome, Response, Output, etc.\nOften denoted as \\(y\\)\n\n\nIndependent Variable (IV)\nThe variables that researchers will manipulate.\n\nOther names for it: Predictor, Covariate, Treatment, Regressor, Input, etc.\nOften denoted as \\(x\\)"
  },
  {
    "objectID": "04-stats.html#open-your-project---the-possibly-easier-way",
    "href": "04-stats.html#open-your-project---the-possibly-easier-way",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Open your project - the (possibly) easier way",
    "text": "Open your project - the (possibly) easier way\n\nGo to the folder where you put your project for this workshop\nFind a file with .Rproj extension - this is the R project file that holds all the information about your project.\n\n\n\nDouble click on the file. Rstudio should launch with your project loaded! This should be easier to ensure that you are loading the correct project when opening Rstudio."
  },
  {
    "objectID": "04-stats.html#load-our-data-for-today",
    "href": "04-stats.html#load-our-data-for-today",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Load our data for today!",
    "text": "Load our data for today!\nLet’s create a new R script called session-3.R, and then copy the code below to load our data for today. This code uses read_csv from readr package (part of tidyverse) to load our cleaned CSV (from the first checkpoint)\n\n# import tidyverse library\nlibrary(tidyverse)\n\n# read the CSV with WVS data\nwvs_cleaned &lt;- read_csv(\"data-output/wvs_cleaned_v1.csv\")\n\n# Convert categorical variables to factors\ncolumns_to_convert &lt;- c(\"country\", \"religiousity\", \"sex\", \"marital_status\", \"employment\")\n\nwvs_cleaned &lt;- wvs_cleaned |&gt; \n    mutate(across(all_of(columns_to_convert), as_factor))\n\n# peek at the data, pay attention to the data types!\nglimpse(wvs_cleaned)"
  },
  {
    "objectID": "04-stats.html#chi-square-test-of-independence",
    "href": "04-stats.html#chi-square-test-of-independence",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Chi-square test of independence",
    "text": "Chi-square test of independence\nThe \\(X^2\\) test of independence evaluates whether there is a statistically significant relationship between two categorical variables.\nThis is done by analyzing the frequency table (i.e., contingency table) formed by two categorical variables.\nExample: Is there a relationship between religiousity and country in our WVS data?\nTypically, we can start with the contigency table first, and then the visualization\n\ntable(wvs_cleaned$religiousity, wvs_cleaned$country)\n\n                        \n                          CAN  NZL  SGP\n  Not a religious person 1794  310  563\n  A religious person     1406  209  990\n  An atheist              818   97  172\n  Don't know                0   44    0"
  },
  {
    "objectID": "04-stats.html#chi-square-test-of-independence---visualizing-data",
    "href": "04-stats.html#chi-square-test-of-independence---visualizing-data",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Chi-square test of independence - visualizing data",
    "text": "Chi-square test of independence - visualizing data\nWe can use barchart to visualize this (remember from last week!)\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = country, fill = religiousity)) +\n    geom_bar(position = \"fill\") +\n    labs(title = \"Proportion of religiousity for each country\") +\n    theme_minimal()"
  },
  {
    "objectID": "04-stats.html#chi-square-sample-problem-and-results",
    "href": "04-stats.html#chi-square-sample-problem-and-results",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Chi-Square: Sample problem and results",
    "text": "Chi-Square: Sample problem and results\nIs there a relationship between religiosity and country?\n\nchisq.test(table(wvs_cleaned$religiousity, wvs_cleaned$country))\n\n\n    Pearson's Chi-squared test\n\ndata:  table(wvs_cleaned$religiousity, wvs_cleaned$country)\nX-squared = 672.16, df = 6, p-value &lt; 2.2e-16\n\n\n\n\nX-squared = the coefficient\ndf = degree of freedom\np-value = the probability of getting more extreme results than what was observed. Generally, if this value is less than the pre-determined significance level (also called alpha), the result would be considered “statistically significant”\n\n\nWhat if there is a hypothesis? How would you write this in the report?"
  },
  {
    "objectID": "04-stats.html#correlation",
    "href": "04-stats.html#correlation",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Correlation",
    "text": "Correlation\nA correlation test evaluates the strength and direction of a linear relationship between two variables. The coefficient is expressed in value between -1 to 1, with 0 being no correlation at all.\n\n\nPearson’s \\(r\\) (r)\n\nMeasure the association between two continuous numerical variables\nSensitive to outliers\nAssumes normality and/or linearity\n(most likely the one that you learned in class)\n\n\nKendall’s \\(\\tau\\) (tau)\n\nMeasure the association between two variables (ordinal-ordinal or ordinal-continuous)\nless sensitive/more robust to outliers\nnon-parametric, does not assume normality and/or linearity\n\n\nSpearman’s \\(\\rho\\) (rho)\n\nMeasure the association between two variables (ordinal-ordinal or ordinal-continuous)\nless sensitive/more robust to outliers\nnon-parametric, does not assume normality and/or linearity\n\n\nFor more info, you can refer to this reading: Measures of Association - How to Choose? (Harry Khamis, PhD)"
  },
  {
    "objectID": "04-stats.html#correlation-sample-problem-and-result",
    "href": "04-stats.html#correlation-sample-problem-and-result",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Correlation: Sample problem and result",
    "text": "Correlation: Sample problem and result\nRQ: Is there a significant correlation between life satisfaction and financial satisfaction?\nAs both variables are numerical and continuous, we can use pearson correlation.\nLet’s start with visualizing the data, which can be used to support the explanation.\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = financial_satisfaction, y = life_satisfaction)) +\n    geom_jitter(color=\"maroon\", alpha=0.5) +\n    geom_smooth(method = \"lm\", se = TRUE) # se shows the confidence interval"
  },
  {
    "objectID": "04-stats.html#correlation-sample-problem-and-result-output",
    "href": "04-stats.html#correlation-sample-problem-and-result-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Correlation: Sample problem and result",
    "text": "Correlation: Sample problem and result"
  },
  {
    "objectID": "04-stats.html#conduct-the-correlation-test",
    "href": "04-stats.html#conduct-the-correlation-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the correlation test",
    "text": "Conduct the correlation test\n\n\ncor.test(wvs_cleaned$life_satisfaction, \n         wvs_cleaned$financial_satisfaction, \n         method = \"pearson\")\n\n\n\n    Pearson's product-moment correlation\n\ndata:  wvs_cleaned$life_satisfaction and wvs_cleaned$financial_satisfaction\nt = 66.999, df = 6401, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6274032 0.6562061\nsample estimates:\n      cor \n0.6420311 \n\n\n\n\ncor is the correlation coefficient - this is the number that you want to report.\nt is the t-test statistic\ndf is the degrees of freedom\np-value is the significance level of the t-test\nconf.int is the confidence interval of the coefficient at 95%\nsample estimates is the correlation coefficient"
  },
  {
    "objectID": "04-stats.html#learning-check-1",
    "href": "04-stats.html#learning-check-1",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Learning Check #1",
    "text": "Learning Check #1\nIs there a relationship between religiousity and age group? Calculate the chi-square test!\noptional: Visualize the proportion of age group for each religiousity category.\n\n\nShow answer\nchisq.test(table(wvs_cleaned$religiousity, wvs_cleaned$age_group))\n\n\n\n    Pearson's Chi-squared test\n\ndata:  table(wvs_cleaned$religiousity, wvs_cleaned$age_group)\nX-squared = 97.449, df = 9, p-value &lt; 2.2e-16\n\n\nVisualization:\n\n\nShow answer\nwvs_cleaned |&gt; \n    ggplot(aes(x = religiousity, fill = age_group)) +\n    geom_bar(position = \"fill\") +\n    labs(title = \"Proportion of age groups for each religiousity\") +\n    theme_minimal()"
  },
  {
    "objectID": "04-stats.html#learning-check-1-output",
    "href": "04-stats.html#learning-check-1-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Learning Check #1",
    "text": "Learning Check #1"
  },
  {
    "objectID": "04-stats.html#t-tests",
    "href": "04-stats.html#t-tests",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "T-Tests",
    "text": "T-Tests\nA t-test is a statistical test used to compare the means of two groups/samples of continuous data type and determine if the differences are statistically significant.\n\nThe Student’s t-test is widely used when the sample size is reasonably small (less than approximately 30) or when the population standard deviation is unknown."
  },
  {
    "objectID": "04-stats.html#types-of-t-test",
    "href": "04-stats.html#types-of-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "3 types of t-test",
    "text": "3 types of t-test\n\n\nOne-sample T-test\nTest if a specific sample mean (X̄) is statistically different from a known or hypothesized population mean (μ or mu)\n\nTwo-samples / Independent Samples T-test\nUsed to compare the means of two independent groups (such as between-subjects research) to determine if they are significantly different.\nExamples: Men vs Women group, Placebo vs Actual drugs.\n\nPaired Samples T-Test\nUsed to compare the means of two related groups, such as repeated measurements on the same subjects (within-subjects research).\nExamples: Before workshop vs After workshop."
  },
  {
    "objectID": "04-stats.html#t-test-one-sample-t-test",
    "href": "04-stats.html#t-test-one-sample-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "T-test: One-sample T-Test",
    "text": "T-test: One-sample T-Test\nRQ: Is the average life satisfaction in our sample significantly different from the global average of 6.5?\nLet’s start with visualizing the data\n\nwvs_cleaned |&gt; \n    ggplot(aes(y = life_satisfaction)) +\n    geom_boxplot(width = 0.2) + \n    geom_hline(yintercept = 6.5, color=\"red\")"
  },
  {
    "objectID": "04-stats.html#conduct-the-one-sample-t-test",
    "href": "04-stats.html#conduct-the-one-sample-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the One-sample T-Test",
    "text": "Conduct the One-sample T-Test\n\nglobal_mean_satisfaction = 6.5  \n\nt.test(wvs_cleaned$life_satisfaction,          \n       alternative = \"two.sided\", \n       mu = global_mean_satisfaction)\n\n\n\n\n    One Sample t-test\n\ndata:  wvs_cleaned$life_satisfaction\nt = 26.776, df = 6402, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 6.5\n95 percent confidence interval:\n 7.060083 7.148570\nsample estimates:\nmean of x \n 7.104326 \n\n\nWhat if there is a hypothesis? How would you write this in the report?"
  },
  {
    "objectID": "04-stats.html#t-test-independent-samples-t-test",
    "href": "04-stats.html#t-test-independent-samples-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "T-Test: Independent Samples T-Test",
    "text": "T-Test: Independent Samples T-Test\nRQ: Is there a significant difference in life satisfaction between males and females?\nLet’s first take only the necessary columns and get some summary statistics, particularly on the number of samples for each group, as well as the mean, standard deviation, and variance.\n\nwvs_cleaned |&gt; \n    group_by(sex) |&gt; \n    summarise(total = n(), \n              mean = mean(life_satisfaction),\n              variance = var(life_satisfaction),\n              stdeviation = sd(life_satisfaction))\n\n\n\n# A tibble: 2 × 5\n  sex    total  mean variance stdeviation\n  &lt;fct&gt;  &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;\n1 Male    3171  7.09     3.35        1.83\n2 Female  3232  7.11     3.18        1.78"
  },
  {
    "objectID": "04-stats.html#visualize-the-differences-between-two-samples",
    "href": "04-stats.html#visualize-the-differences-between-two-samples",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Visualize the differences between two samples",
    "text": "Visualize the differences between two samples\nThe variance will be easier to see when we visualize it as well. As we can see, the variance for both groups are about the same. This suggests that the variance might be homoegeneous.\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = sex, y = life_satisfaction)) +\n    geom_boxplot() +\n    theme_minimal()"
  },
  {
    "objectID": "04-stats.html#conduct-the-independent-samples-t-test",
    "href": "04-stats.html#conduct-the-independent-samples-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the independent samples T-test",
    "text": "Conduct the independent samples T-test\nRemember, the hypotheses are:\n\n\n\\(H_0\\): There is no significant difference in the mean life satisfaction between male and female participant.\n\n\\(H_1\\): There is a significant difference in the mean life satisfaction between male and female participant.\n\n\n\nt.test(life_satisfaction ~ sex, \n       data = wvs_cleaned, \n       var.equal = FALSE)\n\n\n\n    Welch Two Sample t-test\n\ndata:  life_satisfaction by sex\nt = -0.41256, df = 6387.7, p-value = 0.6799\nalternative hypothesis: true difference in means between group Male and group Female is not equal to 0\n95 percent confidence interval:\n -0.10714841  0.06988992\nsample estimates:\n  mean in group Male mean in group Female \n            7.094923             7.113552 \n\n\n\n\n\n\n\n\nNotice that we are using Welch’s t-test instead of Students’ t-test\n\n\nWelch’s t-test (also known as unequal variances t-test, is a more robust alternative to Student’s t-test. It is often used when two samples have unequal variances and possibly unequal sample sizes."
  },
  {
    "objectID": "04-stats.html#t-test-paired-sample-t-test",
    "href": "04-stats.html#t-test-paired-sample-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "T-Test: Paired Sample T-Test",
    "text": "T-Test: Paired Sample T-Test\nUnfortunately, our data is not suitable for paired T-Test. For demo purposes, we are going to use a built-in sample datasets called sleep from the base R dataset.\nThe dataset is already loaded, so you can use it right away!\n\ntype View(sleep) in your R console (bottom left), and then press enter. RStudio will open up the preview of the dataset.\ntype ?sleep in your R console to view the help page (a.k.a vignette) about this dataset.\ntype data() in your console to see what are the available datasets that you can use for practice!\n\n\nsleep &lt;- as_tibble(sleep)\nprint(sleep)"
  },
  {
    "objectID": "04-stats.html#t-test-paired-sample-t-test-output",
    "href": "04-stats.html#t-test-paired-sample-t-test-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "T-Test: Paired Sample T-Test",
    "text": "T-Test: Paired Sample T-Test\n\n# A tibble: 20 × 3\n   extra group ID   \n   &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;\n 1   0.7 1     1    \n 2  -1.6 1     2    \n 3  -0.2 1     3    \n 4  -1.2 1     4    \n 5  -0.1 1     5    \n 6   3.4 1     6    \n 7   3.7 1     7    \n 8   0.8 1     8    \n 9   0   1     9    \n10   2   1     10   \n11   1.9 2     1    \n12   0.8 2     2    \n13   1.1 2     3    \n14   0.1 2     4    \n15  -0.1 2     5    \n16   4.4 2     6    \n17   5.5 2     7    \n18   1.6 2     8    \n19   4.6 2     9    \n20   3.4 2     10"
  },
  {
    "objectID": "04-stats.html#visualise-the-before-group-1-and-after-group-2",
    "href": "04-stats.html#visualise-the-before-group-1-and-after-group-2",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Visualise the before (group 1) and after (group 2)",
    "text": "Visualise the before (group 1) and after (group 2)\n\nsleep |&gt; \n    group_by(group) |&gt; \n    summarise(n = n(), mean = mean(extra), sd = sd(extra), variance = var(extra))\n\n# A tibble: 2 × 5\n  group     n  mean    sd variance\n  &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 1        10  0.75  1.79     3.20\n2 2        10  2.33  2.00     4.01\n\n\nVisualization:\n\nsleep |&gt; \n    ggplot(aes(x = group, y = extra)) +\n    geom_boxplot() +\n    theme_minimal()"
  },
  {
    "objectID": "04-stats.html#visualise-the-before-group-1-and-after-group-2-output",
    "href": "04-stats.html#visualise-the-before-group-1-and-after-group-2-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Visualise the before (group 1) and after (group 2)",
    "text": "Visualise the before (group 1) and after (group 2)"
  },
  {
    "objectID": "04-stats.html#transform-the-data-shape",
    "href": "04-stats.html#transform-the-data-shape",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Transform the data shape",
    "text": "Transform the data shape\nThe data is in long format. let’s transform it into wide format so that we can conduct the analysis more easily.\n\nsleep_wide &lt;- sleep |&gt; \n    pivot_wider(names_from = group, values_from = extra, \n                names_prefix = \"group_\")\nprint(sleep_wide)\n\n\n\n# A tibble: 10 × 3\n   ID    group_1 group_2\n   &lt;fct&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 1         0.7     1.9\n 2 2        -1.6     0.8\n 3 3        -0.2     1.1\n 4 4        -1.2     0.1\n 5 5        -0.1    -0.1\n 6 6         3.4     4.4\n 7 7         3.7     5.5\n 8 8         0.8     1.6\n 9 9         0       4.6\n10 10        2       3.4"
  },
  {
    "objectID": "04-stats.html#conduct-the-paired-sample-t-test",
    "href": "04-stats.html#conduct-the-paired-sample-t-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the paired-sample T-test",
    "text": "Conduct the paired-sample T-test\nRemember, the hypotheses are:\n\n\n\\(H_0\\): There is no significant difference in the increase in hours of sleep.\n\n\\(H_1\\): There is a significant difference in the increase in hours of sleep.\n\n\nt.test(Pair(sleep_wide$group_1, sleep_wide$group_2) ~ 1,\n       data = sleep)\n\n\n\n\n    Paired t-test\n\ndata:  Pair(sleep_wide$group_1, sleep_wide$group_2)\nt = -4.0621, df = 9, p-value = 0.002833\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -2.4598858 -0.7001142\nsample estimates:\nmean difference \n          -1.58"
  },
  {
    "objectID": "04-stats.html#learning-check-2",
    "href": "04-stats.html#learning-check-2",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Learning Check #2",
    "text": "Learning Check #2\nUsing the pre-loaded dataset called CO2, conduct the T-test betwen the two different Treatment to compare if there’s any difference in the carbon dioxide uptake between the two treatments. Type ?CO2 in your Console to retrieve the vignette of this data.\n\n\nShow answer\nt.test(uptake ~ Treatment, data = CO2)\n\n\n\n    Welch Two Sample t-test\n\ndata:  uptake by Treatment\nt = 3.0485, df = 80.945, p-value = 0.003107\nalternative hypothesis: true difference in means between group nonchilled and group chilled is not equal to 0\n95 percent confidence interval:\n  2.382366 11.336682\nsample estimates:\nmean in group nonchilled    mean in group chilled \n                30.64286                 23.78333 \n\n\nVisualize the data:\n\n\nShow answer\nCO2 |&gt; ggplot(aes(x = Treatment, y = uptake)) +\n    geom_boxplot(width = 0.2) +\n    theme_minimal()"
  },
  {
    "objectID": "04-stats.html#learning-check-2-output",
    "href": "04-stats.html#learning-check-2-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Learning Check #2",
    "text": "Learning Check #2"
  },
  {
    "objectID": "04-stats.html#anova-analysis-of-variance",
    "href": "04-stats.html#anova-analysis-of-variance",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "ANOVA (Analysis of Variance)",
    "text": "ANOVA (Analysis of Variance)\nANOVA (Analysis of Variance) is a statistical test used to compare the means of three or more groups or samples and determine if the differences are statistically significant.\nThere are two ‘mainstream’ ANOVA that will be covered in this workshop:\n\n\nOne-Way ANOVA: comparing means across two or more independent groups (levels) of a single independent variable.\nTwo-Way ANOVA: comparing means across two or more independent groups (levels) of two independent variable.\nOther types of ANOVA that you may encounter: Repeated measures ANOVA, Multivariate ANOVA (MANOVA), ANCOVA, etc."
  },
  {
    "objectID": "04-stats.html#one-way-anova-sample-problem-and-result",
    "href": "04-stats.html#one-way-anova-sample-problem-and-result",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "One-Way ANOVA: Sample problem and result",
    "text": "One-Way ANOVA: Sample problem and result\nRQ: Is there a significant difference in life satisfaction between different country?\nLet’s visualize the data first!\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = country, y = life_satisfaction)) +\n    geom_boxplot() +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "04-stats.html#one-way-anova-sample-problem-and-result-output",
    "href": "04-stats.html#one-way-anova-sample-problem-and-result-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "One-Way ANOVA: Sample problem and result",
    "text": "One-Way ANOVA: Sample problem and result"
  },
  {
    "objectID": "04-stats.html#conduct-the-one-way-anova-test",
    "href": "04-stats.html#conduct-the-one-way-anova-test",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the one-way Anova test",
    "text": "Conduct the one-way Anova test\n\nsatisfaction_country_anova &lt;- aov(life_satisfaction ~ country, data = wvs_cleaned)\nsummary(satisfaction_country_anova)\n\n\n\n              Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ncountry        2    179   89.55   27.68 1.07e-12 ***\nResiduals   6400  20701    3.23                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nF-value: the coefficient value\nPr(&gt;F): the p-value\nSum Sq: Sum of Squares\nMean Sq : Mean Squares\nDf: Degrees of Freedom"
  },
  {
    "objectID": "04-stats.html#post-hoc-test-only-when-result-is-significant",
    "href": "04-stats.html#post-hoc-test-only-when-result-is-significant",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Post-hoc test (only when result is significant)",
    "text": "Post-hoc test (only when result is significant)\nIf your ANOVA test indicates significant result, the next step is to figure out which category pairings are yielding the significant result.\nTukey’s Honest Significant Difference (HSD) can help us figure that out! Other alternative is the pairwise.t.test, but let’s try Tukey’s for now.\n\nTukeyHSD(satisfaction_country_anova)\n\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = life_satisfaction ~ country, data = wvs_cleaned)\n\n$country\n               diff        lwr        upr     p adj\nNZL-CAN  0.55540673  0.3783288  0.7324847 0.0000000\nSGP-CAN  0.02046602 -0.1008956  0.1418276 0.9174716\nSGP-NZL -0.53494071 -0.7279104 -0.3419711 0.0000000"
  },
  {
    "objectID": "04-stats.html#anova-assumptions",
    "href": "04-stats.html#anova-assumptions",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "ANOVA Assumptions",
    "text": "ANOVA Assumptions\n\nThe Dependent variable should be a continuous variable\nThe Independent variable should be a categorical variable\nThe observations for Independent variable should be independent of each other\nThe Dependent Variable distribution should be approximately normal – even more crucial if sample size is small.\n\nYou can verify this by visualizing your data in histogram, or use Shapiro-Wilk Test, among other things\n\nThe variance for each combination of groups should be approximately equal – also referred to as “homogeneity of variances” or homoskedasticity.\n\nOne way to verify this is using Levene’s Test\n\nNo significant outliers"
  },
  {
    "objectID": "04-stats.html#verifying-the-assumption-test-for-homogeneity-of-variance",
    "href": "04-stats.html#verifying-the-assumption-test-for-homogeneity-of-variance",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Verifying the assumption: Test for Homogeneity of variance",
    "text": "Verifying the assumption: Test for Homogeneity of variance\nLevene’s Test to test for homogeneity of variance i.e. homoskedasticity\n\n\nlibrary(car)\nleveneTest(life_satisfaction ~ country, \n           data = wvs_cleaned)\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n        Df F value Pr(&gt;F)\ngroup    2  1.9408 0.1437\n      6400               \n\n\nThe results indicate that the p-value is more than the significance level of 0.05, suggesting that there is NO significant difference in variance across the groups. Consequently, the assumption of homogeneity of variances is NOT violated."
  },
  {
    "objectID": "04-stats.html#plotting-residuals-residual-vs-fitted",
    "href": "04-stats.html#plotting-residuals-residual-vs-fitted",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Plotting Residuals: Residual vs Fitted",
    "text": "Plotting Residuals: Residual vs Fitted\nWhen we plot the residuals1, we can see some outliers as well:\n\nplot(satisfaction_country_anova, 1)\n\n\n\n\n\n\n\n\n\n\nResidual = difference between an observed value and the mean of all values for that group."
  },
  {
    "objectID": "04-stats.html#verifying-the-assumptions-test-for-normality",
    "href": "04-stats.html#verifying-the-assumptions-test-for-normality",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Verifying the assumptions: Test for Normality",
    "text": "Verifying the assumptions: Test for Normality\nShapiro-Wilk Test to test for normality.\n\n\nlibrary(car)\nset.seed(123) # set seed for reproducibility, make sure it samples the same way everytime.\nshapiro.test(sample(residuals(satisfaction_country_anova), 5000))\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  sample(residuals(satisfaction_country_anova), 5000)\nW = 0.92998, p-value &lt; 2.2e-16\n\n\nThe p-value from the Shapiro-Wilk test is less than the significance level of 0.05, indicating that the data significantly deviates from normality. Therefore, the assumption of normality is NOT satisfied."
  },
  {
    "objectID": "04-stats.html#plotting-residuals-q-q-plot",
    "href": "04-stats.html#plotting-residuals-q-q-plot",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Plotting Residuals: Q-Q Plot",
    "text": "Plotting Residuals: Q-Q Plot\nWe can see this better from when we plot the residuals:\n\nplot(satisfaction_country_anova, 2)"
  },
  {
    "objectID": "04-stats.html#when-the-assumptions-are-not-met",
    "href": "04-stats.html#when-the-assumptions-are-not-met",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "When the assumptions are not met…",
    "text": "When the assumptions are not met…\nWe can use Kruskal-Wallis rank sum test as an non-parametric alternative to One-Way ANOVA!\n\nkruskal.test(life_satisfaction ~ country, data = wvs_cleaned)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  life_satisfaction by country\nKruskal-Wallis chi-squared = 80.746, df = 2, p-value &lt; 2.2e-16\n\n\nOther alternative: Welch’s ANOVA for when the homoskedasticity assumption is not met.\n\noneway.test(life_satisfaction ~ country, data = wvs_cleaned, var.equal = FALSE)\n\n\n    One-way analysis of means (not assuming equal variances)\n\ndata:  life_satisfaction and country\nF = 27.783, num df = 2.0, denom df = 1710.5, p-value = 1.336e-12"
  },
  {
    "objectID": "04-stats.html#two-way-anova-sample-problem-and-result",
    "href": "04-stats.html#two-way-anova-sample-problem-and-result",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Two-Way ANOVA: Sample problem and result",
    "text": "Two-Way ANOVA: Sample problem and result\nRQ: Is there a significant difference in life satisfaction across religiousity and countries?\nLet’s visualize the data!\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = religiousity, y = life_satisfaction)) +\n    geom_boxplot() +\n    facet_wrap(~ country) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "04-stats.html#two-way-anova-sample-problem-and-result-output",
    "href": "04-stats.html#two-way-anova-sample-problem-and-result-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Two-Way ANOVA: Sample problem and result",
    "text": "Two-Way ANOVA: Sample problem and result"
  },
  {
    "objectID": "04-stats.html#conduct-the-two-way-anova-test-additive-model",
    "href": "04-stats.html#conduct-the-two-way-anova-test-additive-model",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the Two-way ANOVA test (Additive model)",
    "text": "Conduct the Two-way ANOVA test (Additive model)\n\nsatisfaction_relig_country_anova &lt;- aov(life_satisfaction ~ religiousity + country, \n                                    data = wvs_cleaned)\nsummary(satisfaction_relig_country_anova)\n\n\n\n               Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nreligiousity    3    128   42.82   13.32 1.15e-08 ***\ncountry         2    192   95.83   29.82 1.29e-13 ***\nResiduals    6397  20560    3.21                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "04-stats.html#post-hoc-test-for-two-way-anova",
    "href": "04-stats.html#post-hoc-test-for-two-way-anova",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Post-hoc test for Two-way ANOVA",
    "text": "Post-hoc test for Two-way ANOVA\n\nTukeyHSD(satisfaction_relig_country_anova)\n\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = life_satisfaction ~ religiousity + country, data = wvs_cleaned)\n\n$religiousity\n                                                diff        lwr         upr\nA religious person-Not a religious person  0.2272818  0.1003760  0.35418751\nAn atheist-Not a religious person         -0.1400866 -0.3058657  0.02569256\nDon't know-Not a religious person          0.3302655 -0.3699567  1.03048776\nAn atheist-A religious person             -0.3673683 -0.5337177 -0.20101894\nDon't know-A religious person              0.1029838 -0.5973737  0.80334122\nDon't know-An atheist                      0.4703521 -0.2380815  1.17878572\n                                              p adj\nA religious person-Not a religious person 0.0000253\nAn atheist-Not a religious person         0.1313305\nDon't know-Not a religious person         0.6191993\nAn atheist-A religious person             0.0000001\nDon't know-A religious person             0.9816251\nDon't know-An atheist                     0.3204859\n\n$country\n               diff        lwr         upr     p adj\nNZL-CAN  0.53301723  0.3565021  0.70953237 0.0000000\nSGP-CAN -0.04499362 -0.1659695  0.07598224 0.6580925\nSGP-NZL -0.57801085 -0.7703672 -0.38565452 0.0000000"
  },
  {
    "objectID": "04-stats.html#conduct-the-two-way-anova-test-with-interaction",
    "href": "04-stats.html#conduct-the-two-way-anova-test-with-interaction",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Conduct the Two-way ANOVA test (with Interaction)",
    "text": "Conduct the Two-way ANOVA test (with Interaction)\n“With interaction” means we are testing whether the effect of one variable (religiosity) on the outcome (life satisfaction) depends on the level of the other variable (country), or vice versa. For the R code, we use religiousity * country instead of religiousity + country\n\nsatisfaction_relig_country_anova &lt;- aov(life_satisfaction ~ religiousity * country, \n                                    data = wvs_cleaned)\nsummary(satisfaction_relig_country_anova)\n\n\n\n                       Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nreligiousity            3    128   42.82  13.339 1.12e-08 ***\ncountry                 2    192   95.83  29.853 1.25e-13 ***\nreligiousity:country    4     38    9.42   2.936   0.0194 *  \nResiduals            6393  20522    3.21                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "04-stats.html#interaction-plot",
    "href": "04-stats.html#interaction-plot",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Interaction plot",
    "text": "Interaction plot\nTo better see this effect, let’s plot the interaction.\n\nwvs_cleaned |&gt; \n    ggplot(aes(x = religiousity, y = life_satisfaction, \n                          group = country, color = country)) + # lines will be grouped and colored by country\n    stat_summary(fun = mean, geom = \"point\") + # Add points to show mean life_satisfaction for each religiosity by country\n    stat_summary(fun = mean, geom = \"line\") + # Connect the points with lines \n    theme_minimal()"
  },
  {
    "objectID": "04-stats.html#interaction-plot-output",
    "href": "04-stats.html#interaction-plot-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Interaction plot",
    "text": "Interaction plot"
  },
  {
    "objectID": "04-stats.html#interpreting-our-interaction-plot",
    "href": "04-stats.html#interpreting-our-interaction-plot",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Interpreting our interaction plot",
    "text": "Interpreting our interaction plot\nSome observations that we can make:\n\nNew Zealand’s pattern is distinctly different from the other two countries; NZ hows highest life satisfaction for “Not a religious person” but drops sharply for “A religious person”, while for Canada and Singapore, there is a similar patterns with peaks at “A religious person”\nThe interaction is most visible in how religious vs non-religious people differ across countries, with the largest difference between countries appears among non-religious people.\nThe relationship between religiosity and life satisfaction clearly varies by country. We know this because the lines are not parallel with each other."
  },
  {
    "objectID": "04-stats.html#learning-check-3",
    "href": "04-stats.html#learning-check-3",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Learning Check #3",
    "text": "Learning Check #3\nIs there a significant difference in political leaning between different age groups?\n\nVisualize the data as well\nTest for normality and homoskedasticity, and choose the appropriate test\n\n\n\nShow answer\npoli_age_anova &lt;- aov(political_scale ~ age_group, data = wvs_cleaned)\nsummary(poli_age_anova)\n\n\n              Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nage_group      3    260   86.62   19.87 8.16e-13 ***\nResiduals   6399  27898    4.36                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "04-stats.html#reporting-with-apatables",
    "href": "04-stats.html#reporting-with-apatables",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Reporting with apaTables",
    "text": "Reporting with apaTables\napaTables is a package that will generate APA-formatted report table for correlation, ANOVA, and regression. It has limited customisations and few varity of tables. The documentation online is for the “development” version which is not what we will get if we install normally with install.packages(), so we need to rely on the vignette more. View the documentation here\nExample: get the correlation table for political_scale, life_satisfaction, and financial_satisfaction\nlibrary(apaTables)\n\nwvs_cleaned |&gt; \n    select(life_satisfaction, financial_satisfaction, political_scale) |&gt; \n    apa.cor.table( table.number = 1, filename = \"fig-output/table-cor.doc\")"
  },
  {
    "objectID": "04-stats.html#reporting-with-gtsummary",
    "href": "04-stats.html#reporting-with-gtsummary",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Reporting with gtsummary",
    "text": "Reporting with gtsummary\nAnother popular packages is gt (stands for “great tables”) and its ‘add-on’, gtsummary. It has lots of customizations (which can get overwhelming!) but fortunately the documentation is pretty good and there are plenty of code samples. View the documentation here\nExample: get the mean differences table for political_scale, life_satisfaction, and financial_satisfaction, grouped by sex\n\nlibrary(gtsummary)\n\nwvs_cleaned |&gt; \n    dplyr::select(life_satisfaction, financial_satisfaction, political_scale, sex) |&gt; \n    tbl_summary(by = sex) |&gt; \n    add_difference()"
  },
  {
    "objectID": "04-stats.html#reporting-with-gtsummary-output",
    "href": "04-stats.html#reporting-with-gtsummary-output",
    "title": "Basic Inferential Stats in R: Correlation, T-Tests, and ANOVA",
    "section": "Reporting with gtsummary",
    "text": "Reporting with gtsummary\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMale\nN = 3,1711\nFemale\nN = 3,2321\nDifference\n\n\n\n\nlife_satisfaction\n7.00 (6.00, 8.00)\n7.00 (6.00, 8.00)\n\n\n\n\nfinancial_satisfaction\n7.00 (5.00, 8.00)\n7.00 (5.00, 8.00)\n\n\n\n\npolitical_scale\n5.00 (4.00, 7.00)\n5.00 (4.00, 6.00)\n\n\n\n\n\n1 Median (Q1, Q3)"
  },
  {
    "objectID": "coc.html",
    "href": "coc.html",
    "title": "Code of conduct",
    "section": "",
    "text": "In order to foster a positive and professional learning environment we encourage the following kinds of behaviours:\n\nUse welcoming and inclusive language\nBe respectful of different viewpoints and experiences\nGracefully accept constructive criticism\nFocus on what is best for the community\nShow courtesy and respect towards other community members\n\n(Adapted from The Carpentries’ Code of Conduct)"
  },
  {
    "objectID": "exercises.html",
    "href": "exercises.html",
    "title": "Post-workshop exercises",
    "section": "",
    "text": "Have the dplyr, tidyr, and ggplot cheatsheets ready open and ready.\n\n\nthe code below will load the packages you need:\n\nlibrary(tidyverse)\nlibrary(car)\n\n\n\n\nThe code below will load and print the first few rows of the Duncan dataset. To find out more about this dataset, type ?Duncan in your RStudio console to open the vignette.\n\nduncan &lt;- as_tibble(Duncan)\nprint(duncan)\n\n# A tibble: 45 × 4\n   type  income education prestige\n   &lt;fct&gt;  &lt;int&gt;     &lt;int&gt;    &lt;int&gt;\n 1 prof      62        86       82\n 2 prof      72        76       83\n 3 prof      75        92       90\n 4 prof      55        90       76\n 5 prof      64        86       90\n 6 prof      21        84       87\n 7 prof      64        93       93\n 8 prof      80       100       90\n 9 wc        67        87       52\n10 prof      72        86       88\n# ℹ 35 more rows\n\n\nThe code below will load and print the first few rows of the WVS dataset. To find out more about this dataset, type ?WVS in your RStudio console to open the vignette.\n\nwvs &lt;- as_tibble(WVS)\nprint(wvs)\n\n# A tibble: 5,381 × 6\n   poverty     religion degree country   age gender\n   &lt;ord&gt;       &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt;   &lt;int&gt; &lt;fct&gt; \n 1 Too Little  yes      no     USA        44 male  \n 2 About Right yes      no     USA        40 female\n 3 Too Little  yes      no     USA        36 female\n 4 Too Much    yes      yes    USA        25 female\n 5 Too Little  yes      yes    USA        39 male  \n 6 About Right yes      no     USA        80 female\n 7 Too Much    yes      no     USA        48 female\n 8 Too Little  yes      no     USA        32 male  \n 9 Too Little  yes      no     USA        74 female\n10 Too Little  yes      no     USA        30 male  \n# ℹ 5,371 more rows"
  },
  {
    "objectID": "exercises.html#prep",
    "href": "exercises.html#prep",
    "title": "Post-workshop exercises",
    "section": "",
    "text": "Have the dplyr, tidyr, and ggplot cheatsheets ready open and ready.\n\n\nthe code below will load the packages you need:\n\nlibrary(tidyverse)\nlibrary(car)\n\n\n\n\nThe code below will load and print the first few rows of the Duncan dataset. To find out more about this dataset, type ?Duncan in your RStudio console to open the vignette.\n\nduncan &lt;- as_tibble(Duncan)\nprint(duncan)\n\n# A tibble: 45 × 4\n   type  income education prestige\n   &lt;fct&gt;  &lt;int&gt;     &lt;int&gt;    &lt;int&gt;\n 1 prof      62        86       82\n 2 prof      72        76       83\n 3 prof      75        92       90\n 4 prof      55        90       76\n 5 prof      64        86       90\n 6 prof      21        84       87\n 7 prof      64        93       93\n 8 prof      80       100       90\n 9 wc        67        87       52\n10 prof      72        86       88\n# ℹ 35 more rows\n\n\nThe code below will load and print the first few rows of the WVS dataset. To find out more about this dataset, type ?WVS in your RStudio console to open the vignette.\n\nwvs &lt;- as_tibble(WVS)\nprint(wvs)\n\n# A tibble: 5,381 × 6\n   poverty     religion degree country   age gender\n   &lt;ord&gt;       &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt;   &lt;int&gt; &lt;fct&gt; \n 1 Too Little  yes      no     USA        44 male  \n 2 About Right yes      no     USA        40 female\n 3 Too Little  yes      no     USA        36 female\n 4 Too Much    yes      yes    USA        25 female\n 5 Too Little  yes      yes    USA        39 male  \n 6 About Right yes      no     USA        80 female\n 7 Too Much    yes      no     USA        48 female\n 8 Too Little  yes      no     USA        32 male  \n 9 Too Little  yes      no     USA        74 female\n10 Too Little  yes      no     USA        30 male  \n# ℹ 5,371 more rows"
  },
  {
    "objectID": "exercises.html#question-1",
    "href": "exercises.html#question-1",
    "title": "Post-workshop exercises",
    "section": "Question 1",
    "text": "Question 1\nUsing wvs dataset, filter the age column to include values that is more than 29. Then, select the columns age, degree, religion and poverty. Save the result to a new dataframe called wvs_filtered.\n\n\nShow Answer\nwvs_filtered &lt;- wvs |&gt; \n    filter(age &gt; 29) |&gt; \n    select(age, degree, religion, poverty) \n\nprint(wvs_filtered)\n\n\n# A tibble: 4,228 × 4\n     age degree religion poverty    \n   &lt;int&gt; &lt;fct&gt;  &lt;fct&gt;    &lt;ord&gt;      \n 1    44 no     yes      Too Little \n 2    40 no     yes      About Right\n 3    36 no     yes      Too Little \n 4    39 yes    yes      Too Little \n 5    80 no     yes      About Right\n 6    48 no     yes      Too Much   \n 7    32 no     yes      Too Little \n 8    74 no     yes      Too Little \n 9    30 no     yes      Too Little \n10    32 yes    yes      Too Little \n# ℹ 4,218 more rows"
  },
  {
    "objectID": "exercises.html#question-2",
    "href": "exercises.html#question-2",
    "title": "Post-workshop exercises",
    "section": "Question 2",
    "text": "Question 2\nUpdate the wvs dataset by creating a dummy-coded version of the gender variable, where male = 0 and female = 1. Save the results in a new column named gender_coded.\n\n\nShow Answer\nwvs &lt;- wvs |&gt; \n    mutate(gender_coded = if_else(gender == \"male\", 0, 1)) \n\nprint(wvs)\n\n\n# A tibble: 5,381 × 7\n   poverty     religion degree country   age gender gender_coded\n   &lt;ord&gt;       &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt;   &lt;int&gt; &lt;fct&gt;         &lt;dbl&gt;\n 1 Too Little  yes      no     USA        44 male              0\n 2 About Right yes      no     USA        40 female            1\n 3 Too Little  yes      no     USA        36 female            1\n 4 Too Much    yes      yes    USA        25 female            1\n 5 Too Little  yes      yes    USA        39 male              0\n 6 About Right yes      no     USA        80 female            1\n 7 Too Much    yes      no     USA        48 female            1\n 8 Too Little  yes      no     USA        32 male              0\n 9 Too Little  yes      no     USA        74 female            1\n10 Too Little  yes      no     USA        30 male              0\n# ℹ 5,371 more rows"
  },
  {
    "objectID": "exercises.html#question-3",
    "href": "exercises.html#question-3",
    "title": "Post-workshop exercises",
    "section": "Question 3",
    "text": "Question 3\nCreate a summary of the wvs dataset showing the number of observations for each country.\n\n\nShow Answer\nwvs |&gt; \n    count(country) \n\n\n# A tibble: 4 × 2\n  country       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Australia  1874\n2 Norway     1127\n3 Sweden     1003\n4 USA        1377"
  },
  {
    "objectID": "exercises.html#question-4",
    "href": "exercises.html#question-4",
    "title": "Post-workshop exercises",
    "section": "Question 4",
    "text": "Question 4\nUsing wvs dataset, calculate the average age for each combination of gender and degree status.\n\n\nShow Answer\nwvs |&gt; \n    group_by(gender, degree) |&gt; \n    summarise(avg_age = mean(age, na.rm = TRUE))\n\n\n`summarise()` has grouped output by 'gender'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 3\n# Groups:   gender [2]\n  gender degree avg_age\n  &lt;fct&gt;  &lt;fct&gt;    &lt;dbl&gt;\n1 female no        45.6\n2 female yes       41.0\n3 male   no        46.0\n4 male   yes       43.3"
  },
  {
    "objectID": "exercises.html#question-5",
    "href": "exercises.html#question-5",
    "title": "Post-workshop exercises",
    "section": "Question 5",
    "text": "Question 5\nUsing the wvs dataset, create a summary statistics for each country and religion (yes/no). Calculate the age mean, age median, number of observation.\n\n\nShow Answer\nwvs |&gt; \n    group_by(country, religion) %&gt;%\n    summarise(\n        avg_age = mean(age, na.rm = TRUE),\n        median_age = median(age, na.rm = TRUE),\n        n_observations = n()\n    ) \n\n\n`summarise()` has grouped output by 'country'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 5\n# Groups:   country [4]\n  country   religion avg_age median_age n_observations\n  &lt;fct&gt;     &lt;fct&gt;      &lt;dbl&gt;      &lt;dbl&gt;          &lt;int&gt;\n1 Australia no          39.9         37            375\n2 Australia yes         45.7         43           1499\n3 Norway    no          40.6         38            109\n4 Norway    yes         43.6         42           1018\n5 Sweden    no          43.7         42             15\n6 Sweden    yes         43.9         43            988\n7 USA       no          44.6         42            287\n8 USA       yes         48.9         46           1090"
  },
  {
    "objectID": "exercises.html#question-6",
    "href": "exercises.html#question-6",
    "title": "Post-workshop exercises",
    "section": "Question 6",
    "text": "Question 6\nUsing the wvs dataset, select the 10 oldest respondents from the USA. (hint: arrange() and slice())\n\n\nShow Answer\nwvs |&gt; \n    filter(country == \"USA\", age &gt; 50) |&gt; \n    arrange(desc(age)) |&gt; \n    slice(1:10)\n\n\n# A tibble: 10 × 7\n   poverty     religion degree country   age gender gender_coded\n   &lt;ord&gt;       &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt;   &lt;int&gt; &lt;fct&gt;         &lt;dbl&gt;\n 1 Too Much    no       no     USA        91 male              0\n 2 Too Little  yes      no     USA        91 male              0\n 3 Too Much    yes      no     USA        88 female            1\n 4 About Right yes      no     USA        88 male              0\n 5 Too Little  yes      yes    USA        87 female            1\n 6 Too Much    yes      no     USA        87 female            1\n 7 Too Little  yes      no     USA        87 male              0\n 8 About Right yes      no     USA        87 male              0\n 9 About Right yes      no     USA        86 female            1\n10 Too Much    yes      no     USA        86 female            1"
  },
  {
    "objectID": "exercises.html#question-7",
    "href": "exercises.html#question-7",
    "title": "Post-workshop exercises",
    "section": "Question 7",
    "text": "Question 7\nUpdate the wvs dataset by adding a new column called age_category that categorises each respondents based on the following criteria:\n\nbelow 18 = “youth” category\nbetween 18 to 34 = “young adult” category\nbetween 35 to 49 = “adult” category\nbetween 50 to 69 = “senior” category\nmore than 70 = “elderly” category\n\n\n\nShow Answer\nwvs &lt;- wvs |&gt; \n    mutate(age_category = case_when(\n        age &lt; 18 ~ \"youth\",\n        age &gt;= 18 & age &lt; 35 ~ \"young adult\",\n        age &gt;= 35 & age &lt; 50 ~ \"adult\",\n        age &gt;= 50 & age &lt; 70 ~ \"senior\",\n        age &gt;= 70 ~ \"elderly\"\n    )) \n\nprint(wvs)\n\n\n# A tibble: 5,381 × 8\n   poverty     religion degree country   age gender gender_coded age_category\n   &lt;ord&gt;       &lt;fct&gt;    &lt;fct&gt;  &lt;fct&gt;   &lt;int&gt; &lt;fct&gt;         &lt;dbl&gt; &lt;chr&gt;       \n 1 Too Little  yes      no     USA        44 male              0 adult       \n 2 About Right yes      no     USA        40 female            1 adult       \n 3 Too Little  yes      no     USA        36 female            1 adult       \n 4 Too Much    yes      yes    USA        25 female            1 young adult \n 5 Too Little  yes      yes    USA        39 male              0 adult       \n 6 About Right yes      no     USA        80 female            1 elderly     \n 7 Too Much    yes      no     USA        48 female            1 adult       \n 8 Too Little  yes      no     USA        32 male              0 young adult \n 9 Too Little  yes      no     USA        74 female            1 elderly     \n10 Too Little  yes      no     USA        30 male              0 young adult \n# ℹ 5,371 more rows"
  },
  {
    "objectID": "exercises.html#question-8",
    "href": "exercises.html#question-8",
    "title": "Post-workshop exercises",
    "section": "Question 8",
    "text": "Question 8\nRecreate the following visualization:\n\n\nShow Answer\nwvs |&gt; ggplot(aes(x = country, fill = poverty)) +\n    geom_bar(position = \"dodge\") +\n    labs(title = \"Distribution of Poverty Opinions Across Countries\",\n       x = \"Country\", \n       y = \"Count\", \n       fill = \"Poverty Opinion\") +\n    theme_minimal()"
  },
  {
    "objectID": "exercises.html#question-9",
    "href": "exercises.html#question-9",
    "title": "Post-workshop exercises",
    "section": "Question 9",
    "text": "Question 9\nRecreate the following visualization:\n\n\nShow Answer\nwvs |&gt; \n    ggplot(aes(x = country, fill = degree)) +\n    geom_bar(position = \"fill\") +\n    labs(title = \"Proportion of Degree Status by Country\", \n       x = \"Country\", y = \"Count\", fill = \"Degree Status\") +\n    theme_minimal()"
  },
  {
    "objectID": "exercises.html#question-10",
    "href": "exercises.html#question-10",
    "title": "Post-workshop exercises",
    "section": "Question 10",
    "text": "Question 10\nRecreate the following visualization:\n\n\nShow Answer\nwvs |&gt; ggplot(aes(x = country, y = age)) +\n    geom_boxplot() +\n    labs(title = \"Age Distribution by Country\", x = \"Country\", y = \"Age\") +\n    theme_minimal() +\n    theme(legend.position = \"none\")"
  },
  {
    "objectID": "exercises.html#question-11",
    "href": "exercises.html#question-11",
    "title": "Post-workshop exercises",
    "section": "Question 11",
    "text": "Question 11\nRecreate the following visualization:\n\n\nShow Answer\nwvs |&gt; \n    ggplot(aes(x = country, y = age)) +\n    geom_boxplot() +\n    facet_wrap(~ religion) +\n    labs(title = \"Age Distribution by Country and Religion\",\n       x = \"Country\", y = \"Age\") +\n    theme_minimal()"
  },
  {
    "objectID": "exercises.html#question-12",
    "href": "exercises.html#question-12",
    "title": "Post-workshop exercises",
    "section": "Question 12",
    "text": "Question 12\nRecreate the following visualization using duncan dataset:\n\n\nShow Answer\nduncan |&gt; \n    ggplot(aes(x = income, y = prestige, color = type)) +\n    geom_jitter() +\n    labs(title = \"Occupation Prestige vs. Income\",\n       x = \"Income\", \n       y = \"Prestige Score\",\n       color = \"Occupation Type\") +\n    theme_minimal()"
  },
  {
    "objectID": "exercises.html#question-13",
    "href": "exercises.html#question-13",
    "title": "Post-workshop exercises",
    "section": "Question 13",
    "text": "Question 13\nRecreate the following visualization using duncan dataset:\n\n\nShow Answer\nduncan |&gt; \n    ggplot(aes(x = type, y = income)) +\n    geom_boxplot() +\n    labs(title = \"Income Distribution by Occupation Type\",\n        x = \"Occupation Type\",\n        y = \"Income\") +\n    theme_minimal()"
  },
  {
    "objectID": "exercises.html#question-14",
    "href": "exercises.html#question-14",
    "title": "Post-workshop exercises",
    "section": "Question 14",
    "text": "Question 14\nRecreate the following visualization using duncan dataset:\n\n\nShow Answer\nduncan |&gt; \n    ggplot(aes(x = prestige, y = income, color = type)) +\n    geom_jitter() +\n    geom_smooth(method = \"lm\") +\n    labs(\n        title = \"Relationship between Prestige and Income\",\n        subtitle = \"Grouped by Occupation Type\",\n        x = \"Prestige Score\",\n        y = \"Income\",\n        color = \"Occupation Type\"\n    ) + \n    theme_minimal()\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "exercises.html#question-15",
    "href": "exercises.html#question-15",
    "title": "Post-workshop exercises",
    "section": "Question 15",
    "text": "Question 15\nUsing duncan dataset:\n\nExamine the correlation between prestige scores and education.\nAnalyze the relationship between income and prestige scores.\n\n\n\nShow Answer\ncor.test(duncan$prestige, duncan$education)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  duncan$prestige and duncan$education\nt = 10.668, df = 43, p-value = 1.171e-13\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.7445746 0.9163112\nsample estimates:\n      cor \n0.8519156 \n\n\nShow Answer\ncor.test(duncan$prestige, duncan$income)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  duncan$prestige and duncan$income\nt = 10.062, df = 43, p-value = 7.144e-13\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.7217665 0.9080298\nsample estimates:\n      cor \n0.8378014"
  },
  {
    "objectID": "exercises.html#question-16",
    "href": "exercises.html#question-16",
    "title": "Post-workshop exercises",
    "section": "Question 16",
    "text": "Question 16\nUsing duncan dataset, compare prestige scores across different occupational categories using ANOVA.\n\n\nShow Answer\nduncan_anova &lt;- aov(prestige ~ type, data=duncan)\nsummary(duncan_anova)\n\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ntype         2  33090   16545   65.57 1.21e-13 ***\nResiduals   42  10598     252                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "exercises.html#question-17",
    "href": "exercises.html#question-17",
    "title": "Post-workshop exercises",
    "section": "Question 17",
    "text": "Question 17\nUsing duncan dataset, create a regression model that predicts income based on occupational prestige and education scores.\n\nlibrary(huxtable)\n\n\n\nShow Answer\nduncan_model &lt;- lm(income ~ prestige + education, data = duncan)\nhuxreg(\"income\" = duncan_model)\n\n\n\n\nincome\n\n(Intercept)10.426 *  \n\n(4.164)   \n\nprestige0.624 ***\n\n(0.125)   \n\neducation0.032    \n\n(0.132)   \n\nN45        \n\nR20.702    \n\nlogLik-179.902    \n\nAIC367.805    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05."
  },
  {
    "objectID": "exercises.html#question-18",
    "href": "exercises.html#question-18",
    "title": "Post-workshop exercises",
    "section": "Question 18",
    "text": "Question 18\nUsing the wvs dataset, examine the relationship between religion and poverty perception.\n\n\nShow Answer\nwvs_chisq &lt;- chisq.test(table(wvs$religion, wvs$poverty))\nprint(wvs_chisq)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  table(wvs$religion, wvs$poverty)\nX-squared = 0.083005, df = 2, p-value = 0.9593"
  },
  {
    "objectID": "exercises.html#question-19",
    "href": "exercises.html#question-19",
    "title": "Post-workshop exercises",
    "section": "Question 19",
    "text": "Question 19\nUsing the wvs dataset, examine whether there is a significant difference in the average age between individuals with and without a university degree.\n\n\nShow Answer\nwvs_ttest &lt;- t.test(age ~ degree, data = wvs)\nprint(wvs_ttest)\n\n\n\n    Welch Two Sample t-test\n\ndata:  age by degree\nt = 7.0571, df = 2029, p-value = 2.325e-12\nalternative hypothesis: true difference in means between group no and group yes is not equal to 0\n95 percent confidence interval:\n 2.674321 4.732708\nsample estimates:\n mean in group no mean in group yes \n         45.82775          42.12423"
  },
  {
    "objectID": "exercises.html#question-20",
    "href": "exercises.html#question-20",
    "title": "Post-workshop exercises",
    "section": "Question 20",
    "text": "Question 20\nUsing wvs dataset, compare the mean of age across different countries and age categories (see Question 7 to create age_category), and investigate if there is any significant difference. Conduct the post-hoc test if needed.\n\n\nShow Answer\nwvs_anova &lt;- aov(age ~ country + age_category, data = wvs)\nsummary(wvs_anova)\n\n\n               Df  Sum Sq Mean Sq F value Pr(&gt;F)    \ncountry         3   17399    5800   235.9 &lt;2e-16 ***\nage_category    3 1424858  474953 19319.9 &lt;2e-16 ***\nResiduals    5374  132113      25                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "Further readings if you’d like to deepen your knowledge and skill after the workshop:\n\n\nIsmay, C., & Kim, A. Y. (2024). Statistical inference via data science. https://moderndive.com/This book offers a gentle introduction to R, while also covering foundational research methods such as sampling, hypothesis testing, and making inferences. I really like how it combines both programming and research basics; very suitable for beginners!\n\n\nWickham, H., Çetinkaya-Rundel, M., & Garrett Grolemund. (2024). R for data science (2e) (2nd ed.). https://r4ds.hadley.nz/A great book for R beginners! It introduces the popular tidyverse package and explains how to make the most of it. It also offers useful tips for managing projects and outlines recommended steps for transforming raw data into meaningful insights and discoveries.\n\n\nWilke, C. O. (2024). Fundamentals of data visualization. https://clauswilke.com/dataviz/I noticed that some of you are particularly interested in visualizations. While I couldn’t cover more of this topic during the workshops, if you’re eager to dive deeper, this book does a great job of covering foundational theories that I believe are both important and helpful."
  }
]