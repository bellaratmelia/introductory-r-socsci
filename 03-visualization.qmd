---
title: "Data Visualization and Descriptive Stats"
author: "Bella Ratmelia"
format: revealjs
---

## Today's Outline

1.  Descriptive Statistics
2.  Data Visualization in ggplot using Chile voting data, including guidelines on how to choose the appropriate visualization.

## Checklist when you start RStudio

-   Load the project we created last session and open the R script file.
-   Make sure that `Environment` panel is empty (click on broom icon to clean it up)
-   Clear the `Console` and `Plots` too.
-   Re-run the `library(tidyverse)` and `read_csv` portion in the previous session

## Refresher: Loading from CSV into a dataframe

Use `read_csv` from `readr` package (part of `tidyverse`) to load our data into a dataframe

```{r}
#| echo: true
#| label: load-data
#| message: false
#| output: false

# import tidyverse library
library(tidyverse)

# read the CSV with Chile voting data
chile_data <- read_csv("data/chile_voting.csv")

# peek at the data, pay attention to the data types!
glimpse(chile_data)
```

## Introduction to Descriptive Statistics

Descriptive statistics provide summaries about the sample and observations made. These summaries can be quantitative (summary statistics) or visual (graphs). Let's explore some basic R functions for descriptive statistics using our Chile voting data.

## Basic R Functions for Descriptive Statistics

We'll cover the following functions:

-   `mean()`: arithmetic average
-   `median()`: middle value
-   `sd()`: standard deviation
-   `var()`: variance
-   `range()`: range of values
-   `IQR()`: interquartile range
-   `summary()`: provides a summary of descriptive statistics
-   `Mode()` function from `DescTools` package: the most frequently occuring value

**Note**: R doesn't have built-in functions for mode, so we need `DescTools` package to get this function!

## Exploring Income Distribution

Let's start by examining the `income` variable in our dataset.

```{r}
#| echo: true

library(DescTools)

# Basic statistics
mean_income <- mean(chile_data$income, na.rm = TRUE)
median_income <- median(chile_data$income, na.rm = TRUE)
sd_income <- sd(chile_data$income, na.rm = TRUE)
range_income <- range(chile_data$income, na.rm = TRUE)
iqr_income <- IQR(chile_data$income, na.rm = TRUE)
mode_income <- DescTools::Mode(chile_data$income, na.rm = TRUE)

# Print results
cat("Mean income:", mean_income, "\n")
cat("Median income:", median_income, "\n")
cat("Standard deviation of income:", sd_income, "\n")
cat("Range of income:", range_income[1], "to", range_income[2], "\n")
cat("Interquartile range of income:", iqr_income, "\n")
cat("Most frequently occuring income:", mode_income, "\n")

# Summary statistics
summary(chile_data$income)
```

## Interpreting Income Statistics

Some possible interpretation:

-   The mean income is higher than the median, suggesting a right-skewed distribution.
-   The standard deviation indicates the spread of incomes around the mean.
-   The range shows the full spread of incomes from lowest to highest.
-   The IQR represents the middle 50% of incomes, less affected by outliers than the range.

It's much easier if we have a graph to visualize these interpretations!

## Visualizing data with ggplot

-   `ggplot` is plotting package that is included inside `tidyverse` package

-   works best with data in the long format, i.e., a column for all the dimensions/measures and another column for the value for each dimension/measure.

[![](images/ggplot-cheatsheet.jpg)](https://rstudio.github.io/cheatsheets/data-visualization.pdf)

[ggplot documentation link](https://rstudio.github.io/cheatsheets/html/data-visualization.html)

## Anatomy of ggplot code

Charts built with ggplot must include the following:

``` r
chile_data |> # <1>
    ggplot(aes(x = age, y = income)) + # <2>
    geom_point() # <3>
```

1.  **Data** - the dataframe/tibble to visualize.

2.  **Aesthetic mappings (aes)** - describes which variables are mapped to the x, y axes, alpha (transparency) and other visual aesthetics.

3.  **Geometric objects (geom)** - describes how values are rendered; as bars, scatterplot, lines, etc.

## Going back to our data

Our PI has asked us to generate visualizations to address these questions about the Chile voting data. The PI also has asked us to write down our interpretation of the visualizations.

**Univariate visualizations:**

1.  What's the distribution of respondents for each `region`?
2.  What's the distribution of `age` of our respondents?

**Bivariate/multivariate visualizations:**

3.  Compare the distribution of `income` across different `education` levels
4.  Visualize and explore the relationship between `age` and `income`. Don't forget to label the graph!
5.  Are there any outliers in the `statusquo` scores?
6.  Explore the distribution of votes (`vote`) across different regions (`region`).

::: callout-tip
**A strategy I'd like to recommend:** briefly read over the `ggplot2` documentation and have them open on a separate tab. Figure out the type of variables you need to visualize (discrete or continuous) to quickly identify which visualization would make sense.
:::

## Task #1: distribution of regions

What's the distribution of respondents for each `region`?

```{r}
#| echo: true

# simple bar chart 
chile_data |> 
    ggplot(aes(x = region)) +
    geom_bar(fill = "skyblue") +
    labs(title = "Distribution of Respondents by Region",
         x = "Region",
         y = "Number of Respondents")
```

## Task #2: distribution of respondent ages

What's the distribution of `age` of our respondents?

```{r}
#| echo: true

# histogram
chile_data |> 
    ggplot(aes(x = age)) +
    geom_histogram(color = "black", fill = "lightgreen", binwidth = 5) +
    labs(title = "Distribution of Respondent Ages",
         x = "Age",
         y = "Count")
```

## Task #3: income across education levels

Compare the distribution of `income` across different `education` levels.

```{r}
#| echo: true

# boxplot layered with jittered points
chile_data |> 
    ggplot(aes(x = education, y = income)) +
    geom_boxplot() + 
    geom_jitter(alpha = 0.2, width = 0.2) +
    labs(title = "Distribution of Income by Education Level",
         x = "Education Level",
         y = "Income (Pesos)")
```

------------------------------------------------------------------------

### Anatomy of a boxplot

![](images/boxplot_explanation.png){fig-align="center"}

Image source: https://www.leansigmacorporation.com/box-plot-with-minitab/

## Task #4: relationship between age and income

Visualize and explore the relationship between `age` and `income`. Do you see any trend or differences between `sex`? Don't forget to label the graph!

```{r}
#| echo: true
#| output: true

# scatterplot with trendline
chile_data |> 
    ggplot(aes(x = age, y = income, 
               color = sex, 
               shape = sex)) +
    geom_jitter() +
    geom_smooth(method = "lm") + 
    labs(x = "Age", 
         y = "Income (Pesos)",
         title = "Relationship between Age and Income",
         subtitle = "Comparison between sexes",
         caption = "Data from 1988 Chilean national survey")
```

------------------------------------------------------------------------

We can layer two (or more) geom objects!

Use `labs` to specify the title, axis labels, subtitles, captions, etc.

``` r
# scatterplot with trendline
chile_data |> 
    ggplot(aes(x = age, y = income, 
               color = sex, 
               shape = sex)) +
    geom_jitter() +
    geom_smooth(method = "lm") + 
    labs(x = "Age", 
         y = "Income (Pesos)",
         title = "Relationship between Age and Income",
         subtitle = "Comparison between sexes",
         caption = "Data from 1988 Chilean national survey")
```

## Task #5: Outliers in statusquo score

Are there any outliers in the `statusquo` scores?

```{r}
#| echo: true

chile_data |> 
    ggplot(aes(y = statusquo)) + 
    geom_boxplot() +
    labs(title = "Distribution of Status Quo Scores",
         y = "Status Quo Score")
```

## Task #6: Distribution of votes across regions

Explore the distribution of votes (`vote`) across different regions (`region`).

```{r}
#| echo: true

# Prepare data
vote_distribution <- chile_data |>
    group_by(region, vote) |>
    summarise(count = n(), .groups = 'drop') |>
    mutate(percentage = count / sum(count) * 100)

# Create stacked bar chart
ggplot(vote_distribution, aes(x = region, y = percentage, fill = vote)) +
    geom_bar(stat = "identity") +
    labs(title = "Distribution of Votes Across Regions",
         x = "Region",
         y = "Percentage",
         fill = "Vote") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Group Exercises (solo attempts ok)

1.  Explore the relationship between `age` and `statusquo`. Is there a trend or relationship there and does the trend differ between different `education` levels?
2.  Visualize the distribution of `income` across different `sex` with a violin plot.

**Make sure to give the graph proper title and labels on both axis!**

------------------------------------------------------------------------

### Question #1 answer

```{r}
#| echo: true

chile_data |> 
    ggplot(aes(x = age, y = statusquo, 
               color = education)) +
    geom_jitter() +
    geom_smooth(method = "lm") +
    labs(title = "Relationship between Age and Status Quo Support",
         subtitle = "By Education Level",
         x = "Age",
         y = "Status Quo Support")
```

------------------------------------------------------------------------

### Question #2 answer

```{r}
#| echo: true

chile_data |> 
    ggplot(aes(x = sex, y = income)) +
    geom_violin() +
    geom_jitter(alpha = 0.2) +
    labs(title = "Distribution of Income by Sex",
         x = "Sex",
         y = "Income (Pesos)")
```

## Strategy for data visualization with ggplot

1.  Have the ggplot documentation/cheatsheet open
2.  Decide on how many variables are involved. Is it just one? two? more than two?
3.  Determine whether the variables are categorical or continuous. If you have more than one, are they both categorical? one categorical + one continuous?
4.  Refer to the documentation to see which type of visualization would make sense for your variables.

# End of Session 3!

Check out the [R Graph gallery](https://r-graph-gallery.com/) for inspiration and code samples!

Next session: statistical tests in R using Chile voting data
